

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar  8 17:40:51 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 1.41
    27                           ; Generated 25/01/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4620 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	nvCOMRAM
    62  000042                     __pnvCOMRAM:
    63                           	opt stack 0
    64  000042                     _freq:
    65                           	opt stack 0
    66  000042                     	ds	4
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISD	set	3989
    69  0000                     _CCPR2L	set	4027
    70  0000                     _CCPR1L	set	4030
    71  0000                     _PR2	set	4043
    72  0000                     _RD3	set	31771
    73  0000                     _RD2	set	31770
    74  0000                     _RD1	set	31769
    75  0000                     _RD0	set	31768
    76  0000                     _TRISC1	set	31905
    77  0000                     _T2CKPS1	set	32337
    78  0000                     _T2CKPS0	set	32336
    79  0000                     _CCP2M2	set	32210
    80  0000                     _CCP2M3	set	32211
    81  0000                     _TRISC2	set	31906
    82  0000                     _TMR2ON	set	32338
    83  0000                     _CCP1M2	set	32234
    84  0000                     _CCP1M3	set	32235
    85  0000                     _CCP2Y	set	32212
    86  0000                     _CCP2X	set	32213
    87  0000                     _CCP1Y	set	32236
    88  0000                     _CCP1X	set	32237
    89                           
    90                           ; #config settings
    91  0000                     
    92                           	psect	cinit
    93  00F7F8                     __pcinit:
    94                           	opt stack 0
    95  00F7F8                     start_initialization:
    96                           	opt stack 0
    97  00F7F8                     __initialization:
    98                           	opt stack 0
    99  00F7F8                     end_of_initialization:
   100                           	opt stack 0
   101  00F7F8                     __end_of__initialization:
   102                           	opt stack 0
   103  00F7F8  0100               	movlb	0
   104  00F7FA  EF94  F07E         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	cstackCOMRAM
   107  000001                     __pcstackCOMRAM:
   108                           	opt stack 0
   109  000001                     ?___ftpack:
   110                           	opt stack 0
   111  000001                     ?___aldiv:
   112                           	opt stack 0
   113  000001                     ___ftpack@arg:
   114                           	opt stack 0
   115  000001                     ___aldiv@dividend:
   116                           	opt stack 0
   117                           
   118                           ; 4 bytes @ 0x0
   119  000001                     	ds	3
   120  000004                     ___ftpack@exp:
   121                           	opt stack 0
   122                           
   123                           ; 1 bytes @ 0x3
   124  000004                     	ds	1
   125  000005                     ___ftpack@sign:
   126                           	opt stack 0
   127  000005                     ___aldiv@divisor:
   128                           	opt stack 0
   129                           
   130                           ; 4 bytes @ 0x4
   131  000005                     	ds	1
   132  000006                     ??___ftpack:
   133                           
   134                           ; 1 bytes @ 0x5
   135  000006                     	ds	3
   136  000009                     ?___lwtoft:
   137                           	opt stack 0
   138  000009                     ___aldiv@counter:
   139                           	opt stack 0
   140  000009                     ___lwtoft@c:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0x8
   144  000009                     	ds	1
   145  00000A                     ___aldiv@sign:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x9
   149  00000A                     	ds	1
   150  00000B                     ___aldiv@quotient:
   151                           	opt stack 0
   152                           
   153                           ; 4 bytes @ 0xA
   154  00000B                     	ds	1
   155  00000C                     ?___ftdiv:
   156                           	opt stack 0
   157  00000C                     ___ftdiv@f1:
   158                           	opt stack 0
   159                           
   160                           ; 3 bytes @ 0xB
   161  00000C                     	ds	3
   162  00000F                     ?_PWM_Max_Duty:
   163                           	opt stack 0
   164  00000F                     ___ftdiv@f2:
   165                           	opt stack 0
   166  00000F                     PWM1_Init@fre:
   167                           	opt stack 0
   168  00000F                     PWM2_Init@fre:
   169                           	opt stack 0
   170                           
   171                           ; 4 bytes @ 0xE
   172  00000F                     	ds	2
   173  000011                     ??_PWM_Max_Duty:
   174                           
   175                           ; 1 bytes @ 0x10
   176  000011                     	ds	1
   177  000012                     ??___ftdiv:
   178                           
   179                           ; 1 bytes @ 0x11
   180  000012                     	ds	1
   181  000013                     ??_PWM1_Init:
   182  000013                     ??_PWM2_Init:
   183                           
   184                           ; 1 bytes @ 0x12
   185  000013                     	ds	2
   186  000015                     ?___awtoft:
   187                           	opt stack 0
   188  000015                     ___ftdiv@cntr:
   189                           	opt stack 0
   190  000015                     ___awtoft@c:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x14
   194  000015                     	ds	1
   195  000016                     ___ftdiv@f3:
   196                           	opt stack 0
   197                           
   198                           ; 3 bytes @ 0x15
   199  000016                     	ds	2
   200  000018                     ___awtoft@sign:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x17
   204  000018                     	ds	1
   205  000019                     ___ftdiv@exp:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x18
   209  000019                     	ds	1
   210  00001A                     ___ftdiv@sign:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x19
   214  00001A                     	ds	1
   215  00001B                     ?___ftmul:
   216                           	opt stack 0
   217  00001B                     ___ftmul@f1:
   218                           	opt stack 0
   219                           
   220                           ; 3 bytes @ 0x1A
   221  00001B                     	ds	3
   222  00001E                     ___ftmul@f2:
   223                           	opt stack 0
   224                           
   225                           ; 3 bytes @ 0x1D
   226  00001E                     	ds	3
   227  000021                     ??___ftmul:
   228                           
   229                           ; 1 bytes @ 0x20
   230  000021                     	ds	3
   231  000024                     ___ftmul@exp:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x23
   235  000024                     	ds	1
   236  000025                     ___ftmul@f3_as_product:
   237                           	opt stack 0
   238                           
   239                           ; 3 bytes @ 0x24
   240  000025                     	ds	3
   241  000028                     ___ftmul@cntr:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x27
   245  000028                     	ds	1
   246  000029                     ___ftmul@sign:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x28
   250  000029                     	ds	1
   251  00002A                     ?___fttol:
   252                           	opt stack 0
   253  00002A                     ___fttol@f1:
   254                           	opt stack 0
   255                           
   256                           ; 3 bytes @ 0x29
   257  00002A                     	ds	4
   258  00002E                     ??___fttol:
   259                           
   260                           ; 1 bytes @ 0x2D
   261  00002E                     	ds	5
   262  000033                     ___fttol@sign1:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x32
   266  000033                     	ds	1
   267  000034                     ___fttol@lval:
   268                           	opt stack 0
   269                           
   270                           ; 4 bytes @ 0x33
   271  000034                     	ds	4
   272  000038                     ___fttol@exp1:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x37
   276  000038                     	ds	1
   277  000039                     PWM1_Duty@duty:
   278                           	opt stack 0
   279  000039                     PWM2_Duty@duty:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x38
   283  000039                     	ds	2
   284  00003B                     ??_PWM1_Duty:
   285  00003B                     ??_PWM2_Duty:
   286                           
   287                           ; 1 bytes @ 0x3A
   288  00003B                     	ds	2
   289  00003D                     ??_main:
   290                           
   291                           ; 1 bytes @ 0x3C
   292  00003D                     	ds	1
   293  00003E                     main@i:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x3D
   297  00003E                     	ds	2
   298  000040                     main@j:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0x3F
   302  000040                     	ds	2
   303                           
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 104 in file "newmain.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  j               2   63[COMRAM] unsigned int 
   314 ;;  i               2   61[COMRAM] unsigned int 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;Total ram usage:        5 bytes
   329 ;; Hardware stack levels required when called:    3
   330 ;; This function calls:
   331 ;;		_PWM1_Duty
   332 ;;		_PWM1_Init
   333 ;;		_PWM1_Start
   334 ;;		_PWM2_Duty
   335 ;;		_PWM2_Init
   336 ;;		_PWM2_Start
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text0
   343  00FD28                     __ptext0:
   344                           	opt stack 0
   345  00FD28                     _main:
   346                           	opt stack 28
   347                           
   348                           ;newmain.c: 106: unsigned int i=0,j=0;
   349                           
   350                           ;incstack = 0
   351  00FD28  0E00               	movlw	0
   352  00FD2A  6E3F               	movwf	main@i+1,c
   353  00FD2C  0E00               	movlw	0
   354  00FD2E  6E3E               	movwf	main@i,c
   355  00FD30  0E00               	movlw	0
   356  00FD32  6E41               	movwf	main@j+1,c
   357  00FD34  0E00               	movlw	0
   358  00FD36  6E40               	movwf	main@j,c
   359                           
   360                           ;newmain.c: 107: PWM1_Init(5000);
   361  00FD38  0E88               	movlw	136
   362  00FD3A  6E0F               	movwf	PWM1_Init@fre,c
   363  00FD3C  0E13               	movlw	19
   364  00FD3E  6E10               	movwf	PWM1_Init@fre+1,c
   365  00FD40  0E00               	movlw	0
   366  00FD42  6E11               	movwf	PWM1_Init@fre+2,c
   367  00FD44  0E00               	movlw	0
   368  00FD46  6E12               	movwf	PWM1_Init@fre+3,c
   369  00FD48  EC60  F07C         	call	_PWM1_Init	;wreg free
   370                           
   371                           ;newmain.c: 108: PWM2_Init(5000);
   372  00FD4C  0E88               	movlw	136
   373  00FD4E  6E0F               	movwf	PWM2_Init@fre,c
   374  00FD50  0E13               	movlw	19
   375  00FD52  6E10               	movwf	PWM2_Init@fre+1,c
   376  00FD54  0E00               	movlw	0
   377  00FD56  6E11               	movwf	PWM2_Init@fre+2,c
   378  00FD58  0E00               	movlw	0
   379  00FD5A  6E12               	movwf	PWM2_Init@fre+3,c
   380  00FD5C  EC95  F07C         	call	_PWM2_Init	;wreg free
   381                           
   382                           ;newmain.c: 109: TRISD = 0xFF;
   383  00FD60  6895               	setf	3989,c	;volatile
   384                           
   385                           ;newmain.c: 110: TRISB = 0;
   386  00FD62  0E00               	movlw	0
   387  00FD64  6E93               	movwf	3987,c	;volatile
   388                           
   389                           ;newmain.c: 111: PWM1_Duty(0);
   390  00FD66  0E00               	movlw	0
   391  00FD68  6E3A               	movwf	PWM1_Duty@duty+1,c
   392  00FD6A  0E00               	movlw	0
   393  00FD6C  6E39               	movwf	PWM1_Duty@duty,c
   394  00FD6E  ECCA  F07C         	call	_PWM1_Duty	;wreg free
   395                           
   396                           ;newmain.c: 112: PWM2_Duty(0);
   397  00FD72  0E00               	movlw	0
   398  00FD74  6E3A               	movwf	PWM2_Duty@duty+1,c
   399  00FD76  0E00               	movlw	0
   400  00FD78  6E39               	movwf	PWM2_Duty@duty,c
   401  00FD7A  EC17  F07D         	call	_PWM2_Duty	;wreg free
   402                           
   403                           ;newmain.c: 113: PWM1_Start();
   404  00FD7E  ECFF  F07B         	call	_PWM1_Start	;wreg free
   405                           
   406                           ;newmain.c: 114: PWM2_Start();
   407  00FD82  EC04  F07C         	call	_PWM2_Start	;wreg free
   408  00FD86                     l1306:
   409                           
   410                           ;newmain.c: 116: {
   411                           ;newmain.c: 117: if(RD0 == 0 && i<1000)
   412  00FD86  B083               	btfsc	3971,0,c	;volatile
   413  00FD88  D00C               	goto	l1312
   414  00FD8A  0EE8               	movlw	232
   415  00FD8C  5C3E               	subwf	main@i,w,c
   416  00FD8E  0E03               	movlw	3
   417  00FD90  583F               	subwfb	main@i+1,w,c
   418  00FD92  B0D8               	btfsc	status,0,c
   419  00FD94  D006               	goto	l1312
   420                           
   421                           ;newmain.c: 118: i=i+10;
   422  00FD96  0E0A               	movlw	10
   423  00FD98  243E               	addwf	main@i,w,c
   424  00FD9A  6E3E               	movwf	main@i,c
   425  00FD9C  0E00               	movlw	0
   426  00FD9E  203F               	addwfc	main@i+1,w,c
   427  00FDA0  6E3F               	movwf	main@i+1,c
   428  00FDA2                     l1312:
   429                           
   430                           ;newmain.c: 119: if(RD1 == 0 && i>0)
   431  00FDA2  B283               	btfsc	3971,1,c	;volatile
   432  00FDA4  D00A               	goto	l1318
   433  00FDA6  503E               	movf	main@i,w,c
   434  00FDA8  103F               	iorwf	main@i+1,w,c
   435  00FDAA  B4D8               	btfsc	status,2,c
   436  00FDAC  D006               	goto	l1318
   437                           
   438                           ;newmain.c: 120: i=i-10;
   439  00FDAE  0EF6               	movlw	246
   440  00FDB0  243E               	addwf	main@i,w,c
   441  00FDB2  6E3E               	movwf	main@i,c
   442  00FDB4  0EFF               	movlw	255
   443  00FDB6  203F               	addwfc	main@i+1,w,c
   444  00FDB8  6E3F               	movwf	main@i+1,c
   445  00FDBA                     l1318:
   446                           
   447                           ;newmain.c: 121: if(RD2 == 0 && j<1000)
   448  00FDBA  B483               	btfsc	3971,2,c	;volatile
   449  00FDBC  D00C               	goto	l1324
   450  00FDBE  0EE8               	movlw	232
   451  00FDC0  5C40               	subwf	main@j,w,c
   452  00FDC2  0E03               	movlw	3
   453  00FDC4  5841               	subwfb	main@j+1,w,c
   454  00FDC6  B0D8               	btfsc	status,0,c
   455  00FDC8  D006               	goto	l1324
   456                           
   457                           ;newmain.c: 122: j=j+10;
   458  00FDCA  0E0A               	movlw	10
   459  00FDCC  2440               	addwf	main@j,w,c
   460  00FDCE  6E40               	movwf	main@j,c
   461  00FDD0  0E00               	movlw	0
   462  00FDD2  2041               	addwfc	main@j+1,w,c
   463  00FDD4  6E41               	movwf	main@j+1,c
   464  00FDD6                     l1324:
   465                           
   466                           ;newmain.c: 123: if(RD3 == 0 && j>0)
   467  00FDD6  B683               	btfsc	3971,3,c	;volatile
   468  00FDD8  D00A               	goto	l1330
   469  00FDDA  5040               	movf	main@j,w,c
   470  00FDDC  1041               	iorwf	main@j+1,w,c
   471  00FDDE  B4D8               	btfsc	status,2,c
   472  00FDE0  D006               	goto	l1330
   473                           
   474                           ;newmain.c: 124: j=j-10;
   475  00FDE2  0EF6               	movlw	246
   476  00FDE4  2440               	addwf	main@j,w,c
   477  00FDE6  6E40               	movwf	main@j,c
   478  00FDE8  0EFF               	movlw	255
   479  00FDEA  2041               	addwfc	main@j+1,w,c
   480  00FDEC  6E41               	movwf	main@j+1,c
   481  00FDEE                     l1330:
   482                           
   483                           ;newmain.c: 125: PWM1_Duty(i);
   484  00FDEE  C03E  F039         	movff	main@i,PWM1_Duty@duty
   485  00FDF2  C03F  F03A         	movff	main@i+1,PWM1_Duty@duty+1
   486  00FDF6  ECCA  F07C         	call	_PWM1_Duty	;wreg free
   487                           
   488                           ;newmain.c: 126: PWM2_Duty(j);
   489  00FDFA  C040  F039         	movff	main@j,PWM2_Duty@duty
   490  00FDFE  C041  F03A         	movff	main@j+1,PWM2_Duty@duty+1
   491  00FE02  EC17  F07D         	call	_PWM2_Duty	;wreg free
   492                           
   493                           ;newmain.c: 128: _delay((unsigned long)((50)*(10000000/4000.0)));
   494  00FE06  0EA3               	movlw	163
   495  00FE08  6E3D               	movwf	??_main& (0+255),c
   496  00FE0A  0E55               	movlw	85
   497  00FE0C                     u1077:
   498  00FE0C  2EE8               	decfsz	wreg,f,c
   499  00FE0E  D7FE               	bra	u1077
   500  00FE10  2E3D               	decfsz	??_main& (0+255),f,c
   501  00FE12  D7FC               	bra	u1077
   502  00FE14  F000               	nop	
   503                           
   504                           ;newmain.c: 129: }while(1);
   505  00FE16  D7B7               	goto	l1306
   506  00FE18                     __end_of_main:
   507                           	opt stack 0
   508                           wreg	equ	0xFE8
   509                           status	equ	0xFD8
   510                           
   511 ;; *************** function _PWM2_Start *****************
   512 ;; Defined at:
   513 ;;		line 80 in file "newmain.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  2   73[None  ] int 
   520 ;; Registers used:
   521 ;;		None
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text1
   541  00F808                     __ptext1:
   542                           	opt stack 0
   543  00F808                     _PWM2_Start:
   544                           	opt stack 30
   545                           
   546                           ;newmain.c: 82: CCP2M3 = 1;
   547                           
   548                           ;incstack = 0
   549  00F808  86BA               	bsf	4026,3,c	;volatile
   550                           
   551                           ;newmain.c: 83: CCP2M2 = 1;
   552  00F80A  84BA               	bsf	4026,2,c	;volatile
   553                           
   554                           ;newmain.c: 88: T2CKPS0 = 1;
   555  00F80C  80CA               	bsf	4042,0,c	;volatile
   556                           
   557                           ;newmain.c: 89: T2CKPS1 = 0;
   558  00F80E  92CA               	bcf	4042,1,c	;volatile
   559                           
   560                           ;newmain.c: 94: TMR2ON = 1;
   561  00F810  84CA               	bsf	4042,2,c	;volatile
   562                           
   563                           ;newmain.c: 95: TRISC1 = 0;
   564  00F812  9294               	bcf	3988,1,c	;volatile
   565  00F814  0012               	return		;funcret
   566  00F816                     __end_of_PWM2_Start:
   567                           	opt stack 0
   568                           wreg	equ	0xFE8
   569                           status	equ	0xFD8
   570                           
   571 ;; *************** function _PWM2_Init *****************
   572 ;; Defined at:
   573 ;;		line 28 in file "newmain.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;  fre             4   14[COMRAM] long 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  2   14[COMRAM] int 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;Total ram usage:        8 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; Hardware stack levels required when called:    1
   594 ;; This function calls:
   595 ;;		___aldiv
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text2
   602  00F92A                     __ptext2:
   603                           	opt stack 0
   604  00F92A                     _PWM2_Init:
   605                           	opt stack 29
   606                           
   607                           ;newmain.c: 30: PR2 = (10000000/(fre*4*4)) - 1;
   608                           
   609                           ;incstack = 0
   610  00F92A  0E80               	movlw	128
   611  00F92C  6E01               	movwf	___aldiv@dividend,c
   612  00F92E  0E96               	movlw	150
   613  00F930  6E02               	movwf	___aldiv@dividend+1,c
   614  00F932  0E98               	movlw	152
   615  00F934  6E03               	movwf	___aldiv@dividend+2,c
   616  00F936  0E00               	movlw	0
   617  00F938  6E04               	movwf	___aldiv@dividend+3,c
   618  00F93A  C00F  F013         	movff	PWM2_Init@fre,??_PWM2_Init
   619  00F93E  C010  F014         	movff	PWM2_Init@fre+1,??_PWM2_Init+1
   620  00F942  C011  F015         	movff	PWM2_Init@fre+2,??_PWM2_Init+2
   621  00F946  C012  F016         	movff	PWM2_Init@fre+3,??_PWM2_Init+3
   622  00F94A  0E02               	movlw	2
   623  00F94C                     u915:
   624  00F94C  90D8               	bcf	status,0,c
   625  00F94E  3613               	rlcf	??_PWM2_Init,f,c
   626  00F950  3614               	rlcf	??_PWM2_Init+1,f,c
   627  00F952  3615               	rlcf	??_PWM2_Init+2,f,c
   628  00F954  3616               	rlcf	??_PWM2_Init+3,f,c
   629  00F956  2EE8               	decfsz	wreg,f,c
   630  00F958  D7F9               	goto	u915
   631  00F95A  0E02               	movlw	2
   632  00F95C                     u925:
   633  00F95C  90D8               	bcf	status,0,c
   634  00F95E  3613               	rlcf	??_PWM2_Init,f,c
   635  00F960  3614               	rlcf	??_PWM2_Init+1,f,c
   636  00F962  3615               	rlcf	??_PWM2_Init+2,f,c
   637  00F964  3616               	rlcf	??_PWM2_Init+3,f,c
   638  00F966  2EE8               	decfsz	wreg,f,c
   639  00F968  D7F9               	goto	u925
   640  00F96A  C013  F005         	movff	??_PWM2_Init,___aldiv@divisor
   641  00F96E  C014  F006         	movff	??_PWM2_Init+1,___aldiv@divisor+1
   642  00F972  C015  F007         	movff	??_PWM2_Init+2,___aldiv@divisor+2
   643  00F976  C016  F008         	movff	??_PWM2_Init+3,___aldiv@divisor+3
   644  00F97A  ECBB  F07D         	call	___aldiv	;wreg free
   645  00F97E  0401               	decf	?___aldiv,w,c
   646  00F980  6ECB               	movwf	4043,c	;volatile
   647                           
   648                           ;newmain.c: 31: freq = fre;
   649  00F982  C00F  F042         	movff	PWM2_Init@fre,_freq
   650  00F986  C010  F043         	movff	PWM2_Init@fre+1,_freq+1
   651  00F98A  C011  F044         	movff	PWM2_Init@fre+2,_freq+2
   652  00F98E  C012  F045         	movff	PWM2_Init@fre+3,_freq+3
   653  00F992  0012               	return		;funcret
   654  00F994                     __end_of_PWM2_Init:
   655                           	opt stack 0
   656                           wreg	equ	0xFE8
   657                           status	equ	0xFD8
   658                           
   659 ;; *************** function _PWM2_Duty *****************
   660 ;; Defined at:
   661 ;;		line 45 in file "newmain.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  duty            2   56[COMRAM] unsigned int 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  2   56[COMRAM] int 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;Total ram usage:        4 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    2
   682 ;; This function calls:
   683 ;;		_PWM_Max_Duty
   684 ;;		___awtoft
   685 ;;		___ftdiv
   686 ;;		___ftmul
   687 ;;		___fttol
   688 ;;		___lwtoft
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text3
   695  00FA2E                     __ptext3:
   696                           	opt stack 0
   697  00FA2E                     _PWM2_Duty:
   698                           	opt stack 28
   699                           
   700                           ;newmain.c: 47: if(duty<1024)
   701                           
   702                           ;incstack = 0
   703  00FA2E  0E04               	movlw	4
   704  00FA30  5C3A               	subwf	PWM2_Duty@duty+1,w,c
   705  00FA32  B0D8               	btfsc	status,0,c
   706  00FA34  0012               	return	
   707                           
   708                           ;newmain.c: 48: {
   709                           ;newmain.c: 49: duty = ((float)duty/1023)*PWM_Max_Duty();
   710  00FA36  EC39  F07C         	call	_PWM_Max_Duty	;wreg free
   711  00FA3A  C00F  F015         	movff	?_PWM_Max_Duty,___awtoft@c
   712  00FA3E  C010  F016         	movff	?_PWM_Max_Duty+1,___awtoft@c+1
   713  00FA42  EC1D  F07C         	call	___awtoft	;wreg free
   714  00FA46  C015  F01E         	movff	?___awtoft,___ftmul@f2
   715  00FA4A  C016  F01F         	movff	?___awtoft+1,___ftmul@f2+1
   716  00FA4E  C017  F020         	movff	?___awtoft+2,___ftmul@f2+2
   717  00FA52  0EC0               	movlw	192
   718  00FA54  6E0F               	movwf	___ftdiv@f2,c
   719  00FA56  0E7F               	movlw	127
   720  00FA58  6E10               	movwf	___ftdiv@f2+1,c
   721  00FA5A  0E44               	movlw	68
   722  00FA5C  6E11               	movwf	___ftdiv@f2+2,c
   723  00FA5E  C039  F009         	movff	PWM2_Duty@duty,___lwtoft@c
   724  00FA62  C03A  F00A         	movff	PWM2_Duty@duty+1,___lwtoft@c+1
   725  00FA66  EC0B  F07C         	call	___lwtoft	;wreg free
   726  00FA6A  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
   727  00FA6E  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
   728  00FA72  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
   729  00FA76  EC21  F07E         	call	___ftdiv	;wreg free
   730  00FA7A  C00C  F01B         	movff	?___ftdiv,___ftmul@f1
   731  00FA7E  C00D  F01C         	movff	?___ftdiv+1,___ftmul@f1+1
   732  00FA82  C00E  F01D         	movff	?___ftdiv+2,___ftmul@f1+2
   733  00FA86  EC0C  F07F         	call	___ftmul	;wreg free
   734  00FA8A  C01B  F02A         	movff	?___ftmul,___fttol@f1
   735  00FA8E  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   736  00FA92  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   737  00FA96  EC86  F07F         	call	___fttol	;wreg free
   738  00FA9A  C02A  F039         	movff	?___fttol,PWM2_Duty@duty
   739  00FA9E  C02B  F03A         	movff	?___fttol+1,PWM2_Duty@duty+1
   740                           
   741                           ;newmain.c: 50: CCP2X = duty & 2;
   742  00FAA2  9ABA               	bcf	4026,5,c	;volatile
   743                           
   744                           ;newmain.c: 51: CCP2Y = duty & 1;
   745  00FAA4  A039               	btfss	PWM2_Duty@duty,0,c
   746  00FAA6  D002               	goto	u970
   747  00FAA8  88BA               	bsf	4026,4,c	;volatile
   748  00FAAA  D001               	goto	l1288
   749  00FAAC                     u970:
   750  00FAAC  98BA               	bcf	4026,4,c	;volatile
   751  00FAAE                     l1288:
   752                           
   753                           ;newmain.c: 52: CCPR2L = duty>>2;
   754  00FAAE  C039  F03B         	movff	PWM2_Duty@duty,??_PWM2_Duty
   755  00FAB2  C03A  F03C         	movff	PWM2_Duty@duty+1,??_PWM2_Duty+1
   756  00FAB6  90D8               	bcf	status,0,c
   757  00FAB8  323C               	rrcf	??_PWM2_Duty+1,f,c
   758  00FABA  323B               	rrcf	??_PWM2_Duty,f,c
   759  00FABC  90D8               	bcf	status,0,c
   760  00FABE  323C               	rrcf	??_PWM2_Duty+1,f,c
   761  00FAC0  323B               	rrcf	??_PWM2_Duty,f,c
   762  00FAC2  503B               	movf	??_PWM2_Duty,w,c
   763  00FAC4  6EBB               	movwf	4027,c	;volatile
   764  00FAC6  0012               	return	
   765  00FAC8                     __end_of_PWM2_Duty:
   766                           	opt stack 0
   767                           wreg	equ	0xFE8
   768                           status	equ	0xFD8
   769                           
   770 ;; *************** function _PWM1_Start *****************
   771 ;; Defined at:
   772 ;;		line 56 in file "newmain.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  2   67[None  ] int 
   779 ;; Registers used:
   780 ;;		None
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text4
   800  00F7FE                     __ptext4:
   801                           	opt stack 0
   802  00F7FE                     _PWM1_Start:
   803                           	opt stack 30
   804                           
   805                           ;newmain.c: 58: CCP1M3 = 1;
   806                           
   807                           ;incstack = 0
   808  00F7FE  86BD               	bsf	4029,3,c	;volatile
   809                           
   810                           ;newmain.c: 59: CCP1M2 = 1;
   811  00F800  84BD               	bsf	4029,2,c	;volatile
   812                           
   813                           ;newmain.c: 70: TMR2ON = 1;
   814  00F802  84CA               	bsf	4042,2,c	;volatile
   815                           
   816                           ;newmain.c: 71: TRISC2 = 0;
   817  00F804  9494               	bcf	3988,2,c	;volatile
   818  00F806  0012               	return		;funcret
   819  00F808                     __end_of_PWM1_Start:
   820                           	opt stack 0
   821                           wreg	equ	0xFE8
   822                           status	equ	0xFD8
   823                           
   824 ;; *************** function _PWM1_Init *****************
   825 ;; Defined at:
   826 ;;		line 22 in file "newmain.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  fre             4   14[COMRAM] long 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2   14[COMRAM] int 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   842 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   843 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;Total ram usage:        8 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    1
   847 ;; This function calls:
   848 ;;		___aldiv
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text5
   855  00F8C0                     __ptext5:
   856                           	opt stack 0
   857  00F8C0                     _PWM1_Init:
   858                           	opt stack 29
   859                           
   860                           ;newmain.c: 24: PR2 = (10000000/(fre*4*4)) - 1;
   861                           
   862                           ;incstack = 0
   863  00F8C0  0E80               	movlw	128
   864  00F8C2  6E01               	movwf	___aldiv@dividend,c
   865  00F8C4  0E96               	movlw	150
   866  00F8C6  6E02               	movwf	___aldiv@dividend+1,c
   867  00F8C8  0E98               	movlw	152
   868  00F8CA  6E03               	movwf	___aldiv@dividend+2,c
   869  00F8CC  0E00               	movlw	0
   870  00F8CE  6E04               	movwf	___aldiv@dividend+3,c
   871  00F8D0  C00F  F013         	movff	PWM1_Init@fre,??_PWM1_Init
   872  00F8D4  C010  F014         	movff	PWM1_Init@fre+1,??_PWM1_Init+1
   873  00F8D8  C011  F015         	movff	PWM1_Init@fre+2,??_PWM1_Init+2
   874  00F8DC  C012  F016         	movff	PWM1_Init@fre+3,??_PWM1_Init+3
   875  00F8E0  0E02               	movlw	2
   876  00F8E2                     u895:
   877  00F8E2  90D8               	bcf	status,0,c
   878  00F8E4  3613               	rlcf	??_PWM1_Init,f,c
   879  00F8E6  3614               	rlcf	??_PWM1_Init+1,f,c
   880  00F8E8  3615               	rlcf	??_PWM1_Init+2,f,c
   881  00F8EA  3616               	rlcf	??_PWM1_Init+3,f,c
   882  00F8EC  2EE8               	decfsz	wreg,f,c
   883  00F8EE  D7F9               	goto	u895
   884  00F8F0  0E02               	movlw	2
   885  00F8F2                     u905:
   886  00F8F2  90D8               	bcf	status,0,c
   887  00F8F4  3613               	rlcf	??_PWM1_Init,f,c
   888  00F8F6  3614               	rlcf	??_PWM1_Init+1,f,c
   889  00F8F8  3615               	rlcf	??_PWM1_Init+2,f,c
   890  00F8FA  3616               	rlcf	??_PWM1_Init+3,f,c
   891  00F8FC  2EE8               	decfsz	wreg,f,c
   892  00F8FE  D7F9               	goto	u905
   893  00F900  C013  F005         	movff	??_PWM1_Init,___aldiv@divisor
   894  00F904  C014  F006         	movff	??_PWM1_Init+1,___aldiv@divisor+1
   895  00F908  C015  F007         	movff	??_PWM1_Init+2,___aldiv@divisor+2
   896  00F90C  C016  F008         	movff	??_PWM1_Init+3,___aldiv@divisor+3
   897  00F910  ECBB  F07D         	call	___aldiv	;wreg free
   898  00F914  0401               	decf	?___aldiv,w,c
   899  00F916  6ECB               	movwf	4043,c	;volatile
   900                           
   901                           ;newmain.c: 25: freq = fre;
   902  00F918  C00F  F042         	movff	PWM1_Init@fre,_freq
   903  00F91C  C010  F043         	movff	PWM1_Init@fre+1,_freq+1
   904  00F920  C011  F044         	movff	PWM1_Init@fre+2,_freq+2
   905  00F924  C012  F045         	movff	PWM1_Init@fre+3,_freq+3
   906  00F928  0012               	return		;funcret
   907  00F92A                     __end_of_PWM1_Init:
   908                           	opt stack 0
   909                           wreg	equ	0xFE8
   910                           status	equ	0xFD8
   911                           
   912 ;; *************** function _PWM1_Duty *****************
   913 ;; Defined at:
   914 ;;		line 34 in file "newmain.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  duty            2   56[COMRAM] unsigned int 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  2   56[COMRAM] int 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;Total ram usage:        4 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    2
   935 ;; This function calls:
   936 ;;		_PWM_Max_Duty
   937 ;;		___awtoft
   938 ;;		___ftdiv
   939 ;;		___ftmul
   940 ;;		___fttol
   941 ;;		___lwtoft
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text6
   948  00F994                     __ptext6:
   949                           	opt stack 0
   950  00F994                     _PWM1_Duty:
   951                           	opt stack 28
   952                           
   953                           ;newmain.c: 36: if(duty<1024)
   954                           
   955                           ;incstack = 0
   956  00F994  0E04               	movlw	4
   957  00F996  5C3A               	subwf	PWM1_Duty@duty+1,w,c
   958  00F998  B0D8               	btfsc	status,0,c
   959  00F99A  0012               	return	
   960                           
   961                           ;newmain.c: 37: {
   962                           ;newmain.c: 38: duty = ((float)duty/1023)*PWM_Max_Duty();
   963  00F99C  EC39  F07C         	call	_PWM_Max_Duty	;wreg free
   964  00F9A0  C00F  F015         	movff	?_PWM_Max_Duty,___awtoft@c
   965  00F9A4  C010  F016         	movff	?_PWM_Max_Duty+1,___awtoft@c+1
   966  00F9A8  EC1D  F07C         	call	___awtoft	;wreg free
   967  00F9AC  C015  F01E         	movff	?___awtoft,___ftmul@f2
   968  00F9B0  C016  F01F         	movff	?___awtoft+1,___ftmul@f2+1
   969  00F9B4  C017  F020         	movff	?___awtoft+2,___ftmul@f2+2
   970  00F9B8  0EC0               	movlw	192
   971  00F9BA  6E0F               	movwf	___ftdiv@f2,c
   972  00F9BC  0E7F               	movlw	127
   973  00F9BE  6E10               	movwf	___ftdiv@f2+1,c
   974  00F9C0  0E44               	movlw	68
   975  00F9C2  6E11               	movwf	___ftdiv@f2+2,c
   976  00F9C4  C039  F009         	movff	PWM1_Duty@duty,___lwtoft@c
   977  00F9C8  C03A  F00A         	movff	PWM1_Duty@duty+1,___lwtoft@c+1
   978  00F9CC  EC0B  F07C         	call	___lwtoft	;wreg free
   979  00F9D0  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
   980  00F9D4  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
   981  00F9D8  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
   982  00F9DC  EC21  F07E         	call	___ftdiv	;wreg free
   983  00F9E0  C00C  F01B         	movff	?___ftdiv,___ftmul@f1
   984  00F9E4  C00D  F01C         	movff	?___ftdiv+1,___ftmul@f1+1
   985  00F9E8  C00E  F01D         	movff	?___ftdiv+2,___ftmul@f1+2
   986  00F9EC  EC0C  F07F         	call	___ftmul	;wreg free
   987  00F9F0  C01B  F02A         	movff	?___ftmul,___fttol@f1
   988  00F9F4  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   989  00F9F8  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   990  00F9FC  EC86  F07F         	call	___fttol	;wreg free
   991  00FA00  C02A  F039         	movff	?___fttol,PWM1_Duty@duty
   992  00FA04  C02B  F03A         	movff	?___fttol+1,PWM1_Duty@duty+1
   993                           
   994                           ;newmain.c: 39: CCP1X = duty & 2;
   995  00FA08  9ABD               	bcf	4029,5,c	;volatile
   996                           
   997                           ;newmain.c: 40: CCP1Y = duty & 1;
   998  00FA0A  A039               	btfss	PWM1_Duty@duty,0,c
   999  00FA0C  D002               	goto	u940
  1000  00FA0E  88BD               	bsf	4029,4,c	;volatile
  1001  00FA10  D001               	goto	l1278
  1002  00FA12                     u940:
  1003  00FA12  98BD               	bcf	4029,4,c	;volatile
  1004  00FA14                     l1278:
  1005                           
  1006                           ;newmain.c: 41: CCPR1L = duty>>2;
  1007  00FA14  C039  F03B         	movff	PWM1_Duty@duty,??_PWM1_Duty
  1008  00FA18  C03A  F03C         	movff	PWM1_Duty@duty+1,??_PWM1_Duty+1
  1009  00FA1C  90D8               	bcf	status,0,c
  1010  00FA1E  323C               	rrcf	??_PWM1_Duty+1,f,c
  1011  00FA20  323B               	rrcf	??_PWM1_Duty,f,c
  1012  00FA22  90D8               	bcf	status,0,c
  1013  00FA24  323C               	rrcf	??_PWM1_Duty+1,f,c
  1014  00FA26  323B               	rrcf	??_PWM1_Duty,f,c
  1015  00FA28  503B               	movf	??_PWM1_Duty,w,c
  1016  00FA2A  6EBE               	movwf	4030,c	;volatile
  1017  00FA2C  0012               	return	
  1018  00FA2E                     __end_of_PWM1_Duty:
  1019                           	opt stack 0
  1020                           wreg	equ	0xFE8
  1021                           status	equ	0xFD8
  1022                           
  1023 ;; *************** function ___lwtoft *****************
  1024 ;; Defined at:
  1025 ;;		line 28 in file "/Applications/microchip/xc8/v1.41/sources/common/lwtoft.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  c               2    8[COMRAM] unsigned int 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  3    8[COMRAM] float 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1039 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;Total ram usage:        3 bytes
  1044 ;; Hardware stack levels used:    1
  1045 ;; Hardware stack levels required when called:    1
  1046 ;; This function calls:
  1047 ;;		___ftpack
  1048 ;; This function is called by:
  1049 ;;		_PWM1_Duty
  1050 ;;		_PWM2_Duty
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text7
  1055  00F816                     __ptext7:
  1056                           	opt stack 0
  1057  00F816                     ___lwtoft:
  1058                           	opt stack 28
  1059                           
  1060                           ;incstack = 0
  1061  00F816  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1062  00F81A  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1063  00F81E  6A03               	clrf	___ftpack@arg+2,c
  1064  00F820  0E8E               	movlw	142
  1065  00F822  6E04               	movwf	___ftpack@exp,c
  1066  00F824  0E00               	movlw	0
  1067  00F826  6E05               	movwf	___ftpack@sign,c
  1068  00F828  EC64  F07D         	call	___ftpack	;wreg free
  1069  00F82C  C001  F009         	movff	?___ftpack,?___lwtoft
  1070  00F830  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1071  00F834  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1072  00F838  0012               	return	
  1073  00F83A                     __end_of___lwtoft:
  1074                           	opt stack 0
  1075                           wreg	equ	0xFE8
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function ___fttol *****************
  1079 ;; Defined at:
  1080 ;;		line 44 in file "/Applications/microchip/xc8/v1.41/sources/common/fttol.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  f1              3   41[COMRAM] float 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  lval            4   51[COMRAM] unsigned long 
  1085 ;;  exp1            1   55[COMRAM] unsigned char 
  1086 ;;  sign1           1   50[COMRAM] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  4   41[COMRAM] long 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;Total ram usage:       15 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_PWM1_Duty
  1106 ;;		_PWM2_Duty
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text8
  1111  00FF0C                     __ptext8:
  1112                           	opt stack 0
  1113  00FF0C                     ___fttol:
  1114                           	opt stack 29
  1115                           
  1116                           ;incstack = 0
  1117  00FF0C  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  1118  00FF10  6A2F               	clrf	(??___fttol+1)& (0+255),c
  1119  00FF12  6A30               	clrf	(??___fttol+2)& (0+255),c
  1120  00FF14  342B               	rlcf	___fttol@f1+1,w,c
  1121  00FF16  362E               	rlcf	??___fttol& (0+255),f,c
  1122  00FF18  E301               	bnc	u811
  1123  00FF1A  802F               	bsf	(??___fttol+1)& (0+255),0,c
  1124  00FF1C                     u811:
  1125  00FF1C  502E               	movf	??___fttol,w,c
  1126  00FF1E  6E38               	movwf	___fttol@exp1,c
  1127  00FF20  5038               	movf	___fttol@exp1,w,c
  1128  00FF22  A4D8               	btfss	status,2,c
  1129  00FF24  D009               	goto	l1218
  1130  00FF26  0E00               	movlw	0
  1131  00FF28  6E2A               	movwf	?___fttol,c
  1132  00FF2A  0E00               	movlw	0
  1133  00FF2C  6E2B               	movwf	?___fttol+1,c
  1134  00FF2E  0E00               	movlw	0
  1135  00FF30  6E2C               	movwf	?___fttol+2,c
  1136  00FF32  0E00               	movlw	0
  1137  00FF34  6E2D               	movwf	?___fttol+3,c
  1138  00FF36  0012               	return	
  1139  00FF38                     l1218:
  1140  00FF38  0E17               	movlw	23
  1141  00FF3A  6E2E               	movwf	??___fttol& (0+255),c
  1142  00FF3C  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  1143  00FF40  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  1144  00FF44  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  1145  00FF48  282E               	incf	??___fttol,w,c
  1146  00FF4A  6E32               	movwf	(??___fttol+4)& (0+255),c
  1147  00FF4C  D004               	goto	u830
  1148  00FF4E                     u835:
  1149  00FF4E  90D8               	bcf	status,0,c
  1150  00FF50  3231               	rrcf	??___fttol+3,f,c
  1151  00FF52  3230               	rrcf	??___fttol+2,f,c
  1152  00FF54  322F               	rrcf	??___fttol+1,f,c
  1153  00FF56                     u830:
  1154  00FF56  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
  1155  00FF58  D7FA               	goto	u835
  1156  00FF5A  502F               	movf	??___fttol+1,w,c
  1157  00FF5C  6E33               	movwf	___fttol@sign1,c
  1158  00FF5E  8E2B               	bsf	___fttol@f1+1,7,c
  1159  00FF60  0EFF               	movlw	255
  1160  00FF62  162A               	andwf	___fttol@f1,f,c
  1161  00FF64  0EFF               	movlw	255
  1162  00FF66  162B               	andwf	___fttol@f1+1,f,c
  1163  00FF68  0E00               	movlw	0
  1164  00FF6A  162C               	andwf	___fttol@f1+2,f,c
  1165  00FF6C  502A               	movf	___fttol@f1,w,c
  1166  00FF6E  6E34               	movwf	___fttol@lval,c
  1167  00FF70  502B               	movf	___fttol@f1+1,w,c
  1168  00FF72  6E35               	movwf	___fttol@lval+1,c
  1169  00FF74  502C               	movf	___fttol@f1+2,w,c
  1170  00FF76  6E36               	movwf	___fttol@lval+2,c
  1171  00FF78  6A37               	clrf	___fttol@lval+3,c
  1172  00FF7A  0E8E               	movlw	142
  1173  00FF7C  5E38               	subwf	___fttol@exp1,f,c
  1174  00FF7E  AE38               	btfss	___fttol@exp1,7,c
  1175  00FF80  D016               	goto	l1240
  1176  00FF82  5038               	movf	___fttol@exp1,w,c
  1177  00FF84  0A80               	xorlw	128
  1178  00FF86  0F8F               	addlw	143
  1179  00FF88  B0D8               	btfsc	status,0,c
  1180  00FF8A  D009               	goto	l1236
  1181  00FF8C  0E00               	movlw	0
  1182  00FF8E  6E2A               	movwf	?___fttol,c
  1183  00FF90  0E00               	movlw	0
  1184  00FF92  6E2B               	movwf	?___fttol+1,c
  1185  00FF94  0E00               	movlw	0
  1186  00FF96  6E2C               	movwf	?___fttol+2,c
  1187  00FF98  0E00               	movlw	0
  1188  00FF9A  6E2D               	movwf	?___fttol+3,c
  1189  00FF9C  0012               	return	
  1190  00FF9E                     l1236:
  1191  00FF9E  90D8               	bcf	status,0,c
  1192  00FFA0  3237               	rrcf	___fttol@lval+3,f,c
  1193  00FFA2  3236               	rrcf	___fttol@lval+2,f,c
  1194  00FFA4  3235               	rrcf	___fttol@lval+1,f,c
  1195  00FFA6  3234               	rrcf	___fttol@lval,f,c
  1196  00FFA8  3E38               	incfsz	___fttol@exp1,f,c
  1197  00FFAA  D7F9               	goto	l1236
  1198  00FFAC  D015               	goto	l1250
  1199  00FFAE                     l1240:
  1200  00FFAE  0E17               	movlw	23
  1201  00FFB0  6438               	cpfsgt	___fttol@exp1,c
  1202  00FFB2  D00F               	goto	l1248
  1203  00FFB4  0E00               	movlw	0
  1204  00FFB6  6E2A               	movwf	?___fttol,c
  1205  00FFB8  0E00               	movlw	0
  1206  00FFBA  6E2B               	movwf	?___fttol+1,c
  1207  00FFBC  0E00               	movlw	0
  1208  00FFBE  6E2C               	movwf	?___fttol+2,c
  1209  00FFC0  0E00               	movlw	0
  1210  00FFC2  6E2D               	movwf	?___fttol+3,c
  1211  00FFC4  0012               	return	
  1212  00FFC6                     l1246:
  1213  00FFC6  90D8               	bcf	status,0,c
  1214  00FFC8  3634               	rlcf	___fttol@lval,f,c
  1215  00FFCA  3635               	rlcf	___fttol@lval+1,f,c
  1216  00FFCC  3636               	rlcf	___fttol@lval+2,f,c
  1217  00FFCE  3637               	rlcf	___fttol@lval+3,f,c
  1218  00FFD0  0638               	decf	___fttol@exp1,f,c
  1219  00FFD2                     l1248:
  1220  00FFD2  5038               	movf	___fttol@exp1,w,c
  1221  00FFD4  A4D8               	btfss	status,2,c
  1222  00FFD6  D7F7               	goto	l1246
  1223  00FFD8                     l1250:
  1224  00FFD8  5033               	movf	___fttol@sign1,w,c
  1225  00FFDA  B4D8               	btfsc	status,2,c
  1226  00FFDC  D008               	goto	l1254
  1227  00FFDE  1E37               	comf	___fttol@lval+3,f,c
  1228  00FFE0  1E36               	comf	___fttol@lval+2,f,c
  1229  00FFE2  1E35               	comf	___fttol@lval+1,f,c
  1230  00FFE4  6C34               	negf	___fttol@lval,c
  1231  00FFE6  0E00               	movlw	0
  1232  00FFE8  2235               	addwfc	___fttol@lval+1,f,c
  1233  00FFEA  2236               	addwfc	___fttol@lval+2,f,c
  1234  00FFEC  2237               	addwfc	___fttol@lval+3,f,c
  1235  00FFEE                     l1254:
  1236  00FFEE  C034  F02A         	movff	___fttol@lval,?___fttol
  1237  00FFF2  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  1238  00FFF6  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  1239  00FFFA  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  1240  00FFFE  0012               	return	
  1241  010000                     __end_of___fttol:
  1242                           	opt stack 0
  1243                           wreg	equ	0xFE8
  1244                           status	equ	0xFD8
  1245                           
  1246 ;; *************** function ___ftmul *****************
  1247 ;; Defined at:
  1248 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/ftmul.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  f1              3   26[COMRAM] float 
  1251 ;;  f2              3   29[COMRAM] float 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1254 ;;  sign            1   40[COMRAM] unsigned char 
  1255 ;;  cntr            1   39[COMRAM] unsigned char 
  1256 ;;  exp             1   35[COMRAM] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  3   26[COMRAM] float 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1266 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;Total ram usage:       15 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    1
  1273 ;; This function calls:
  1274 ;;		___ftpack
  1275 ;; This function is called by:
  1276 ;;		_PWM1_Duty
  1277 ;;		_PWM2_Duty
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text9
  1282  00FE18                     __ptext9:
  1283                           	opt stack 0
  1284  00FE18                     ___ftmul:
  1285                           	opt stack 28
  1286                           
  1287                           ;incstack = 0
  1288  00FE18  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  1289  00FE1C  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1290  00FE1E  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1291  00FE20  341C               	rlcf	___ftmul@f1+1,w,c
  1292  00FE22  3621               	rlcf	??___ftmul& (0+255),f,c
  1293  00FE24  E301               	bnc	u741
  1294  00FE26  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1295  00FE28                     u741:
  1296  00FE28  5021               	movf	??___ftmul,w,c
  1297  00FE2A  6E24               	movwf	___ftmul@exp,c
  1298  00FE2C  5024               	movf	___ftmul@exp,w,c
  1299  00FE2E  A4D8               	btfss	status,2,c
  1300  00FE30  D007               	goto	l1158
  1301  00FE32  0E00               	movlw	0
  1302  00FE34  6E1B               	movwf	?___ftmul,c
  1303  00FE36  0E00               	movlw	0
  1304  00FE38  6E1C               	movwf	?___ftmul+1,c
  1305  00FE3A  0E00               	movlw	0
  1306  00FE3C  6E1D               	movwf	?___ftmul+2,c
  1307  00FE3E  0012               	return	
  1308  00FE40                     l1158:
  1309  00FE40  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  1310  00FE44  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1311  00FE46  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1312  00FE48  341F               	rlcf	___ftmul@f2+1,w,c
  1313  00FE4A  3621               	rlcf	??___ftmul& (0+255),f,c
  1314  00FE4C  E301               	bnc	u761
  1315  00FE4E  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1316  00FE50                     u761:
  1317  00FE50  5021               	movf	??___ftmul,w,c
  1318  00FE52  6E29               	movwf	___ftmul@sign,c
  1319  00FE54  5029               	movf	___ftmul@sign,w,c
  1320  00FE56  A4D8               	btfss	status,2,c
  1321  00FE58  D007               	goto	l1164
  1322  00FE5A  0E00               	movlw	0
  1323  00FE5C  6E1B               	movwf	?___ftmul,c
  1324  00FE5E  0E00               	movlw	0
  1325  00FE60  6E1C               	movwf	?___ftmul+1,c
  1326  00FE62  0E00               	movlw	0
  1327  00FE64  6E1D               	movwf	?___ftmul+2,c
  1328  00FE66  0012               	return	
  1329  00FE68                     l1164:
  1330  00FE68  5029               	movf	___ftmul@sign,w,c
  1331  00FE6A  0F7B               	addlw	123
  1332  00FE6C  2624               	addwf	___ftmul@exp,f,c
  1333  00FE6E  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  1334  00FE72  5020               	movf	___ftmul@f2+2,w,c
  1335  00FE74  1A29               	xorwf	___ftmul@sign,f,c
  1336  00FE76  0E80               	movlw	128
  1337  00FE78  1629               	andwf	___ftmul@sign,f,c
  1338  00FE7A  8E1C               	bsf	___ftmul@f1+1,7,c
  1339  00FE7C  8E1F               	bsf	___ftmul@f2+1,7,c
  1340  00FE7E  0EFF               	movlw	255
  1341  00FE80  161E               	andwf	___ftmul@f2,f,c
  1342  00FE82  0EFF               	movlw	255
  1343  00FE84  161F               	andwf	___ftmul@f2+1,f,c
  1344  00FE86  0E00               	movlw	0
  1345  00FE88  1620               	andwf	___ftmul@f2+2,f,c
  1346  00FE8A  0E00               	movlw	0
  1347  00FE8C  6E25               	movwf	___ftmul@f3_as_product,c
  1348  00FE8E  0E00               	movlw	0
  1349  00FE90  6E26               	movwf	___ftmul@f3_as_product+1,c
  1350  00FE92  0E00               	movlw	0
  1351  00FE94  6E27               	movwf	___ftmul@f3_as_product+2,c
  1352  00FE96  0E07               	movlw	7
  1353  00FE98  6E28               	movwf	___ftmul@cntr,c
  1354  00FE9A                     l1178:
  1355  00FE9A  A01B               	btfss	___ftmul@f1,0,c
  1356  00FE9C  D006               	goto	l1182
  1357  00FE9E  501E               	movf	___ftmul@f2,w,c
  1358  00FEA0  2625               	addwf	___ftmul@f3_as_product,f,c
  1359  00FEA2  501F               	movf	___ftmul@f2+1,w,c
  1360  00FEA4  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1361  00FEA6  5020               	movf	___ftmul@f2+2,w,c
  1362  00FEA8  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1363  00FEAA                     l1182:
  1364  00FEAA  90D8               	bcf	status,0,c
  1365  00FEAC  321D               	rrcf	___ftmul@f1+2,f,c
  1366  00FEAE  321C               	rrcf	___ftmul@f1+1,f,c
  1367  00FEB0  321B               	rrcf	___ftmul@f1,f,c
  1368  00FEB2  90D8               	bcf	status,0,c
  1369  00FEB4  361E               	rlcf	___ftmul@f2,f,c
  1370  00FEB6  361F               	rlcf	___ftmul@f2+1,f,c
  1371  00FEB8  3620               	rlcf	___ftmul@f2+2,f,c
  1372  00FEBA  2E28               	decfsz	___ftmul@cntr,f,c
  1373  00FEBC  D7EE               	goto	l1178
  1374  00FEBE  0E09               	movlw	9
  1375  00FEC0  6E28               	movwf	___ftmul@cntr,c
  1376  00FEC2                     l1188:
  1377  00FEC2  A01B               	btfss	___ftmul@f1,0,c
  1378  00FEC4  D006               	goto	l1192
  1379  00FEC6  501E               	movf	___ftmul@f2,w,c
  1380  00FEC8  2625               	addwf	___ftmul@f3_as_product,f,c
  1381  00FECA  501F               	movf	___ftmul@f2+1,w,c
  1382  00FECC  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1383  00FECE  5020               	movf	___ftmul@f2+2,w,c
  1384  00FED0  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1385  00FED2                     l1192:
  1386  00FED2  90D8               	bcf	status,0,c
  1387  00FED4  321D               	rrcf	___ftmul@f1+2,f,c
  1388  00FED6  321C               	rrcf	___ftmul@f1+1,f,c
  1389  00FED8  321B               	rrcf	___ftmul@f1,f,c
  1390  00FEDA  90D8               	bcf	status,0,c
  1391  00FEDC  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  1392  00FEDE  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  1393  00FEE0  3225               	rrcf	___ftmul@f3_as_product,f,c
  1394  00FEE2  2E28               	decfsz	___ftmul@cntr,f,c
  1395  00FEE4  D7EE               	goto	l1188
  1396  00FEE6  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1397  00FEEA  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1398  00FEEE  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1399  00FEF2  C024  F004         	movff	___ftmul@exp,___ftpack@exp
  1400  00FEF6  C029  F005         	movff	___ftmul@sign,___ftpack@sign
  1401  00FEFA  EC64  F07D         	call	___ftpack	;wreg free
  1402  00FEFE  C001  F01B         	movff	?___ftpack,?___ftmul
  1403  00FF02  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
  1404  00FF06  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
  1405  00FF0A  0012               	return	
  1406  00FF0C                     __end_of___ftmul:
  1407                           	opt stack 0
  1408                           wreg	equ	0xFE8
  1409                           status	equ	0xFD8
  1410                           
  1411 ;; *************** function ___ftdiv *****************
  1412 ;; Defined at:
  1413 ;;		line 54 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdiv.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  f1              3   11[COMRAM] float 
  1416 ;;  f2              3   14[COMRAM] float 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  f3              3   21[COMRAM] float 
  1419 ;;  sign            1   25[COMRAM] unsigned char 
  1420 ;;  exp             1   24[COMRAM] unsigned char 
  1421 ;;  cntr            1   20[COMRAM] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  3   11[COMRAM] float 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1431 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;Total ram usage:       15 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    1
  1438 ;; This function calls:
  1439 ;;		___ftpack
  1440 ;; This function is called by:
  1441 ;;		_PWM1_Duty
  1442 ;;		_PWM2_Duty
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text10
  1447  00FC42                     __ptext10:
  1448                           	opt stack 0
  1449  00FC42                     ___ftdiv:
  1450                           	opt stack 28
  1451                           
  1452                           ;incstack = 0
  1453  00FC42  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
  1454  00FC46  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  1455  00FC48  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  1456  00FC4A  340D               	rlcf	___ftdiv@f1+1,w,c
  1457  00FC4C  3612               	rlcf	??___ftdiv& (0+255),f,c
  1458  00FC4E  E301               	bnc	u691
  1459  00FC50  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  1460  00FC52                     u691:
  1461  00FC52  5012               	movf	??___ftdiv,w,c
  1462  00FC54  6E19               	movwf	___ftdiv@exp,c
  1463  00FC56  5019               	movf	___ftdiv@exp,w,c
  1464  00FC58  A4D8               	btfss	status,2,c
  1465  00FC5A  D007               	goto	l1112
  1466  00FC5C  0E00               	movlw	0
  1467  00FC5E  6E0C               	movwf	?___ftdiv,c
  1468  00FC60  0E00               	movlw	0
  1469  00FC62  6E0D               	movwf	?___ftdiv+1,c
  1470  00FC64  0E00               	movlw	0
  1471  00FC66  6E0E               	movwf	?___ftdiv+2,c
  1472  00FC68  0012               	return	
  1473  00FC6A                     l1112:
  1474  00FC6A  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
  1475  00FC6E  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  1476  00FC70  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  1477  00FC72  3410               	rlcf	___ftdiv@f2+1,w,c
  1478  00FC74  3612               	rlcf	??___ftdiv& (0+255),f,c
  1479  00FC76  E301               	bnc	u711
  1480  00FC78  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  1481  00FC7A                     u711:
  1482  00FC7A  5012               	movf	??___ftdiv,w,c
  1483  00FC7C  6E1A               	movwf	___ftdiv@sign,c
  1484  00FC7E  501A               	movf	___ftdiv@sign,w,c
  1485  00FC80  A4D8               	btfss	status,2,c
  1486  00FC82  D007               	goto	l1118
  1487  00FC84  0E00               	movlw	0
  1488  00FC86  6E0C               	movwf	?___ftdiv,c
  1489  00FC88  0E00               	movlw	0
  1490  00FC8A  6E0D               	movwf	?___ftdiv+1,c
  1491  00FC8C  0E00               	movlw	0
  1492  00FC8E  6E0E               	movwf	?___ftdiv+2,c
  1493  00FC90  0012               	return	
  1494  00FC92                     l1118:
  1495  00FC92  0E00               	movlw	0
  1496  00FC94  6E16               	movwf	___ftdiv@f3,c
  1497  00FC96  0E00               	movlw	0
  1498  00FC98  6E17               	movwf	___ftdiv@f3+1,c
  1499  00FC9A  0E00               	movlw	0
  1500  00FC9C  6E18               	movwf	___ftdiv@f3+2,c
  1501  00FC9E  501A               	movf	___ftdiv@sign,w,c
  1502  00FCA0  0F89               	addlw	137
  1503  00FCA2  5E19               	subwf	___ftdiv@exp,f,c
  1504  00FCA4  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
  1505  00FCA8  5011               	movf	___ftdiv@f2+2,w,c
  1506  00FCAA  1A1A               	xorwf	___ftdiv@sign,f,c
  1507  00FCAC  0E80               	movlw	128
  1508  00FCAE  161A               	andwf	___ftdiv@sign,f,c
  1509  00FCB0  8E0D               	bsf	___ftdiv@f1+1,7,c
  1510  00FCB2  0EFF               	movlw	255
  1511  00FCB4  160C               	andwf	___ftdiv@f1,f,c
  1512  00FCB6  0EFF               	movlw	255
  1513  00FCB8  160D               	andwf	___ftdiv@f1+1,f,c
  1514  00FCBA  0E00               	movlw	0
  1515  00FCBC  160E               	andwf	___ftdiv@f1+2,f,c
  1516  00FCBE  8E10               	bsf	___ftdiv@f2+1,7,c
  1517  00FCC0  0EFF               	movlw	255
  1518  00FCC2  160F               	andwf	___ftdiv@f2,f,c
  1519  00FCC4  0EFF               	movlw	255
  1520  00FCC6  1610               	andwf	___ftdiv@f2+1,f,c
  1521  00FCC8  0E00               	movlw	0
  1522  00FCCA  1611               	andwf	___ftdiv@f2+2,f,c
  1523  00FCCC  0E18               	movlw	24
  1524  00FCCE  6E15               	movwf	___ftdiv@cntr,c
  1525  00FCD0                     l1138:
  1526  00FCD0  90D8               	bcf	status,0,c
  1527  00FCD2  3616               	rlcf	___ftdiv@f3,f,c
  1528  00FCD4  3617               	rlcf	___ftdiv@f3+1,f,c
  1529  00FCD6  3618               	rlcf	___ftdiv@f3+2,f,c
  1530  00FCD8  500F               	movf	___ftdiv@f2,w,c
  1531  00FCDA  5C0C               	subwf	___ftdiv@f1,w,c
  1532  00FCDC  5010               	movf	___ftdiv@f2+1,w,c
  1533  00FCDE  580D               	subwfb	___ftdiv@f1+1,w,c
  1534  00FCE0  5011               	movf	___ftdiv@f2+2,w,c
  1535  00FCE2  580E               	subwfb	___ftdiv@f1+2,w,c
  1536  00FCE4  A0D8               	btfss	status,0,c
  1537  00FCE6  D007               	goto	l369
  1538  00FCE8  500F               	movf	___ftdiv@f2,w,c
  1539  00FCEA  5E0C               	subwf	___ftdiv@f1,f,c
  1540  00FCEC  5010               	movf	___ftdiv@f2+1,w,c
  1541  00FCEE  5A0D               	subwfb	___ftdiv@f1+1,f,c
  1542  00FCF0  5011               	movf	___ftdiv@f2+2,w,c
  1543  00FCF2  5A0E               	subwfb	___ftdiv@f1+2,f,c
  1544  00FCF4  8016               	bsf	___ftdiv@f3,0,c
  1545  00FCF6                     l369:
  1546  00FCF6  90D8               	bcf	status,0,c
  1547  00FCF8  360C               	rlcf	___ftdiv@f1,f,c
  1548  00FCFA  360D               	rlcf	___ftdiv@f1+1,f,c
  1549  00FCFC  360E               	rlcf	___ftdiv@f1+2,f,c
  1550  00FCFE  2E15               	decfsz	___ftdiv@cntr,f,c
  1551  00FD00  D7E7               	goto	l1138
  1552  00FD02  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
  1553  00FD06  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1554  00FD0A  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1555  00FD0E  C019  F004         	movff	___ftdiv@exp,___ftpack@exp
  1556  00FD12  C01A  F005         	movff	___ftdiv@sign,___ftpack@sign
  1557  00FD16  EC64  F07D         	call	___ftpack	;wreg free
  1558  00FD1A  C001  F00C         	movff	?___ftpack,?___ftdiv
  1559  00FD1E  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  1560  00FD22  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  1561  00FD26  0012               	return	
  1562  00FD28                     __end_of___ftdiv:
  1563                           	opt stack 0
  1564                           wreg	equ	0xFE8
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function ___awtoft *****************
  1568 ;; Defined at:
  1569 ;;		line 32 in file "/Applications/microchip/xc8/v1.41/sources/common/awtoft.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  c               2   20[COMRAM] int 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  sign            1   23[COMRAM] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  3   20[COMRAM] float 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1583 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;Total ram usage:        4 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    1
  1590 ;; This function calls:
  1591 ;;		___ftpack
  1592 ;; This function is called by:
  1593 ;;		_PWM1_Duty
  1594 ;;		_PWM2_Duty
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text11
  1599  00F83A                     __ptext11:
  1600                           	opt stack 0
  1601  00F83A                     ___awtoft:
  1602                           	opt stack 28
  1603                           
  1604                           ;incstack = 0
  1605  00F83A  0E00               	movlw	0
  1606  00F83C  6E18               	movwf	___awtoft@sign,c
  1607  00F83E  AE16               	btfss	___awtoft@c+1,7,c
  1608  00F840  D006               	goto	l1208
  1609  00F842  6C15               	negf	___awtoft@c,c
  1610  00F844  1E16               	comf	___awtoft@c+1,f,c
  1611  00F846  B0D8               	btfsc	status,0,c
  1612  00F848  2A16               	incf	___awtoft@c+1,f,c
  1613  00F84A  0E01               	movlw	1
  1614  00F84C  6E18               	movwf	___awtoft@sign,c
  1615  00F84E                     l1208:
  1616  00F84E  C015  F001         	movff	___awtoft@c,___ftpack@arg
  1617  00F852  C016  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1618  00F856  6A03               	clrf	___ftpack@arg+2,c
  1619  00F858  0E8E               	movlw	142
  1620  00F85A  6E04               	movwf	___ftpack@exp,c
  1621  00F85C  C018  F005         	movff	___awtoft@sign,___ftpack@sign
  1622  00F860  EC64  F07D         	call	___ftpack	;wreg free
  1623  00F864  C001  F015         	movff	?___ftpack,?___awtoft
  1624  00F868  C002  F016         	movff	?___ftpack+1,?___awtoft+1
  1625  00F86C  C003  F017         	movff	?___ftpack+2,?___awtoft+2
  1626  00F870  0012               	return	
  1627  00F872                     __end_of___awtoft:
  1628                           	opt stack 0
  1629                           wreg	equ	0xFE8
  1630                           status	equ	0xFD8
  1631                           
  1632 ;; *************** function ___ftpack *****************
  1633 ;; Defined at:
  1634 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/float.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  arg             3    0[COMRAM] unsigned um
  1637 ;;  exp             1    3[COMRAM] unsigned char 
  1638 ;;  sign            1    4[COMRAM] unsigned char 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  3    0[COMRAM] float 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1650 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;Total ram usage:        8 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		___awtoft
  1660 ;;		___ftdiv
  1661 ;;		___ftmul
  1662 ;;		___lwtoft
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text12
  1667  00FAC8                     __ptext12:
  1668                           	opt stack 0
  1669  00FAC8                     ___ftpack:
  1670                           	opt stack 28
  1671                           
  1672                           ;incstack = 0
  1673  00FAC8  5004               	movf	___ftpack@exp,w,c
  1674  00FACA  B4D8               	btfsc	status,2,c
  1675  00FACC  D005               	goto	l1026
  1676  00FACE  5001               	movf	___ftpack@arg,w,c
  1677  00FAD0  1002               	iorwf	___ftpack@arg+1,w,c
  1678  00FAD2  1003               	iorwf	___ftpack@arg+2,w,c
  1679  00FAD4  A4D8               	btfss	status,2,c
  1680  00FAD6  D00C               	goto	l1032
  1681  00FAD8                     l1026:
  1682  00FAD8  0E00               	movlw	0
  1683  00FADA  6E01               	movwf	?___ftpack,c
  1684  00FADC  0E00               	movlw	0
  1685  00FADE  6E02               	movwf	?___ftpack+1,c
  1686  00FAE0  0E00               	movlw	0
  1687  00FAE2  6E03               	movwf	?___ftpack+2,c
  1688  00FAE4  0012               	return	
  1689  00FAE6                     l1030:
  1690  00FAE6  2A04               	incf	___ftpack@exp,f,c
  1691  00FAE8  90D8               	bcf	status,0,c
  1692  00FAEA  3203               	rrcf	___ftpack@arg+2,f,c
  1693  00FAEC  3202               	rrcf	___ftpack@arg+1,f,c
  1694  00FAEE  3201               	rrcf	___ftpack@arg,f,c
  1695  00FAF0                     l1032:
  1696  00FAF0  0E00               	movlw	0
  1697  00FAF2  1401               	andwf	___ftpack@arg,w,c
  1698  00FAF4  6E06               	movwf	??___ftpack& (0+255),c
  1699  00FAF6  0E00               	movlw	0
  1700  00FAF8  1402               	andwf	___ftpack@arg+1,w,c
  1701  00FAFA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1702  00FAFC  0EFE               	movlw	254
  1703  00FAFE  1403               	andwf	___ftpack@arg+2,w,c
  1704  00FB00  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1705  00FB02  5006               	movf	??___ftpack,w,c
  1706  00FB04  1007               	iorwf	??___ftpack+1,w,c
  1707  00FB06  1008               	iorwf	??___ftpack+2,w,c
  1708  00FB08  B4D8               	btfsc	status,2,c
  1709  00FB0A  D00C               	goto	l1038
  1710  00FB0C  D7EC               	goto	l1030
  1711  00FB0E                     l1034:
  1712  00FB0E  2A04               	incf	___ftpack@exp,f,c
  1713  00FB10  0E01               	movlw	1
  1714  00FB12  2601               	addwf	___ftpack@arg,f,c
  1715  00FB14  0E00               	movlw	0
  1716  00FB16  2202               	addwfc	___ftpack@arg+1,f,c
  1717  00FB18  0E00               	movlw	0
  1718  00FB1A  2203               	addwfc	___ftpack@arg+2,f,c
  1719  00FB1C  90D8               	bcf	status,0,c
  1720  00FB1E  3203               	rrcf	___ftpack@arg+2,f,c
  1721  00FB20  3202               	rrcf	___ftpack@arg+1,f,c
  1722  00FB22  3201               	rrcf	___ftpack@arg,f,c
  1723  00FB24                     l1038:
  1724  00FB24  0E00               	movlw	0
  1725  00FB26  1401               	andwf	___ftpack@arg,w,c
  1726  00FB28  6E06               	movwf	??___ftpack& (0+255),c
  1727  00FB2A  0E00               	movlw	0
  1728  00FB2C  1402               	andwf	___ftpack@arg+1,w,c
  1729  00FB2E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1730  00FB30  0EFF               	movlw	255
  1731  00FB32  1403               	andwf	___ftpack@arg+2,w,c
  1732  00FB34  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1733  00FB36  5006               	movf	??___ftpack,w,c
  1734  00FB38  1007               	iorwf	??___ftpack+1,w,c
  1735  00FB3A  1008               	iorwf	??___ftpack+2,w,c
  1736  00FB3C  B4D8               	btfsc	status,2,c
  1737  00FB3E  D006               	goto	l1042
  1738  00FB40  D7E6               	goto	l1034
  1739  00FB42                     l1040:
  1740  00FB42  0604               	decf	___ftpack@exp,f,c
  1741  00FB44  90D8               	bcf	status,0,c
  1742  00FB46  3601               	rlcf	___ftpack@arg,f,c
  1743  00FB48  3602               	rlcf	___ftpack@arg+1,f,c
  1744  00FB4A  3603               	rlcf	___ftpack@arg+2,f,c
  1745  00FB4C                     l1042:
  1746  00FB4C  BE02               	btfsc	___ftpack@arg+1,7,c
  1747  00FB4E  D003               	goto	l311
  1748  00FB50  0E02               	movlw	2
  1749  00FB52  6004               	cpfslt	___ftpack@exp,c
  1750  00FB54  D7F6               	goto	l1040
  1751  00FB56                     l311:
  1752  00FB56  A004               	btfss	___ftpack@exp,0,c
  1753  00FB58  9E02               	bcf	___ftpack@arg+1,7,c
  1754  00FB5A  90D8               	bcf	status,0,c
  1755  00FB5C  3204               	rrcf	___ftpack@exp,f,c
  1756  00FB5E  5004               	movf	___ftpack@exp,w,c
  1757  00FB60  1203               	iorwf	___ftpack@arg+2,f,c
  1758  00FB62  5005               	movf	___ftpack@sign,w,c
  1759  00FB64  A4D8               	btfss	status,2,c
  1760  00FB66  8E03               	bsf	___ftpack@arg+2,7,c
  1761  00FB68  C001  F001         	movff	___ftpack@arg,?___ftpack
  1762  00FB6C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1763  00FB70  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1764  00FB74  0012               	return	
  1765  00FB76                     __end_of___ftpack:
  1766                           	opt stack 0
  1767                           wreg	equ	0xFE8
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function _PWM_Max_Duty *****************
  1771 ;; Defined at:
  1772 ;;		line 17 in file "newmain.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2   14[COMRAM] int 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;Total ram usage:        6 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    1
  1793 ;; This function calls:
  1794 ;;		___aldiv
  1795 ;; This function is called by:
  1796 ;;		_PWM1_Duty
  1797 ;;		_PWM2_Duty
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text13
  1802  00F872                     __ptext13:
  1803                           	opt stack 0
  1804  00F872                     _PWM_Max_Duty:
  1805                           	opt stack 28
  1806                           
  1807                           ;newmain.c: 19: return(10000000/(freq*4);
  1808                           
  1809                           ;incstack = 0
  1810  00F872  0E80               	movlw	128
  1811  00F874  6E01               	movwf	___aldiv@dividend,c
  1812  00F876  0E96               	movlw	150
  1813  00F878  6E02               	movwf	___aldiv@dividend+1,c
  1814  00F87A  0E98               	movlw	152
  1815  00F87C  6E03               	movwf	___aldiv@dividend+2,c
  1816  00F87E  0E00               	movlw	0
  1817  00F880  6E04               	movwf	___aldiv@dividend+3,c
  1818  00F882  C042  F011         	movff	_freq,??_PWM_Max_Duty
  1819  00F886  C043  F012         	movff	_freq+1,??_PWM_Max_Duty+1
  1820  00F88A  C044  F013         	movff	_freq+2,??_PWM_Max_Duty+2
  1821  00F88E  C045  F014         	movff	_freq+3,??_PWM_Max_Duty+3
  1822  00F892  0E02               	movlw	2
  1823  00F894                     u685:
  1824  00F894  90D8               	bcf	status,0,c
  1825  00F896  3611               	rlcf	??_PWM_Max_Duty,f,c
  1826  00F898  3612               	rlcf	??_PWM_Max_Duty+1,f,c
  1827  00F89A  3613               	rlcf	??_PWM_Max_Duty+2,f,c
  1828  00F89C  3614               	rlcf	??_PWM_Max_Duty+3,f,c
  1829  00F89E  2EE8               	decfsz	wreg,f,c
  1830  00F8A0  D7F9               	goto	u685
  1831  00F8A2  C011  F005         	movff	??_PWM_Max_Duty,___aldiv@divisor
  1832  00F8A6  C012  F006         	movff	??_PWM_Max_Duty+1,___aldiv@divisor+1
  1833  00F8AA  C013  F007         	movff	??_PWM_Max_Duty+2,___aldiv@divisor+2
  1834  00F8AE  C014  F008         	movff	??_PWM_Max_Duty+3,___aldiv@divisor+3
  1835  00F8B2  ECBB  F07D         	call	___aldiv	;wreg free
  1836  00F8B6  C001  F00F         	movff	?___aldiv,?_PWM_Max_Duty
  1837  00F8BA  C002  F010         	movff	?___aldiv+1,?_PWM_Max_Duty+1
  1838  00F8BE  0012               	return	
  1839  00F8C0                     __end_of_PWM_Max_Duty:
  1840                           	opt stack 0
  1841                           wreg	equ	0xFE8
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function ___aldiv *****************
  1845 ;; Defined at:
  1846 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/aldiv.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  dividend        4    0[COMRAM] long 
  1849 ;;  divisor         4    4[COMRAM] long 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  quotient        4   10[COMRAM] long 
  1852 ;;  sign            1    9[COMRAM] unsigned char 
  1853 ;;  counter         1    8[COMRAM] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  4    0[COMRAM] long 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;Total ram usage:       14 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_PWM_Max_Duty
  1873 ;;		_PWM1_Init
  1874 ;;		_PWM2_Init
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text14
  1879  00FB76                     __ptext14:
  1880                           	opt stack 0
  1881  00FB76                     ___aldiv:
  1882                           	opt stack 29
  1883                           
  1884                           ;incstack = 0
  1885  00FB76  0E00               	movlw	0
  1886  00FB78  6E0A               	movwf	___aldiv@sign,c
  1887  00FB7A  AE08               	btfss	___aldiv@divisor+3,7,c
  1888  00FB7C  D00A               	goto	l1066
  1889  00FB7E  1E08               	comf	___aldiv@divisor+3,f,c
  1890  00FB80  1E07               	comf	___aldiv@divisor+2,f,c
  1891  00FB82  1E06               	comf	___aldiv@divisor+1,f,c
  1892  00FB84  6C05               	negf	___aldiv@divisor,c
  1893  00FB86  0E00               	movlw	0
  1894  00FB88  2206               	addwfc	___aldiv@divisor+1,f,c
  1895  00FB8A  2207               	addwfc	___aldiv@divisor+2,f,c
  1896  00FB8C  2208               	addwfc	___aldiv@divisor+3,f,c
  1897  00FB8E  0E01               	movlw	1
  1898  00FB90  6E0A               	movwf	___aldiv@sign,c
  1899  00FB92                     l1066:
  1900  00FB92  AE04               	btfss	___aldiv@dividend+3,7,c
  1901  00FB94  D00A               	goto	l1072
  1902  00FB96  1E04               	comf	___aldiv@dividend+3,f,c
  1903  00FB98  1E03               	comf	___aldiv@dividend+2,f,c
  1904  00FB9A  1E02               	comf	___aldiv@dividend+1,f,c
  1905  00FB9C  6C01               	negf	___aldiv@dividend,c
  1906  00FB9E  0E00               	movlw	0
  1907  00FBA0  2202               	addwfc	___aldiv@dividend+1,f,c
  1908  00FBA2  2203               	addwfc	___aldiv@dividend+2,f,c
  1909  00FBA4  2204               	addwfc	___aldiv@dividend+3,f,c
  1910  00FBA6  0E01               	movlw	1
  1911  00FBA8  1A0A               	xorwf	___aldiv@sign,f,c
  1912  00FBAA                     l1072:
  1913  00FBAA  0E00               	movlw	0
  1914  00FBAC  6E0B               	movwf	___aldiv@quotient,c
  1915  00FBAE  0E00               	movlw	0
  1916  00FBB0  6E0C               	movwf	___aldiv@quotient+1,c
  1917  00FBB2  0E00               	movlw	0
  1918  00FBB4  6E0D               	movwf	___aldiv@quotient+2,c
  1919  00FBB6  0E00               	movlw	0
  1920  00FBB8  6E0E               	movwf	___aldiv@quotient+3,c
  1921  00FBBA  5005               	movf	___aldiv@divisor,w,c
  1922  00FBBC  1006               	iorwf	___aldiv@divisor+1,w,c
  1923  00FBBE  1007               	iorwf	___aldiv@divisor+2,w,c
  1924  00FBC0  1008               	iorwf	___aldiv@divisor+3,w,c
  1925  00FBC2  B4D8               	btfsc	status,2,c
  1926  00FBC4  D02A               	goto	l1094
  1927  00FBC6  0E01               	movlw	1
  1928  00FBC8  6E09               	movwf	___aldiv@counter,c
  1929  00FBCA  D006               	goto	l1080
  1930  00FBCC                     l1078:
  1931  00FBCC  90D8               	bcf	status,0,c
  1932  00FBCE  3605               	rlcf	___aldiv@divisor,f,c
  1933  00FBD0  3606               	rlcf	___aldiv@divisor+1,f,c
  1934  00FBD2  3607               	rlcf	___aldiv@divisor+2,f,c
  1935  00FBD4  3608               	rlcf	___aldiv@divisor+3,f,c
  1936  00FBD6  2A09               	incf	___aldiv@counter,f,c
  1937  00FBD8                     l1080:
  1938  00FBD8  AE08               	btfss	___aldiv@divisor+3,7,c
  1939  00FBDA  D7F8               	goto	l1078
  1940  00FBDC                     l1082:
  1941  00FBDC  90D8               	bcf	status,0,c
  1942  00FBDE  360B               	rlcf	___aldiv@quotient,f,c
  1943  00FBE0  360C               	rlcf	___aldiv@quotient+1,f,c
  1944  00FBE2  360D               	rlcf	___aldiv@quotient+2,f,c
  1945  00FBE4  360E               	rlcf	___aldiv@quotient+3,f,c
  1946  00FBE6  5005               	movf	___aldiv@divisor,w,c
  1947  00FBE8  5C01               	subwf	___aldiv@dividend,w,c
  1948  00FBEA  5006               	movf	___aldiv@divisor+1,w,c
  1949  00FBEC  5802               	subwfb	___aldiv@dividend+1,w,c
  1950  00FBEE  5007               	movf	___aldiv@divisor+2,w,c
  1951  00FBF0  5803               	subwfb	___aldiv@dividend+2,w,c
  1952  00FBF2  5008               	movf	___aldiv@divisor+3,w,c
  1953  00FBF4  5804               	subwfb	___aldiv@dividend+3,w,c
  1954  00FBF6  A0D8               	btfss	status,0,c
  1955  00FBF8  D009               	goto	l1090
  1956  00FBFA  5005               	movf	___aldiv@divisor,w,c
  1957  00FBFC  5E01               	subwf	___aldiv@dividend,f,c
  1958  00FBFE  5006               	movf	___aldiv@divisor+1,w,c
  1959  00FC00  5A02               	subwfb	___aldiv@dividend+1,f,c
  1960  00FC02  5007               	movf	___aldiv@divisor+2,w,c
  1961  00FC04  5A03               	subwfb	___aldiv@dividend+2,f,c
  1962  00FC06  5008               	movf	___aldiv@divisor+3,w,c
  1963  00FC08  5A04               	subwfb	___aldiv@dividend+3,f,c
  1964  00FC0A  800B               	bsf	___aldiv@quotient,0,c
  1965  00FC0C                     l1090:
  1966  00FC0C  90D8               	bcf	status,0,c
  1967  00FC0E  3208               	rrcf	___aldiv@divisor+3,f,c
  1968  00FC10  3207               	rrcf	___aldiv@divisor+2,f,c
  1969  00FC12  3206               	rrcf	___aldiv@divisor+1,f,c
  1970  00FC14  3205               	rrcf	___aldiv@divisor,f,c
  1971  00FC16  2E09               	decfsz	___aldiv@counter,f,c
  1972  00FC18  D7E1               	goto	l1082
  1973  00FC1A                     l1094:
  1974  00FC1A  500A               	movf	___aldiv@sign,w,c
  1975  00FC1C  B4D8               	btfsc	status,2,c
  1976  00FC1E  D008               	goto	l1098
  1977  00FC20  1E0E               	comf	___aldiv@quotient+3,f,c
  1978  00FC22  1E0D               	comf	___aldiv@quotient+2,f,c
  1979  00FC24  1E0C               	comf	___aldiv@quotient+1,f,c
  1980  00FC26  6C0B               	negf	___aldiv@quotient,c
  1981  00FC28  0E00               	movlw	0
  1982  00FC2A  220C               	addwfc	___aldiv@quotient+1,f,c
  1983  00FC2C  220D               	addwfc	___aldiv@quotient+2,f,c
  1984  00FC2E  220E               	addwfc	___aldiv@quotient+3,f,c
  1985  00FC30                     l1098:
  1986  00FC30  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1987  00FC34  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1988  00FC38  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1989  00FC3C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1990  00FC40  0012               	return	
  1991  00FC42                     __end_of___aldiv:
  1992                           	opt stack 0
  1993  0000                     wreg	equ	0xFE8
  1994                           status	equ	0xFD8
  1995                           wreg	equ	0xFE8
  1996                           status	equ	0xFD8
  1997                           
  1998                           	psect	rparam
  1999  0000                     wreg	equ	0xFE8
  2000                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     65      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM1_Duty
    _main->_PWM2_Duty
    _PWM2_Init->___aldiv
    _PWM2_Duty->___fttol
    _PWM1_Init->___aldiv
    _PWM1_Duty->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   24314
                                             60 COMRAM     5     5      0
                          _PWM1_Duty
                          _PWM1_Init
                         _PWM1_Start
                          _PWM2_Duty
                          _PWM2_Init
                         _PWM2_Start
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Init                                            8     4      4     792
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM2_Duty                                            4     2      2   11252
                                             56 COMRAM     4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     4      4     792
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM1_Duty                                            4     2      2   11252
                                             56 COMRAM     4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2220
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     380
                                             41 COMRAM    15    11      4
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2754
                                             26 COMRAM    15     9      6
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2708
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2289
                                             20 COMRAM     4     1      3
                       _PWM_Max_Duty (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2070
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PWM_Max_Duty                                         6     4      2     684
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     684
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM1_Init
     ___aldiv
   _PWM1_Start
   _PWM2_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM2_Init
     ___aldiv
   _PWM2_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     41      45       1       54.3%
STACK                0      0       0       2        0.0%
DATA                 0      0      45       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0      45      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar  8 17:40:51 2017

            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    l311 FB56                      l369 FCF6             __CFG_CPB$OFF 000000  
                    _RD0 007C18                      _RD1 007C19                      _RD2 007C1A  
                    _RD3 007C1B                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    u711 FC7A                      u811 FF1C                      u741 FE28  
                    u830 FF56                      u761 FE50                      u905 F8F2  
                    u691 FC52                      u835 FF4E                      u915 F94C  
                    u940 FA12                      u685 F894                      u925 F95C  
                    u970 FAAC                      u895 F8E2                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0015             ___ftdiv@sign 001A  
           __CFG_WDT$OFF 000000                     l1030 FAE6                     l1040 FB42  
                   l1032 FAF0                     l1112 FC6A                     l1042 FB4C  
                   l1034 FB0E                     l1026 FAD8                     l1038 FB24  
                   l1118 FC92                     l1080 FBD8                     l1072 FBAA  
                   l1208 F84E                     l1240 FFAE                     l1312 FDA2  
                   l1090 FC0C                     l1082 FBDC                     l1066 FB92  
                   l1138 FCD0                     l1250 FFD8                     l1218 FF38  
                   l1330 FDEE                     l1306 FD86                     l1164 FE68  
                   l1236 FF9E                     l1324 FDD6                     l1078 FBCC  
                   l1094 FC1A                     l1182 FEAA                     l1158 FE40  
                   l1254 FFEE                     l1246 FFC6                     l1318 FDBA  
                   l1192 FED2                     l1248 FFD2                     l1098 FC30  
                   l1178 FE9A                     l1188 FEC2                     l1278 FA14  
                   l1288 FAAE                     u1077 FE0C             _PWM_Max_Duty F872  
                   _main FD28                     _freq 0042             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___ftmul@cntr 0028             ___param_bank 000000  
           ___ftmul@sign 0029             ___fttol@exp1 0038             ___fttol@lval 0034  
        __end_of___aldiv FC42                    ?_main 0001                    _CCP1X 007DED  
                  _CCP1Y 007DEC                    _CCP2X 007DD5                    _CCP2Y 007DD4  
        __end_of___ftdiv FD28          __end_of___ftmul FF0C          __end_of___fttol 0000  
                  _TRISB 000F93                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
     __size_of_PWM1_Init 006A       __size_of_PWM1_Duty 009A              ?_PWM1_Start 0001  
     __size_of_PWM2_Init 006A       __size_of_PWM2_Duty 009A              ?_PWM2_Start 0001  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 0018            ___ftpack@sign 0005  
                  main@i 003E                    main@j 0040                    status 000FD8  
         __CFG_PBADEN$ON 000000          __initialization F7F8             __end_of_main FE18  
                 ??_main 003D            ___fttol@sign1 0033            __activetblptr 000000  
                 _CCP1M2 007DEA                   _CCP1M3 007DEB                   _CCP2M2 007DD2  
                 _CCP2M3 007DD3                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
       __end_of___awtoft F872         __end_of___ftpack FB76         __end_of___lwtoft F83A  
                 _TMR2ON 007E52                   _TRISC1 007CA1                   _TRISC2 007CA2  
         __CFG_XINST$OFF 000000        __end_of_PWM1_Init F92A        __end_of_PWM1_Duty FA2E  
      __end_of_PWM2_Init F994        __end_of_PWM2_Duty FAC8                ??___aldiv 0009  
         __CFG_STVREN$ON 000000      __size_of_PWM1_Start 000A                ??___ftdiv 0012  
    __size_of_PWM2_Start 000E                ??___ftmul 0021                ??___fttol 002E  
  ___ftmul@f3_as_product 0025               __accesstop 0080  __end_of__initialization F7F8  
          ___rparam_used 000001               ___ftdiv@f1 000C               ___ftdiv@f2 000F  
             ___ftdiv@f3 0016               ___awtoft@c 0015               ___ftmul@f1 001B  
             ___ftmul@f2 001E               ___fttol@f1 002A           __pcstackCOMRAM 0001  
             ___lwtoft@c 0009               __pnvCOMRAM 0042                ?___awtoft 0015  
              ?___ftpack 0001                  _T2CKPS0 007E50                  _T2CKPS1 007E51  
              ?___lwtoft 0009             ??_PWM1_Start 0001             ??_PWM2_Start 0001  
                __Hparam 0000                  __Lparam 0000                  ___aldiv FB76  
                ___ftdiv FC42                  ___ftmul FE18                  ___fttol FF0C  
     __end_of_PWM1_Start F808       __end_of_PWM2_Start F816                  __pcinit F7F8  
             ??___awtoft 0018               ??___ftpack 0006                  __ramtop 1000  
                __ptext0 FD28                  __ptext1 F808                  __ptext2 F92A  
                __ptext3 FA2E                  __ptext4 F7FE                  __ptext5 F8C0  
                __ptext6 F994                  __ptext7 F816                  __ptext8 FF0C  
                __ptext9 FE18               ??___lwtoft 000C         ___aldiv@dividend 0001  
   end_of_initialization F7F8         ___aldiv@quotient 000B                _PWM1_Init F8C0  
              _PWM1_Duty F994                _PWM2_Init F92A                _PWM2_Duty FA2E  
            ___ftdiv@exp 0019              ___ftmul@exp 0024               ?_PWM1_Init 000F  
             ?_PWM1_Duty 0039               ?_PWM2_Init 000F               ?_PWM2_Duty 0039  
    start_initialization F7F8            ?_PWM_Max_Duty 000F         __CFG_LPT1OSC$OFF 000000  
      __size_of___awtoft 0038        __size_of___ftpack 00AE        __size_of___lwtoft 0024  
         ??_PWM_Max_Duty 0011        __CFG_CCP2MX$PORTC 000000                 ?___aldiv 0001  
               ?___ftdiv 000C                 ?___ftmul 001B                 ?___fttol 002A  
            ??_PWM1_Init 0013              ??_PWM1_Duty 003B              ??_PWM2_Init 0013  
            ??_PWM2_Duty 003B          ___aldiv@divisor 0005          ___aldiv@counter 0009  
          PWM1_Duty@duty 0039         __CFG_WDTPS$32768 000000            PWM2_Duty@duty 0039  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___aldiv 00CC     __end_of_PWM_Max_Duty F8C0         __size_of___ftdiv 00E6  
       __size_of___ftmul 00F4         __size_of___fttol 00F4                 ___awtoft F83A  
               ___ftpack FAC8                 ___lwtoft F816                 __ptext10 FC42  
               __ptext11 F83A                 __ptext12 FAC8                 __ptext13 F872  
               __ptext14 FB76            __size_of_main 00F0             PWM1_Init@fre 000F  
           PWM2_Init@fre 000F             ___aldiv@sign 000A               _PWM1_Start F7FE  
             _PWM2_Start F808    __size_of_PWM_Max_Duty 004E  
