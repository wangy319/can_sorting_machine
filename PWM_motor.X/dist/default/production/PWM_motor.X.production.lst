

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Mar 14 18:49:17 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 1.41
    25                           ; Generated 25/01/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	nvCOMRAM
    60  00003D                     __pnvCOMRAM:
    61                           	opt stack 0
    62  00003D                     _freq:
    63                           	opt stack 0
    64  00003D                     	ds	4
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISC	set	3988
    67  0000                     _OSCTUNEbits	set	3995
    68  0000                     _OSCCON	set	4051
    69  0000                     _TRISCbits	set	3988
    70  0000                     _CCPR1L	set	4030
    71  0000                     _PR2	set	4043
    72  0000                     _TMR2ON	set	32338
    73  0000                     _CCP1M0	set	32232
    74  0000                     _CCP1M1	set	32233
    75  0000                     _CCP1M2	set	32234
    76  0000                     _CCP1M3	set	32235
    77  0000                     _P1M0	set	32238
    78  0000                     _P1M1	set	32239
    79  0000                     _CCP1Y	set	32236
    80  0000                     _CCP1X	set	32237
    81                           
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  00F9B6                     __pcinit:
    86                           	opt stack 0
    87  00F9B6                     start_initialization:
    88                           	opt stack 0
    89  00F9B6                     __initialization:
    90                           	opt stack 0
    91                           
    92                           ; Clear objects allocated to COMRAM (2 bytes)
    93  00F9B6  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
    94  00F9B8  6A41               	clrf	__pbssCOMRAM& (0+255),c
    95  00F9BA                     end_of_initialization:
    96                           	opt stack 0
    97  00F9BA                     __end_of__initialization:
    98                           	opt stack 0
    99  00F9BA  0100               	movlb	0
   100  00F9BC  EF17  F07D         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	bssCOMRAM
   103  000041                     __pbssCOMRAM:
   104                           	opt stack 0
   105  000041                     _i:
   106                           	opt stack 0
   107  000041                     	ds	2
   108                           
   109                           	psect	cstackCOMRAM
   110  000001                     __pcstackCOMRAM:
   111                           	opt stack 0
   112  000001                     ?___ftpack:
   113                           	opt stack 0
   114  000001                     ?___aldiv:
   115                           	opt stack 0
   116  000001                     ___ftpack@arg:
   117                           	opt stack 0
   118  000001                     ___aldiv@dividend:
   119                           	opt stack 0
   120                           
   121                           ; 4 bytes @ 0x0
   122  000001                     	ds	3
   123  000004                     ___ftpack@exp:
   124                           	opt stack 0
   125                           
   126                           ; 1 bytes @ 0x3
   127  000004                     	ds	1
   128  000005                     ___ftpack@sign:
   129                           	opt stack 0
   130  000005                     ___aldiv@divisor:
   131                           	opt stack 0
   132                           
   133                           ; 4 bytes @ 0x4
   134  000005                     	ds	1
   135  000006                     ??___ftpack:
   136                           
   137                           ; 1 bytes @ 0x5
   138  000006                     	ds	3
   139  000009                     ?___lwtoft:
   140                           	opt stack 0
   141  000009                     ___aldiv@counter:
   142                           	opt stack 0
   143  000009                     ___lwtoft@c:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x8
   147  000009                     	ds	1
   148  00000A                     ___aldiv@sign:
   149                           	opt stack 0
   150                           
   151                           ; 1 bytes @ 0x9
   152  00000A                     	ds	1
   153  00000B                     ___aldiv@quotient:
   154                           	opt stack 0
   155                           
   156                           ; 4 bytes @ 0xA
   157  00000B                     	ds	1
   158  00000C                     ?___ftdiv:
   159                           	opt stack 0
   160  00000C                     ___ftdiv@f1:
   161                           	opt stack 0
   162                           
   163                           ; 3 bytes @ 0xB
   164  00000C                     	ds	3
   165  00000F                     ?_PWM_Max_Duty:
   166                           	opt stack 0
   167  00000F                     ___ftdiv@f2:
   168                           	opt stack 0
   169  00000F                     set_PWM_freq@fre:
   170                           	opt stack 0
   171                           
   172                           ; 4 bytes @ 0xE
   173  00000F                     	ds	2
   174  000011                     ??_PWM_Max_Duty:
   175                           
   176                           ; 1 bytes @ 0x10
   177  000011                     	ds	1
   178  000012                     ??___ftdiv:
   179                           
   180                           ; 1 bytes @ 0x11
   181  000012                     	ds	1
   182  000013                     ??_set_PWM_freq:
   183                           
   184                           ; 1 bytes @ 0x12
   185  000013                     	ds	2
   186  000015                     ?___awtoft:
   187                           	opt stack 0
   188  000015                     ___ftdiv@cntr:
   189                           	opt stack 0
   190  000015                     ___awtoft@c:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x14
   194  000015                     	ds	1
   195  000016                     ___ftdiv@f3:
   196                           	opt stack 0
   197                           
   198                           ; 3 bytes @ 0x15
   199  000016                     	ds	2
   200  000018                     ___awtoft@sign:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x17
   204  000018                     	ds	1
   205  000019                     ___ftdiv@exp:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x18
   209  000019                     	ds	1
   210  00001A                     ___ftdiv@sign:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x19
   214  00001A                     	ds	1
   215  00001B                     ?___ftmul:
   216                           	opt stack 0
   217  00001B                     ___ftmul@f1:
   218                           	opt stack 0
   219                           
   220                           ; 3 bytes @ 0x1A
   221  00001B                     	ds	3
   222  00001E                     ___ftmul@f2:
   223                           	opt stack 0
   224                           
   225                           ; 3 bytes @ 0x1D
   226  00001E                     	ds	3
   227  000021                     ??___ftmul:
   228                           
   229                           ; 1 bytes @ 0x20
   230  000021                     	ds	3
   231  000024                     ___ftmul@exp:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x23
   235  000024                     	ds	1
   236  000025                     ___ftmul@f3_as_product:
   237                           	opt stack 0
   238                           
   239                           ; 3 bytes @ 0x24
   240  000025                     	ds	3
   241  000028                     ___ftmul@cntr:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x27
   245  000028                     	ds	1
   246  000029                     ___ftmul@sign:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x28
   250  000029                     	ds	1
   251  00002A                     ?___fttol:
   252                           	opt stack 0
   253  00002A                     ___fttol@f1:
   254                           	opt stack 0
   255                           
   256                           ; 3 bytes @ 0x29
   257  00002A                     	ds	4
   258  00002E                     ??___fttol:
   259                           
   260                           ; 1 bytes @ 0x2D
   261  00002E                     	ds	5
   262  000033                     ___fttol@sign1:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x32
   266  000033                     	ds	1
   267  000034                     ___fttol@lval:
   268                           	opt stack 0
   269                           
   270                           ; 4 bytes @ 0x33
   271  000034                     	ds	4
   272  000038                     ___fttol@exp1:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x37
   276  000038                     	ds	1
   277  000039                     set_PWM1_duty@duty:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x38
   281  000039                     	ds	2
   282  00003B                     ??_set_PWM1_duty:
   283                           
   284                           ; 1 bytes @ 0x3A
   285  00003B                     	ds	2
   286  00003D                     
   287                           ; 1 bytes @ 0x3C
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 156 in file "PWM_motor.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels required when called:    3
   313 ;; This function calls:
   314 ;;		_PWM1_Start
   315 ;;		_set_PWM1_duty
   316 ;;		_set_PWM_freq
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text0
   323  00FA2E                     __ptext0:
   324                           	opt stack 0
   325  00FA2E                     _main:
   326                           	opt stack 28
   327                           
   328                           ;PWM_motor.c: 158: OSCCON = OSCCON | 0b01110000;
   329                           
   330                           ;incstack = 0
   331  00FA2E  50D3               	movf	4051,w,c	;volatile
   332  00FA30  0970               	iorlw	112
   333  00FA32  6ED3               	movwf	4051,c	;volatile
   334                           
   335                           ;PWM_motor.c: 160: OSCTUNEbits.PLLEN = 1;
   336  00FA34  8C9B               	bsf	3995,6,c	;volatile
   337                           
   338                           ;PWM_motor.c: 164: set_PWM_freq (3100);
   339  00FA36  0E1C               	movlw	28
   340  00FA38  6E0F               	movwf	set_PWM_freq@fre,c
   341  00FA3A  0E0C               	movlw	12
   342  00FA3C  6E10               	movwf	set_PWM_freq@fre+1,c
   343  00FA3E  0E00               	movlw	0
   344  00FA40  6E11               	movwf	set_PWM_freq@fre+2,c
   345  00FA42  0E00               	movlw	0
   346  00FA44  6E12               	movwf	set_PWM_freq@fre+3,c
   347  00FA46  EC5A  F07D         	call	_set_PWM_freq	;wreg free
   348                           
   349                           ;PWM_motor.c: 166: PWM1_Start();
   350  00FA4A  ECE0  F07C         	call	_PWM1_Start	;wreg free
   351                           
   352                           ;PWM_motor.c: 169: TRISC = 0x11110001;
   353  00FA4E  0E01               	movlw	1
   354  00FA50  6E94               	movwf	3988,c	;volatile
   355                           
   356                           ;PWM_motor.c: 170: set_PWM1_duty(1022);
   357  00FA52  0E03               	movlw	3
   358  00FA54  6E3A               	movwf	set_PWM1_duty@duty+1,c
   359  00FA56  0EFE               	movlw	254
   360  00FA58  6E39               	movwf	set_PWM1_duty@duty,c
   361  00FA5A  EC8F  F07D         	call	_set_PWM1_duty	;wreg free
   362                           
   363                           ;PWM_motor.c: 171: TRISB = 0x00;
   364  00FA5E  0E00               	movlw	0
   365  00FA60  6E93               	movwf	3987,c	;volatile
   366  00FA62  EF00  F000         	goto	start
   367  00FA66                     __end_of_main:
   368                           	opt stack 0
   369                           
   370 ;; *************** function _set_PWM_freq *****************
   371 ;; Defined at:
   372 ;;		line 93 in file "PWM_motor.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  fre             4   14[COMRAM] long 
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   389 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;Total ram usage:        8 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    1
   393 ;; This function calls:
   394 ;;		___aldiv
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text1
   401  00FAB4                     __ptext1:
   402                           	opt stack 0
   403  00FAB4                     _set_PWM_freq:
   404                           	opt stack 29
   405                           
   406                           ;PWM_motor.c: 98: PR2 = (32000000/(fre*4*16)) - 1;
   407                           
   408                           ;incstack = 0
   409  00FAB4  0E00               	movlw	0
   410  00FAB6  6E01               	movwf	___aldiv@dividend,c
   411  00FAB8  0E48               	movlw	72
   412  00FABA  6E02               	movwf	___aldiv@dividend+1,c
   413  00FABC  0EE8               	movlw	232
   414  00FABE  6E03               	movwf	___aldiv@dividend+2,c
   415  00FAC0  0E01               	movlw	1
   416  00FAC2  6E04               	movwf	___aldiv@dividend+3,c
   417  00FAC4  C00F  F013         	movff	set_PWM_freq@fre,??_set_PWM_freq
   418  00FAC8  C010  F014         	movff	set_PWM_freq@fre+1,??_set_PWM_freq+1
   419  00FACC  C011  F015         	movff	set_PWM_freq@fre+2,??_set_PWM_freq+2
   420  00FAD0  C012  F016         	movff	set_PWM_freq@fre+3,??_set_PWM_freq+3
   421  00FAD4  0E02               	movlw	2
   422  00FAD6                     u775:
   423  00FAD6  90D8               	bcf	status,0,c
   424  00FAD8  3613               	rlcf	??_set_PWM_freq,f,c
   425  00FADA  3614               	rlcf	??_set_PWM_freq+1,f,c
   426  00FADC  3615               	rlcf	??_set_PWM_freq+2,f,c
   427  00FADE  3616               	rlcf	??_set_PWM_freq+3,f,c
   428  00FAE0  2EE8               	decfsz	wreg,f,c
   429  00FAE2  D7F9               	goto	u775
   430  00FAE4  0E04               	movlw	4
   431  00FAE6                     u785:
   432  00FAE6  90D8               	bcf	status,0,c
   433  00FAE8  3613               	rlcf	??_set_PWM_freq,f,c
   434  00FAEA  3614               	rlcf	??_set_PWM_freq+1,f,c
   435  00FAEC  3615               	rlcf	??_set_PWM_freq+2,f,c
   436  00FAEE  3616               	rlcf	??_set_PWM_freq+3,f,c
   437  00FAF0  2EE8               	decfsz	wreg,f,c
   438  00FAF2  D7F9               	goto	u785
   439  00FAF4  C013  F005         	movff	??_set_PWM_freq,___aldiv@divisor
   440  00FAF8  C014  F006         	movff	??_set_PWM_freq+1,___aldiv@divisor+1
   441  00FAFC  C015  F007         	movff	??_set_PWM_freq+2,___aldiv@divisor+2
   442  00FB00  C016  F008         	movff	??_set_PWM_freq+3,___aldiv@divisor+3
   443  00FB04  EC33  F07E         	call	___aldiv	;wreg free
   444  00FB08  0401               	decf	?___aldiv,w,c
   445  00FB0A  6ECB               	movwf	4043,c	;volatile
   446                           
   447                           ;PWM_motor.c: 99: freq = fre;
   448  00FB0C  C00F  F03D         	movff	set_PWM_freq@fre,_freq
   449  00FB10  C010  F03E         	movff	set_PWM_freq@fre+1,_freq+1
   450  00FB14  C011  F03F         	movff	set_PWM_freq@fre+2,_freq+2
   451  00FB18  C012  F040         	movff	set_PWM_freq@fre+3,_freq+3
   452  00FB1C  0012               	return		;funcret
   453  00FB1E                     __end_of_set_PWM_freq:
   454                           	opt stack 0
   455                           wreg	equ	0xFE8
   456                           status	equ	0xFD8
   457                           
   458 ;; *************** function _set_PWM1_duty *****************
   459 ;; Defined at:
   460 ;;		line 102 in file "PWM_motor.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;  duty            2   56[COMRAM] unsigned int 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        4 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    2
   481 ;; This function calls:
   482 ;;		_PWM_Max_Duty
   483 ;;		___awtoft
   484 ;;		___ftdiv
   485 ;;		___ftmul
   486 ;;		___fttol
   487 ;;		___lwtoft
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text2
   494  00FB1E                     __ptext2:
   495                           	opt stack 0
   496  00FB1E                     _set_PWM1_duty:
   497                           	opt stack 28
   498                           
   499                           ;PWM_motor.c: 107: if(duty<1024)
   500                           
   501                           ;incstack = 0
   502  00FB1E  0E04               	movlw	4
   503  00FB20  5C3A               	subwf	set_PWM1_duty@duty+1,w,c
   504  00FB22  B0D8               	btfsc	status,0,c
   505  00FB24  0012               	return	
   506                           
   507                           ;PWM_motor.c: 108: {
   508                           ;PWM_motor.c: 109: duty = ((float)duty/1023)*PWM_Max_Duty();
   509  00FB26  EC33  F07D         	call	_PWM_Max_Duty	;wreg free
   510  00FB2A  C00F  F015         	movff	?_PWM_Max_Duty,___awtoft@c
   511  00FB2E  C010  F016         	movff	?_PWM_Max_Duty+1,___awtoft@c+1
   512  00FB32  ECFB  F07C         	call	___awtoft	;wreg free
   513  00FB36  C015  F01E         	movff	?___awtoft,___ftmul@f2
   514  00FB3A  C016  F01F         	movff	?___awtoft+1,___ftmul@f2+1
   515  00FB3E  C017  F020         	movff	?___awtoft+2,___ftmul@f2+2
   516  00FB42  0EC0               	movlw	192
   517  00FB44  6E0F               	movwf	___ftdiv@f2,c
   518  00FB46  0E7F               	movlw	127
   519  00FB48  6E10               	movwf	___ftdiv@f2+1,c
   520  00FB4A  0E44               	movlw	68
   521  00FB4C  6E11               	movwf	___ftdiv@f2+2,c
   522  00FB4E  C039  F009         	movff	set_PWM1_duty@duty,___lwtoft@c
   523  00FB52  C03A  F00A         	movff	set_PWM1_duty@duty+1,___lwtoft@c+1
   524  00FB56  ECE9  F07C         	call	___lwtoft	;wreg free
   525  00FB5A  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
   526  00FB5E  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
   527  00FB62  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
   528  00FB66  EC99  F07E         	call	___ftdiv	;wreg free
   529  00FB6A  C00C  F01B         	movff	?___ftdiv,___ftmul@f1
   530  00FB6E  C00D  F01C         	movff	?___ftdiv+1,___ftmul@f1+1
   531  00FB72  C00E  F01D         	movff	?___ftdiv+2,___ftmul@f1+2
   532  00FB76  EC0C  F07F         	call	___ftmul	;wreg free
   533  00FB7A  C01B  F02A         	movff	?___ftmul,___fttol@f1
   534  00FB7E  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
   535  00FB82  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
   536  00FB86  EC86  F07F         	call	___fttol	;wreg free
   537  00FB8A  C02A  F039         	movff	?___fttol,set_PWM1_duty@duty
   538  00FB8E  C02B  F03A         	movff	?___fttol+1,set_PWM1_duty@duty+1
   539                           
   540                           ;PWM_motor.c: 110: CCP1X = duty & 2;
   541  00FB92  9ABD               	bcf	4029,5,c	;volatile
   542                           
   543                           ;PWM_motor.c: 111: CCP1Y = duty & 1;
   544  00FB94  A039               	btfss	set_PWM1_duty@duty,0,c
   545  00FB96  D002               	goto	u800
   546  00FB98  88BD               	bsf	4029,4,c	;volatile
   547  00FB9A  D001               	goto	l1205
   548  00FB9C                     u800:
   549  00FB9C  98BD               	bcf	4029,4,c	;volatile
   550  00FB9E                     l1205:
   551                           
   552                           ;PWM_motor.c: 112: CCPR1L = duty>>2;
   553  00FB9E  C039  F03B         	movff	set_PWM1_duty@duty,??_set_PWM1_duty
   554  00FBA2  C03A  F03C         	movff	set_PWM1_duty@duty+1,??_set_PWM1_duty+1
   555  00FBA6  90D8               	bcf	status,0,c
   556  00FBA8  323C               	rrcf	??_set_PWM1_duty+1,f,c
   557  00FBAA  323B               	rrcf	??_set_PWM1_duty,f,c
   558  00FBAC  90D8               	bcf	status,0,c
   559  00FBAE  323C               	rrcf	??_set_PWM1_duty+1,f,c
   560  00FBB0  323B               	rrcf	??_set_PWM1_duty,f,c
   561  00FBB2  503B               	movf	??_set_PWM1_duty,w,c
   562  00FBB4  6EBE               	movwf	4030,c	;volatile
   563  00FBB6  0012               	return	
   564  00FBB8                     __end_of_set_PWM1_duty:
   565                           	opt stack 0
   566                           wreg	equ	0xFE8
   567                           status	equ	0xFD8
   568                           
   569 ;; *************** function ___lwtoft *****************
   570 ;; Defined at:
   571 ;;		line 28 in file "/Applications/microchip/xc8/v1.41/sources/common/lwtoft.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  c               2    8[COMRAM] unsigned int 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  3    8[COMRAM] float 
   578 ;; Registers used:
   579 ;;		wreg, status,2, status,0, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        3 bytes
   590 ;; Hardware stack levels used:    1
   591 ;; Hardware stack levels required when called:    1
   592 ;; This function calls:
   593 ;;		___ftpack
   594 ;; This function is called by:
   595 ;;		_set_PWM1_duty
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text3
   600  00F9D2                     __ptext3:
   601                           	opt stack 0
   602  00F9D2                     ___lwtoft:
   603                           	opt stack 28
   604                           
   605                           ;incstack = 0
   606  00F9D2  C009  F001         	movff	___lwtoft@c,___ftpack@arg
   607  00F9D6  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
   608  00F9DA  6A03               	clrf	___ftpack@arg+2,c
   609  00F9DC  0E8E               	movlw	142
   610  00F9DE  6E04               	movwf	___ftpack@exp,c
   611  00F9E0  0E00               	movlw	0
   612  00F9E2  6E05               	movwf	___ftpack@sign,c
   613  00F9E4  ECDC  F07D         	call	___ftpack	;wreg free
   614  00F9E8  C001  F009         	movff	?___ftpack,?___lwtoft
   615  00F9EC  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
   616  00F9F0  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
   617  00F9F4  0012               	return	
   618  00F9F6                     __end_of___lwtoft:
   619                           	opt stack 0
   620                           wreg	equ	0xFE8
   621                           status	equ	0xFD8
   622                           
   623 ;; *************** function ___fttol *****************
   624 ;; Defined at:
   625 ;;		line 44 in file "/Applications/microchip/xc8/v1.41/sources/common/fttol.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  f1              3   41[COMRAM] float 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  lval            4   51[COMRAM] unsigned long 
   630 ;;  exp1            1   55[COMRAM] unsigned char 
   631 ;;  sign1           1   50[COMRAM] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  4   41[COMRAM] long 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;Total ram usage:       15 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_set_PWM1_duty
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text4
   655  00FF0C                     __ptext4:
   656                           	opt stack 0
   657  00FF0C                     ___fttol:
   658                           	opt stack 29
   659                           
   660                           ;incstack = 0
   661  00FF0C  C02C  F02E         	movff	___fttol@f1+2,??___fttol
   662  00FF10  6A2F               	clrf	(??___fttol+1)& (0+255),c
   663  00FF12  6A30               	clrf	(??___fttol+2)& (0+255),c
   664  00FF14  342B               	rlcf	___fttol@f1+1,w,c
   665  00FF16  362E               	rlcf	??___fttol& (0+255),f,c
   666  00FF18  E301               	bnc	u691
   667  00FF1A  802F               	bsf	(??___fttol+1)& (0+255),0,c
   668  00FF1C                     u691:
   669  00FF1C  502E               	movf	??___fttol,w,c
   670  00FF1E  6E38               	movwf	___fttol@exp1,c
   671  00FF20  5038               	movf	___fttol@exp1,w,c
   672  00FF22  A4D8               	btfss	status,2,c
   673  00FF24  D009               	goto	l1149
   674  00FF26  0E00               	movlw	0
   675  00FF28  6E2A               	movwf	?___fttol,c
   676  00FF2A  0E00               	movlw	0
   677  00FF2C  6E2B               	movwf	?___fttol+1,c
   678  00FF2E  0E00               	movlw	0
   679  00FF30  6E2C               	movwf	?___fttol+2,c
   680  00FF32  0E00               	movlw	0
   681  00FF34  6E2D               	movwf	?___fttol+3,c
   682  00FF36  0012               	return	
   683  00FF38                     l1149:
   684  00FF38  0E17               	movlw	23
   685  00FF3A  6E2E               	movwf	??___fttol& (0+255),c
   686  00FF3C  C02A  F02F         	movff	___fttol@f1,??___fttol+1
   687  00FF40  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
   688  00FF44  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
   689  00FF48  282E               	incf	??___fttol,w,c
   690  00FF4A  6E32               	movwf	(??___fttol+4)& (0+255),c
   691  00FF4C  D004               	goto	u710
   692  00FF4E                     u715:
   693  00FF4E  90D8               	bcf	status,0,c
   694  00FF50  3231               	rrcf	??___fttol+3,f,c
   695  00FF52  3230               	rrcf	??___fttol+2,f,c
   696  00FF54  322F               	rrcf	??___fttol+1,f,c
   697  00FF56                     u710:
   698  00FF56  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
   699  00FF58  D7FA               	goto	u715
   700  00FF5A  502F               	movf	??___fttol+1,w,c
   701  00FF5C  6E33               	movwf	___fttol@sign1,c
   702  00FF5E  8E2B               	bsf	___fttol@f1+1,7,c
   703  00FF60  0EFF               	movlw	255
   704  00FF62  162A               	andwf	___fttol@f1,f,c
   705  00FF64  0EFF               	movlw	255
   706  00FF66  162B               	andwf	___fttol@f1+1,f,c
   707  00FF68  0E00               	movlw	0
   708  00FF6A  162C               	andwf	___fttol@f1+2,f,c
   709  00FF6C  502A               	movf	___fttol@f1,w,c
   710  00FF6E  6E34               	movwf	___fttol@lval,c
   711  00FF70  502B               	movf	___fttol@f1+1,w,c
   712  00FF72  6E35               	movwf	___fttol@lval+1,c
   713  00FF74  502C               	movf	___fttol@f1+2,w,c
   714  00FF76  6E36               	movwf	___fttol@lval+2,c
   715  00FF78  6A37               	clrf	___fttol@lval+3,c
   716  00FF7A  0E8E               	movlw	142
   717  00FF7C  5E38               	subwf	___fttol@exp1,f,c
   718  00FF7E  AE38               	btfss	___fttol@exp1,7,c
   719  00FF80  D016               	goto	l1171
   720  00FF82  5038               	movf	___fttol@exp1,w,c
   721  00FF84  0A80               	xorlw	128
   722  00FF86  0F8F               	addlw	143
   723  00FF88  B0D8               	btfsc	status,0,c
   724  00FF8A  D009               	goto	l1167
   725  00FF8C  0E00               	movlw	0
   726  00FF8E  6E2A               	movwf	?___fttol,c
   727  00FF90  0E00               	movlw	0
   728  00FF92  6E2B               	movwf	?___fttol+1,c
   729  00FF94  0E00               	movlw	0
   730  00FF96  6E2C               	movwf	?___fttol+2,c
   731  00FF98  0E00               	movlw	0
   732  00FF9A  6E2D               	movwf	?___fttol+3,c
   733  00FF9C  0012               	return	
   734  00FF9E                     l1167:
   735  00FF9E  90D8               	bcf	status,0,c
   736  00FFA0  3237               	rrcf	___fttol@lval+3,f,c
   737  00FFA2  3236               	rrcf	___fttol@lval+2,f,c
   738  00FFA4  3235               	rrcf	___fttol@lval+1,f,c
   739  00FFA6  3234               	rrcf	___fttol@lval,f,c
   740  00FFA8  3E38               	incfsz	___fttol@exp1,f,c
   741  00FFAA  D7F9               	goto	l1167
   742  00FFAC  D015               	goto	l1181
   743  00FFAE                     l1171:
   744  00FFAE  0E17               	movlw	23
   745  00FFB0  6438               	cpfsgt	___fttol@exp1,c
   746  00FFB2  D00F               	goto	l1179
   747  00FFB4  0E00               	movlw	0
   748  00FFB6  6E2A               	movwf	?___fttol,c
   749  00FFB8  0E00               	movlw	0
   750  00FFBA  6E2B               	movwf	?___fttol+1,c
   751  00FFBC  0E00               	movlw	0
   752  00FFBE  6E2C               	movwf	?___fttol+2,c
   753  00FFC0  0E00               	movlw	0
   754  00FFC2  6E2D               	movwf	?___fttol+3,c
   755  00FFC4  0012               	return	
   756  00FFC6                     l1177:
   757  00FFC6  90D8               	bcf	status,0,c
   758  00FFC8  3634               	rlcf	___fttol@lval,f,c
   759  00FFCA  3635               	rlcf	___fttol@lval+1,f,c
   760  00FFCC  3636               	rlcf	___fttol@lval+2,f,c
   761  00FFCE  3637               	rlcf	___fttol@lval+3,f,c
   762  00FFD0  0638               	decf	___fttol@exp1,f,c
   763  00FFD2                     l1179:
   764  00FFD2  5038               	movf	___fttol@exp1,w,c
   765  00FFD4  A4D8               	btfss	status,2,c
   766  00FFD6  D7F7               	goto	l1177
   767  00FFD8                     l1181:
   768  00FFD8  5033               	movf	___fttol@sign1,w,c
   769  00FFDA  B4D8               	btfsc	status,2,c
   770  00FFDC  D008               	goto	l1185
   771  00FFDE  1E37               	comf	___fttol@lval+3,f,c
   772  00FFE0  1E36               	comf	___fttol@lval+2,f,c
   773  00FFE2  1E35               	comf	___fttol@lval+1,f,c
   774  00FFE4  6C34               	negf	___fttol@lval,c
   775  00FFE6  0E00               	movlw	0
   776  00FFE8  2235               	addwfc	___fttol@lval+1,f,c
   777  00FFEA  2236               	addwfc	___fttol@lval+2,f,c
   778  00FFEC  2237               	addwfc	___fttol@lval+3,f,c
   779  00FFEE                     l1185:
   780  00FFEE  C034  F02A         	movff	___fttol@lval,?___fttol
   781  00FFF2  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
   782  00FFF6  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
   783  00FFFA  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
   784  00FFFE  0012               	return	
   785  010000                     __end_of___fttol:
   786                           	opt stack 0
   787                           wreg	equ	0xFE8
   788                           status	equ	0xFD8
   789                           
   790 ;; *************** function ___ftmul *****************
   791 ;; Defined at:
   792 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/ftmul.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  f1              3   26[COMRAM] float 
   795 ;;  f2              3   29[COMRAM] float 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  f3_as_produc    3   36[COMRAM] unsigned um
   798 ;;  sign            1   40[COMRAM] unsigned char 
   799 ;;  cntr            1   39[COMRAM] unsigned char 
   800 ;;  exp             1   35[COMRAM] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  3   26[COMRAM] float 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   810 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;Total ram usage:       15 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    1
   817 ;; This function calls:
   818 ;;		___ftpack
   819 ;; This function is called by:
   820 ;;		_set_PWM1_duty
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text5
   825  00FE18                     __ptext5:
   826                           	opt stack 0
   827  00FE18                     ___ftmul:
   828                           	opt stack 28
   829                           
   830                           ;incstack = 0
   831  00FE18  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
   832  00FE1C  6A22               	clrf	(??___ftmul+1)& (0+255),c
   833  00FE1E  6A23               	clrf	(??___ftmul+2)& (0+255),c
   834  00FE20  341C               	rlcf	___ftmul@f1+1,w,c
   835  00FE22  3621               	rlcf	??___ftmul& (0+255),f,c
   836  00FE24  E301               	bnc	u621
   837  00FE26  8022               	bsf	(??___ftmul+1)& (0+255),0,c
   838  00FE28                     u621:
   839  00FE28  5021               	movf	??___ftmul,w,c
   840  00FE2A  6E24               	movwf	___ftmul@exp,c
   841  00FE2C  5024               	movf	___ftmul@exp,w,c
   842  00FE2E  A4D8               	btfss	status,2,c
   843  00FE30  D007               	goto	l1089
   844  00FE32  0E00               	movlw	0
   845  00FE34  6E1B               	movwf	?___ftmul,c
   846  00FE36  0E00               	movlw	0
   847  00FE38  6E1C               	movwf	?___ftmul+1,c
   848  00FE3A  0E00               	movlw	0
   849  00FE3C  6E1D               	movwf	?___ftmul+2,c
   850  00FE3E  0012               	return	
   851  00FE40                     l1089:
   852  00FE40  C020  F021         	movff	___ftmul@f2+2,??___ftmul
   853  00FE44  6A22               	clrf	(??___ftmul+1)& (0+255),c
   854  00FE46  6A23               	clrf	(??___ftmul+2)& (0+255),c
   855  00FE48  341F               	rlcf	___ftmul@f2+1,w,c
   856  00FE4A  3621               	rlcf	??___ftmul& (0+255),f,c
   857  00FE4C  E301               	bnc	u641
   858  00FE4E  8022               	bsf	(??___ftmul+1)& (0+255),0,c
   859  00FE50                     u641:
   860  00FE50  5021               	movf	??___ftmul,w,c
   861  00FE52  6E29               	movwf	___ftmul@sign,c
   862  00FE54  5029               	movf	___ftmul@sign,w,c
   863  00FE56  A4D8               	btfss	status,2,c
   864  00FE58  D007               	goto	l1095
   865  00FE5A  0E00               	movlw	0
   866  00FE5C  6E1B               	movwf	?___ftmul,c
   867  00FE5E  0E00               	movlw	0
   868  00FE60  6E1C               	movwf	?___ftmul+1,c
   869  00FE62  0E00               	movlw	0
   870  00FE64  6E1D               	movwf	?___ftmul+2,c
   871  00FE66  0012               	return	
   872  00FE68                     l1095:
   873  00FE68  5029               	movf	___ftmul@sign,w,c
   874  00FE6A  0F7B               	addlw	123
   875  00FE6C  2624               	addwf	___ftmul@exp,f,c
   876  00FE6E  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
   877  00FE72  5020               	movf	___ftmul@f2+2,w,c
   878  00FE74  1A29               	xorwf	___ftmul@sign,f,c
   879  00FE76  0E80               	movlw	128
   880  00FE78  1629               	andwf	___ftmul@sign,f,c
   881  00FE7A  8E1C               	bsf	___ftmul@f1+1,7,c
   882  00FE7C  8E1F               	bsf	___ftmul@f2+1,7,c
   883  00FE7E  0EFF               	movlw	255
   884  00FE80  161E               	andwf	___ftmul@f2,f,c
   885  00FE82  0EFF               	movlw	255
   886  00FE84  161F               	andwf	___ftmul@f2+1,f,c
   887  00FE86  0E00               	movlw	0
   888  00FE88  1620               	andwf	___ftmul@f2+2,f,c
   889  00FE8A  0E00               	movlw	0
   890  00FE8C  6E25               	movwf	___ftmul@f3_as_product,c
   891  00FE8E  0E00               	movlw	0
   892  00FE90  6E26               	movwf	___ftmul@f3_as_product+1,c
   893  00FE92  0E00               	movlw	0
   894  00FE94  6E27               	movwf	___ftmul@f3_as_product+2,c
   895  00FE96  0E07               	movlw	7
   896  00FE98  6E28               	movwf	___ftmul@cntr,c
   897  00FE9A                     l1109:
   898  00FE9A  A01B               	btfss	___ftmul@f1,0,c
   899  00FE9C  D006               	goto	l1113
   900  00FE9E  501E               	movf	___ftmul@f2,w,c
   901  00FEA0  2625               	addwf	___ftmul@f3_as_product,f,c
   902  00FEA2  501F               	movf	___ftmul@f2+1,w,c
   903  00FEA4  2226               	addwfc	___ftmul@f3_as_product+1,f,c
   904  00FEA6  5020               	movf	___ftmul@f2+2,w,c
   905  00FEA8  2227               	addwfc	___ftmul@f3_as_product+2,f,c
   906  00FEAA                     l1113:
   907  00FEAA  90D8               	bcf	status,0,c
   908  00FEAC  321D               	rrcf	___ftmul@f1+2,f,c
   909  00FEAE  321C               	rrcf	___ftmul@f1+1,f,c
   910  00FEB0  321B               	rrcf	___ftmul@f1,f,c
   911  00FEB2  90D8               	bcf	status,0,c
   912  00FEB4  361E               	rlcf	___ftmul@f2,f,c
   913  00FEB6  361F               	rlcf	___ftmul@f2+1,f,c
   914  00FEB8  3620               	rlcf	___ftmul@f2+2,f,c
   915  00FEBA  2E28               	decfsz	___ftmul@cntr,f,c
   916  00FEBC  D7EE               	goto	l1109
   917  00FEBE  0E09               	movlw	9
   918  00FEC0  6E28               	movwf	___ftmul@cntr,c
   919  00FEC2                     l1119:
   920  00FEC2  A01B               	btfss	___ftmul@f1,0,c
   921  00FEC4  D006               	goto	l1123
   922  00FEC6  501E               	movf	___ftmul@f2,w,c
   923  00FEC8  2625               	addwf	___ftmul@f3_as_product,f,c
   924  00FECA  501F               	movf	___ftmul@f2+1,w,c
   925  00FECC  2226               	addwfc	___ftmul@f3_as_product+1,f,c
   926  00FECE  5020               	movf	___ftmul@f2+2,w,c
   927  00FED0  2227               	addwfc	___ftmul@f3_as_product+2,f,c
   928  00FED2                     l1123:
   929  00FED2  90D8               	bcf	status,0,c
   930  00FED4  321D               	rrcf	___ftmul@f1+2,f,c
   931  00FED6  321C               	rrcf	___ftmul@f1+1,f,c
   932  00FED8  321B               	rrcf	___ftmul@f1,f,c
   933  00FEDA  90D8               	bcf	status,0,c
   934  00FEDC  3227               	rrcf	___ftmul@f3_as_product+2,f,c
   935  00FEDE  3226               	rrcf	___ftmul@f3_as_product+1,f,c
   936  00FEE0  3225               	rrcf	___ftmul@f3_as_product,f,c
   937  00FEE2  2E28               	decfsz	___ftmul@cntr,f,c
   938  00FEE4  D7EE               	goto	l1119
   939  00FEE6  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
   940  00FEEA  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
   941  00FEEE  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
   942  00FEF2  C024  F004         	movff	___ftmul@exp,___ftpack@exp
   943  00FEF6  C029  F005         	movff	___ftmul@sign,___ftpack@sign
   944  00FEFA  ECDC  F07D         	call	___ftpack	;wreg free
   945  00FEFE  C001  F01B         	movff	?___ftpack,?___ftmul
   946  00FF02  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
   947  00FF06  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
   948  00FF0A  0012               	return	
   949  00FF0C                     __end_of___ftmul:
   950                           	opt stack 0
   951                           wreg	equ	0xFE8
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function ___ftdiv *****************
   955 ;; Defined at:
   956 ;;		line 54 in file "/Applications/microchip/xc8/v1.41/sources/common/ftdiv.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  f1              3   11[COMRAM] float 
   959 ;;  f2              3   14[COMRAM] float 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  f3              3   21[COMRAM] float 
   962 ;;  sign            1   25[COMRAM] unsigned char 
   963 ;;  exp             1   24[COMRAM] unsigned char 
   964 ;;  cntr            1   20[COMRAM] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  3   11[COMRAM] float 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   974 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;Total ram usage:       15 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    1
   981 ;; This function calls:
   982 ;;		___ftpack
   983 ;; This function is called by:
   984 ;;		_set_PWM1_duty
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text6
   989  00FD32                     __ptext6:
   990                           	opt stack 0
   991  00FD32                     ___ftdiv:
   992                           	opt stack 28
   993                           
   994                           ;incstack = 0
   995  00FD32  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
   996  00FD36  6A13               	clrf	(??___ftdiv+1)& (0+255),c
   997  00FD38  6A14               	clrf	(??___ftdiv+2)& (0+255),c
   998  00FD3A  340D               	rlcf	___ftdiv@f1+1,w,c
   999  00FD3C  3612               	rlcf	??___ftdiv& (0+255),f,c
  1000  00FD3E  E301               	bnc	u571
  1001  00FD40  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  1002  00FD42                     u571:
  1003  00FD42  5012               	movf	??___ftdiv,w,c
  1004  00FD44  6E19               	movwf	___ftdiv@exp,c
  1005  00FD46  5019               	movf	___ftdiv@exp,w,c
  1006  00FD48  A4D8               	btfss	status,2,c
  1007  00FD4A  D007               	goto	l1043
  1008  00FD4C  0E00               	movlw	0
  1009  00FD4E  6E0C               	movwf	?___ftdiv,c
  1010  00FD50  0E00               	movlw	0
  1011  00FD52  6E0D               	movwf	?___ftdiv+1,c
  1012  00FD54  0E00               	movlw	0
  1013  00FD56  6E0E               	movwf	?___ftdiv+2,c
  1014  00FD58  0012               	return	
  1015  00FD5A                     l1043:
  1016  00FD5A  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
  1017  00FD5E  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  1018  00FD60  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  1019  00FD62  3410               	rlcf	___ftdiv@f2+1,w,c
  1020  00FD64  3612               	rlcf	??___ftdiv& (0+255),f,c
  1021  00FD66  E301               	bnc	u591
  1022  00FD68  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  1023  00FD6A                     u591:
  1024  00FD6A  5012               	movf	??___ftdiv,w,c
  1025  00FD6C  6E1A               	movwf	___ftdiv@sign,c
  1026  00FD6E  501A               	movf	___ftdiv@sign,w,c
  1027  00FD70  A4D8               	btfss	status,2,c
  1028  00FD72  D007               	goto	l1049
  1029  00FD74  0E00               	movlw	0
  1030  00FD76  6E0C               	movwf	?___ftdiv,c
  1031  00FD78  0E00               	movlw	0
  1032  00FD7A  6E0D               	movwf	?___ftdiv+1,c
  1033  00FD7C  0E00               	movlw	0
  1034  00FD7E  6E0E               	movwf	?___ftdiv+2,c
  1035  00FD80  0012               	return	
  1036  00FD82                     l1049:
  1037  00FD82  0E00               	movlw	0
  1038  00FD84  6E16               	movwf	___ftdiv@f3,c
  1039  00FD86  0E00               	movlw	0
  1040  00FD88  6E17               	movwf	___ftdiv@f3+1,c
  1041  00FD8A  0E00               	movlw	0
  1042  00FD8C  6E18               	movwf	___ftdiv@f3+2,c
  1043  00FD8E  501A               	movf	___ftdiv@sign,w,c
  1044  00FD90  0F89               	addlw	137
  1045  00FD92  5E19               	subwf	___ftdiv@exp,f,c
  1046  00FD94  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
  1047  00FD98  5011               	movf	___ftdiv@f2+2,w,c
  1048  00FD9A  1A1A               	xorwf	___ftdiv@sign,f,c
  1049  00FD9C  0E80               	movlw	128
  1050  00FD9E  161A               	andwf	___ftdiv@sign,f,c
  1051  00FDA0  8E0D               	bsf	___ftdiv@f1+1,7,c
  1052  00FDA2  0EFF               	movlw	255
  1053  00FDA4  160C               	andwf	___ftdiv@f1,f,c
  1054  00FDA6  0EFF               	movlw	255
  1055  00FDA8  160D               	andwf	___ftdiv@f1+1,f,c
  1056  00FDAA  0E00               	movlw	0
  1057  00FDAC  160E               	andwf	___ftdiv@f1+2,f,c
  1058  00FDAE  8E10               	bsf	___ftdiv@f2+1,7,c
  1059  00FDB0  0EFF               	movlw	255
  1060  00FDB2  160F               	andwf	___ftdiv@f2,f,c
  1061  00FDB4  0EFF               	movlw	255
  1062  00FDB6  1610               	andwf	___ftdiv@f2+1,f,c
  1063  00FDB8  0E00               	movlw	0
  1064  00FDBA  1611               	andwf	___ftdiv@f2+2,f,c
  1065  00FDBC  0E18               	movlw	24
  1066  00FDBE  6E15               	movwf	___ftdiv@cntr,c
  1067  00FDC0                     l1069:
  1068  00FDC0  90D8               	bcf	status,0,c
  1069  00FDC2  3616               	rlcf	___ftdiv@f3,f,c
  1070  00FDC4  3617               	rlcf	___ftdiv@f3+1,f,c
  1071  00FDC6  3618               	rlcf	___ftdiv@f3+2,f,c
  1072  00FDC8  500F               	movf	___ftdiv@f2,w,c
  1073  00FDCA  5C0C               	subwf	___ftdiv@f1,w,c
  1074  00FDCC  5010               	movf	___ftdiv@f2+1,w,c
  1075  00FDCE  580D               	subwfb	___ftdiv@f1+1,w,c
  1076  00FDD0  5011               	movf	___ftdiv@f2+2,w,c
  1077  00FDD2  580E               	subwfb	___ftdiv@f1+2,w,c
  1078  00FDD4  A0D8               	btfss	status,0,c
  1079  00FDD6  D007               	goto	l346
  1080  00FDD8  500F               	movf	___ftdiv@f2,w,c
  1081  00FDDA  5E0C               	subwf	___ftdiv@f1,f,c
  1082  00FDDC  5010               	movf	___ftdiv@f2+1,w,c
  1083  00FDDE  5A0D               	subwfb	___ftdiv@f1+1,f,c
  1084  00FDE0  5011               	movf	___ftdiv@f2+2,w,c
  1085  00FDE2  5A0E               	subwfb	___ftdiv@f1+2,f,c
  1086  00FDE4  8016               	bsf	___ftdiv@f3,0,c
  1087  00FDE6                     l346:
  1088  00FDE6  90D8               	bcf	status,0,c
  1089  00FDE8  360C               	rlcf	___ftdiv@f1,f,c
  1090  00FDEA  360D               	rlcf	___ftdiv@f1+1,f,c
  1091  00FDEC  360E               	rlcf	___ftdiv@f1+2,f,c
  1092  00FDEE  2E15               	decfsz	___ftdiv@cntr,f,c
  1093  00FDF0  D7E7               	goto	l1069
  1094  00FDF2  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
  1095  00FDF6  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1096  00FDFA  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1097  00FDFE  C019  F004         	movff	___ftdiv@exp,___ftpack@exp
  1098  00FE02  C01A  F005         	movff	___ftdiv@sign,___ftpack@sign
  1099  00FE06  ECDC  F07D         	call	___ftpack	;wreg free
  1100  00FE0A  C001  F00C         	movff	?___ftpack,?___ftdiv
  1101  00FE0E  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  1102  00FE12  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  1103  00FE16  0012               	return	
  1104  00FE18                     __end_of___ftdiv:
  1105                           	opt stack 0
  1106                           wreg	equ	0xFE8
  1107                           status	equ	0xFD8
  1108                           
  1109 ;; *************** function ___awtoft *****************
  1110 ;; Defined at:
  1111 ;;		line 32 in file "/Applications/microchip/xc8/v1.41/sources/common/awtoft.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  c               2   20[COMRAM] int 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  sign            1   23[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  3   20[COMRAM] float 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1125 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;Total ram usage:        4 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    1
  1132 ;; This function calls:
  1133 ;;		___ftpack
  1134 ;; This function is called by:
  1135 ;;		_set_PWM1_duty
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text7
  1140  00F9F6                     __ptext7:
  1141                           	opt stack 0
  1142  00F9F6                     ___awtoft:
  1143                           	opt stack 28
  1144                           
  1145                           ;incstack = 0
  1146  00F9F6  0E00               	movlw	0
  1147  00F9F8  6E18               	movwf	___awtoft@sign,c
  1148  00F9FA  AE16               	btfss	___awtoft@c+1,7,c
  1149  00F9FC  D006               	goto	l1139
  1150  00F9FE  6C15               	negf	___awtoft@c,c
  1151  00FA00  1E16               	comf	___awtoft@c+1,f,c
  1152  00FA02  B0D8               	btfsc	status,0,c
  1153  00FA04  2A16               	incf	___awtoft@c+1,f,c
  1154  00FA06  0E01               	movlw	1
  1155  00FA08  6E18               	movwf	___awtoft@sign,c
  1156  00FA0A                     l1139:
  1157  00FA0A  C015  F001         	movff	___awtoft@c,___ftpack@arg
  1158  00FA0E  C016  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1159  00FA12  6A03               	clrf	___ftpack@arg+2,c
  1160  00FA14  0E8E               	movlw	142
  1161  00FA16  6E04               	movwf	___ftpack@exp,c
  1162  00FA18  C018  F005         	movff	___awtoft@sign,___ftpack@sign
  1163  00FA1C  ECDC  F07D         	call	___ftpack	;wreg free
  1164  00FA20  C001  F015         	movff	?___ftpack,?___awtoft
  1165  00FA24  C002  F016         	movff	?___ftpack+1,?___awtoft+1
  1166  00FA28  C003  F017         	movff	?___ftpack+2,?___awtoft+2
  1167  00FA2C  0012               	return	
  1168  00FA2E                     __end_of___awtoft:
  1169                           	opt stack 0
  1170                           wreg	equ	0xFE8
  1171                           status	equ	0xFD8
  1172                           
  1173 ;; *************** function ___ftpack *****************
  1174 ;; Defined at:
  1175 ;;		line 62 in file "/Applications/microchip/xc8/v1.41/sources/common/float.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  arg             3    0[COMRAM] unsigned um
  1178 ;;  exp             1    3[COMRAM] unsigned char 
  1179 ;;  sign            1    4[COMRAM] unsigned char 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  3    0[COMRAM] float 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1191 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;Total ram usage:        8 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		___awtoft
  1201 ;;		___ftdiv
  1202 ;;		___ftmul
  1203 ;;		___lwtoft
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text8
  1208  00FBB8                     __ptext8:
  1209                           	opt stack 0
  1210  00FBB8                     ___ftpack:
  1211                           	opt stack 28
  1212                           
  1213                           ;incstack = 0
  1214  00FBB8  5004               	movf	___ftpack@exp,w,c
  1215  00FBBA  B4D8               	btfsc	status,2,c
  1216  00FBBC  D005               	goto	l957
  1217  00FBBE  5001               	movf	___ftpack@arg,w,c
  1218  00FBC0  1002               	iorwf	___ftpack@arg+1,w,c
  1219  00FBC2  1003               	iorwf	___ftpack@arg+2,w,c
  1220  00FBC4  A4D8               	btfss	status,2,c
  1221  00FBC6  D00C               	goto	l963
  1222  00FBC8                     l957:
  1223  00FBC8  0E00               	movlw	0
  1224  00FBCA  6E01               	movwf	?___ftpack,c
  1225  00FBCC  0E00               	movlw	0
  1226  00FBCE  6E02               	movwf	?___ftpack+1,c
  1227  00FBD0  0E00               	movlw	0
  1228  00FBD2  6E03               	movwf	?___ftpack+2,c
  1229  00FBD4  0012               	return	
  1230  00FBD6                     l961:
  1231  00FBD6  2A04               	incf	___ftpack@exp,f,c
  1232  00FBD8  90D8               	bcf	status,0,c
  1233  00FBDA  3203               	rrcf	___ftpack@arg+2,f,c
  1234  00FBDC  3202               	rrcf	___ftpack@arg+1,f,c
  1235  00FBDE  3201               	rrcf	___ftpack@arg,f,c
  1236  00FBE0                     l963:
  1237  00FBE0  0E00               	movlw	0
  1238  00FBE2  1401               	andwf	___ftpack@arg,w,c
  1239  00FBE4  6E06               	movwf	??___ftpack& (0+255),c
  1240  00FBE6  0E00               	movlw	0
  1241  00FBE8  1402               	andwf	___ftpack@arg+1,w,c
  1242  00FBEA  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1243  00FBEC  0EFE               	movlw	254
  1244  00FBEE  1403               	andwf	___ftpack@arg+2,w,c
  1245  00FBF0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1246  00FBF2  5006               	movf	??___ftpack,w,c
  1247  00FBF4  1007               	iorwf	??___ftpack+1,w,c
  1248  00FBF6  1008               	iorwf	??___ftpack+2,w,c
  1249  00FBF8  B4D8               	btfsc	status,2,c
  1250  00FBFA  D00C               	goto	l969
  1251  00FBFC  D7EC               	goto	l961
  1252  00FBFE                     l965:
  1253  00FBFE  2A04               	incf	___ftpack@exp,f,c
  1254  00FC00  0E01               	movlw	1
  1255  00FC02  2601               	addwf	___ftpack@arg,f,c
  1256  00FC04  0E00               	movlw	0
  1257  00FC06  2202               	addwfc	___ftpack@arg+1,f,c
  1258  00FC08  0E00               	movlw	0
  1259  00FC0A  2203               	addwfc	___ftpack@arg+2,f,c
  1260  00FC0C  90D8               	bcf	status,0,c
  1261  00FC0E  3203               	rrcf	___ftpack@arg+2,f,c
  1262  00FC10  3202               	rrcf	___ftpack@arg+1,f,c
  1263  00FC12  3201               	rrcf	___ftpack@arg,f,c
  1264  00FC14                     l969:
  1265  00FC14  0E00               	movlw	0
  1266  00FC16  1401               	andwf	___ftpack@arg,w,c
  1267  00FC18  6E06               	movwf	??___ftpack& (0+255),c
  1268  00FC1A  0E00               	movlw	0
  1269  00FC1C  1402               	andwf	___ftpack@arg+1,w,c
  1270  00FC1E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1271  00FC20  0EFF               	movlw	255
  1272  00FC22  1403               	andwf	___ftpack@arg+2,w,c
  1273  00FC24  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1274  00FC26  5006               	movf	??___ftpack,w,c
  1275  00FC28  1007               	iorwf	??___ftpack+1,w,c
  1276  00FC2A  1008               	iorwf	??___ftpack+2,w,c
  1277  00FC2C  B4D8               	btfsc	status,2,c
  1278  00FC2E  D006               	goto	l973
  1279  00FC30  D7E6               	goto	l965
  1280  00FC32                     l971:
  1281  00FC32  0604               	decf	___ftpack@exp,f,c
  1282  00FC34  90D8               	bcf	status,0,c
  1283  00FC36  3601               	rlcf	___ftpack@arg,f,c
  1284  00FC38  3602               	rlcf	___ftpack@arg+1,f,c
  1285  00FC3A  3603               	rlcf	___ftpack@arg+2,f,c
  1286  00FC3C                     l973:
  1287  00FC3C  BE02               	btfsc	___ftpack@arg+1,7,c
  1288  00FC3E  D003               	goto	l288
  1289  00FC40  0E02               	movlw	2
  1290  00FC42  6004               	cpfslt	___ftpack@exp,c
  1291  00FC44  D7F6               	goto	l971
  1292  00FC46                     l288:
  1293  00FC46  A004               	btfss	___ftpack@exp,0,c
  1294  00FC48  9E02               	bcf	___ftpack@arg+1,7,c
  1295  00FC4A  90D8               	bcf	status,0,c
  1296  00FC4C  3204               	rrcf	___ftpack@exp,f,c
  1297  00FC4E  5004               	movf	___ftpack@exp,w,c
  1298  00FC50  1203               	iorwf	___ftpack@arg+2,f,c
  1299  00FC52  5005               	movf	___ftpack@sign,w,c
  1300  00FC54  A4D8               	btfss	status,2,c
  1301  00FC56  8E03               	bsf	___ftpack@arg+2,7,c
  1302  00FC58  C001  F001         	movff	___ftpack@arg,?___ftpack
  1303  00FC5C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1304  00FC60  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1305  00FC64  0012               	return	
  1306  00FC66                     __end_of___ftpack:
  1307                           	opt stack 0
  1308                           wreg	equ	0xFE8
  1309                           status	equ	0xFD8
  1310                           
  1311 ;; *************** function _PWM_Max_Duty *****************
  1312 ;; Defined at:
  1313 ;;		line 85 in file "PWM_motor.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2   14[COMRAM] int 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;Total ram usage:        6 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    1
  1334 ;; This function calls:
  1335 ;;		___aldiv
  1336 ;; This function is called by:
  1337 ;;		_set_PWM1_duty
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text9
  1342  00FA66                     __ptext9:
  1343                           	opt stack 0
  1344  00FA66                     _PWM_Max_Duty:
  1345                           	opt stack 28
  1346                           
  1347                           ;PWM_motor.c: 90: return(32000000/(freq*16);
  1348                           
  1349                           ;incstack = 0
  1350  00FA66  0E00               	movlw	0
  1351  00FA68  6E01               	movwf	___aldiv@dividend,c
  1352  00FA6A  0E48               	movlw	72
  1353  00FA6C  6E02               	movwf	___aldiv@dividend+1,c
  1354  00FA6E  0EE8               	movlw	232
  1355  00FA70  6E03               	movwf	___aldiv@dividend+2,c
  1356  00FA72  0E01               	movlw	1
  1357  00FA74  6E04               	movwf	___aldiv@dividend+3,c
  1358  00FA76  C03D  F011         	movff	_freq,??_PWM_Max_Duty
  1359  00FA7A  C03E  F012         	movff	_freq+1,??_PWM_Max_Duty+1
  1360  00FA7E  C03F  F013         	movff	_freq+2,??_PWM_Max_Duty+2
  1361  00FA82  C040  F014         	movff	_freq+3,??_PWM_Max_Duty+3
  1362  00FA86  0E04               	movlw	4
  1363  00FA88                     u565:
  1364  00FA88  90D8               	bcf	status,0,c
  1365  00FA8A  3611               	rlcf	??_PWM_Max_Duty,f,c
  1366  00FA8C  3612               	rlcf	??_PWM_Max_Duty+1,f,c
  1367  00FA8E  3613               	rlcf	??_PWM_Max_Duty+2,f,c
  1368  00FA90  3614               	rlcf	??_PWM_Max_Duty+3,f,c
  1369  00FA92  2EE8               	decfsz	wreg,f,c
  1370  00FA94  D7F9               	goto	u565
  1371  00FA96  C011  F005         	movff	??_PWM_Max_Duty,___aldiv@divisor
  1372  00FA9A  C012  F006         	movff	??_PWM_Max_Duty+1,___aldiv@divisor+1
  1373  00FA9E  C013  F007         	movff	??_PWM_Max_Duty+2,___aldiv@divisor+2
  1374  00FAA2  C014  F008         	movff	??_PWM_Max_Duty+3,___aldiv@divisor+3
  1375  00FAA6  EC33  F07E         	call	___aldiv	;wreg free
  1376  00FAAA  C001  F00F         	movff	?___aldiv,?_PWM_Max_Duty
  1377  00FAAE  C002  F010         	movff	?___aldiv+1,?_PWM_Max_Duty+1
  1378  00FAB2  0012               	return	
  1379  00FAB4                     __end_of_PWM_Max_Duty:
  1380                           	opt stack 0
  1381                           wreg	equ	0xFE8
  1382                           status	equ	0xFD8
  1383                           
  1384 ;; *************** function ___aldiv *****************
  1385 ;; Defined at:
  1386 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/aldiv.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  dividend        4    0[COMRAM] long 
  1389 ;;  divisor         4    4[COMRAM] long 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  quotient        4   10[COMRAM] long 
  1392 ;;  sign            1    9[COMRAM] unsigned char 
  1393 ;;  counter         1    8[COMRAM] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  4    0[COMRAM] long 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;Total ram usage:       14 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_PWM_Max_Duty
  1413 ;;		_set_PWM_freq
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text10
  1418  00FC66                     __ptext10:
  1419                           	opt stack 0
  1420  00FC66                     ___aldiv:
  1421                           	opt stack 29
  1422                           
  1423                           ;incstack = 0
  1424  00FC66  0E00               	movlw	0
  1425  00FC68  6E0A               	movwf	___aldiv@sign,c
  1426  00FC6A  AE08               	btfss	___aldiv@divisor+3,7,c
  1427  00FC6C  D00A               	goto	l997
  1428  00FC6E  1E08               	comf	___aldiv@divisor+3,f,c
  1429  00FC70  1E07               	comf	___aldiv@divisor+2,f,c
  1430  00FC72  1E06               	comf	___aldiv@divisor+1,f,c
  1431  00FC74  6C05               	negf	___aldiv@divisor,c
  1432  00FC76  0E00               	movlw	0
  1433  00FC78  2206               	addwfc	___aldiv@divisor+1,f,c
  1434  00FC7A  2207               	addwfc	___aldiv@divisor+2,f,c
  1435  00FC7C  2208               	addwfc	___aldiv@divisor+3,f,c
  1436  00FC7E  0E01               	movlw	1
  1437  00FC80  6E0A               	movwf	___aldiv@sign,c
  1438  00FC82                     l997:
  1439  00FC82  AE04               	btfss	___aldiv@dividend+3,7,c
  1440  00FC84  D00A               	goto	l1003
  1441  00FC86  1E04               	comf	___aldiv@dividend+3,f,c
  1442  00FC88  1E03               	comf	___aldiv@dividend+2,f,c
  1443  00FC8A  1E02               	comf	___aldiv@dividend+1,f,c
  1444  00FC8C  6C01               	negf	___aldiv@dividend,c
  1445  00FC8E  0E00               	movlw	0
  1446  00FC90  2202               	addwfc	___aldiv@dividend+1,f,c
  1447  00FC92  2203               	addwfc	___aldiv@dividend+2,f,c
  1448  00FC94  2204               	addwfc	___aldiv@dividend+3,f,c
  1449  00FC96  0E01               	movlw	1
  1450  00FC98  1A0A               	xorwf	___aldiv@sign,f,c
  1451  00FC9A                     l1003:
  1452  00FC9A  0E00               	movlw	0
  1453  00FC9C  6E0B               	movwf	___aldiv@quotient,c
  1454  00FC9E  0E00               	movlw	0
  1455  00FCA0  6E0C               	movwf	___aldiv@quotient+1,c
  1456  00FCA2  0E00               	movlw	0
  1457  00FCA4  6E0D               	movwf	___aldiv@quotient+2,c
  1458  00FCA6  0E00               	movlw	0
  1459  00FCA8  6E0E               	movwf	___aldiv@quotient+3,c
  1460  00FCAA  5005               	movf	___aldiv@divisor,w,c
  1461  00FCAC  1006               	iorwf	___aldiv@divisor+1,w,c
  1462  00FCAE  1007               	iorwf	___aldiv@divisor+2,w,c
  1463  00FCB0  1008               	iorwf	___aldiv@divisor+3,w,c
  1464  00FCB2  B4D8               	btfsc	status,2,c
  1465  00FCB4  D02A               	goto	l1025
  1466  00FCB6  0E01               	movlw	1
  1467  00FCB8  6E09               	movwf	___aldiv@counter,c
  1468  00FCBA  D006               	goto	l1011
  1469  00FCBC                     l1009:
  1470  00FCBC  90D8               	bcf	status,0,c
  1471  00FCBE  3605               	rlcf	___aldiv@divisor,f,c
  1472  00FCC0  3606               	rlcf	___aldiv@divisor+1,f,c
  1473  00FCC2  3607               	rlcf	___aldiv@divisor+2,f,c
  1474  00FCC4  3608               	rlcf	___aldiv@divisor+3,f,c
  1475  00FCC6  2A09               	incf	___aldiv@counter,f,c
  1476  00FCC8                     l1011:
  1477  00FCC8  AE08               	btfss	___aldiv@divisor+3,7,c
  1478  00FCCA  D7F8               	goto	l1009
  1479  00FCCC                     l1013:
  1480  00FCCC  90D8               	bcf	status,0,c
  1481  00FCCE  360B               	rlcf	___aldiv@quotient,f,c
  1482  00FCD0  360C               	rlcf	___aldiv@quotient+1,f,c
  1483  00FCD2  360D               	rlcf	___aldiv@quotient+2,f,c
  1484  00FCD4  360E               	rlcf	___aldiv@quotient+3,f,c
  1485  00FCD6  5005               	movf	___aldiv@divisor,w,c
  1486  00FCD8  5C01               	subwf	___aldiv@dividend,w,c
  1487  00FCDA  5006               	movf	___aldiv@divisor+1,w,c
  1488  00FCDC  5802               	subwfb	___aldiv@dividend+1,w,c
  1489  00FCDE  5007               	movf	___aldiv@divisor+2,w,c
  1490  00FCE0  5803               	subwfb	___aldiv@dividend+2,w,c
  1491  00FCE2  5008               	movf	___aldiv@divisor+3,w,c
  1492  00FCE4  5804               	subwfb	___aldiv@dividend+3,w,c
  1493  00FCE6  A0D8               	btfss	status,0,c
  1494  00FCE8  D009               	goto	l1021
  1495  00FCEA  5005               	movf	___aldiv@divisor,w,c
  1496  00FCEC  5E01               	subwf	___aldiv@dividend,f,c
  1497  00FCEE  5006               	movf	___aldiv@divisor+1,w,c
  1498  00FCF0  5A02               	subwfb	___aldiv@dividend+1,f,c
  1499  00FCF2  5007               	movf	___aldiv@divisor+2,w,c
  1500  00FCF4  5A03               	subwfb	___aldiv@dividend+2,f,c
  1501  00FCF6  5008               	movf	___aldiv@divisor+3,w,c
  1502  00FCF8  5A04               	subwfb	___aldiv@dividend+3,f,c
  1503  00FCFA  800B               	bsf	___aldiv@quotient,0,c
  1504  00FCFC                     l1021:
  1505  00FCFC  90D8               	bcf	status,0,c
  1506  00FCFE  3208               	rrcf	___aldiv@divisor+3,f,c
  1507  00FD00  3207               	rrcf	___aldiv@divisor+2,f,c
  1508  00FD02  3206               	rrcf	___aldiv@divisor+1,f,c
  1509  00FD04  3205               	rrcf	___aldiv@divisor,f,c
  1510  00FD06  2E09               	decfsz	___aldiv@counter,f,c
  1511  00FD08  D7E1               	goto	l1013
  1512  00FD0A                     l1025:
  1513  00FD0A  500A               	movf	___aldiv@sign,w,c
  1514  00FD0C  B4D8               	btfsc	status,2,c
  1515  00FD0E  D008               	goto	l1029
  1516  00FD10  1E0E               	comf	___aldiv@quotient+3,f,c
  1517  00FD12  1E0D               	comf	___aldiv@quotient+2,f,c
  1518  00FD14  1E0C               	comf	___aldiv@quotient+1,f,c
  1519  00FD16  6C0B               	negf	___aldiv@quotient,c
  1520  00FD18  0E00               	movlw	0
  1521  00FD1A  220C               	addwfc	___aldiv@quotient+1,f,c
  1522  00FD1C  220D               	addwfc	___aldiv@quotient+2,f,c
  1523  00FD1E  220E               	addwfc	___aldiv@quotient+3,f,c
  1524  00FD20                     l1029:
  1525  00FD20  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1526  00FD24  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1527  00FD28  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1528  00FD2C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1529  00FD30  0012               	return	
  1530  00FD32                     __end_of___aldiv:
  1531                           	opt stack 0
  1532                           wreg	equ	0xFE8
  1533                           status	equ	0xFD8
  1534                           
  1535 ;; *************** function _PWM1_Start *****************
  1536 ;; Defined at:
  1537 ;;		line 117 in file "PWM_motor.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  2   56[None  ] int 
  1544 ;; Registers used:
  1545 ;;		None
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text11
  1565  00F9C0                     __ptext11:
  1566                           	opt stack 0
  1567  00F9C0                     _PWM1_Start:
  1568                           	opt stack 30
  1569                           
  1570                           ;PWM_motor.c: 121: P1M1 = 0;
  1571                           
  1572                           ;incstack = 0
  1573  00F9C0  9EBD               	bcf	4029,7,c	;volatile
  1574                           
  1575                           ;PWM_motor.c: 122: P1M0 = 0;
  1576  00F9C2  9CBD               	bcf	4029,6,c	;volatile
  1577                           
  1578                           ;PWM_motor.c: 123: CCP1M3 = 1;
  1579  00F9C4  86BD               	bsf	4029,3,c	;volatile
  1580                           
  1581                           ;PWM_motor.c: 124: CCP1M2 = 1;
  1582  00F9C6  84BD               	bsf	4029,2,c	;volatile
  1583                           
  1584                           ;PWM_motor.c: 125: CCP1M1 = 0;
  1585  00F9C8  92BD               	bcf	4029,1,c	;volatile
  1586                           
  1587                           ;PWM_motor.c: 126: CCP1M0 = 0;
  1588  00F9CA  90BD               	bcf	4029,0,c	;volatile
  1589                           
  1590                           ;PWM_motor.c: 141: TMR2ON = 1;
  1591  00F9CC  84CA               	bsf	4042,2,c	;volatile
  1592                           
  1593                           ;PWM_motor.c: 144: TRISCbits.TRISC0 = 0;
  1594  00F9CE  9094               	bcf	3988,0,c	;volatile
  1595  00F9D0  0012               	return		;funcret
  1596  00F9D2                     __end_of_PWM1_Start:
  1597                           	opt stack 0
  1598  0000                     wreg	equ	0xFE8
  1599                           status	equ	0xFD8
  1600                           wreg	equ	0xFE8
  1601                           status	equ	0xFD8
  1602                           
  1603                           	psect	rparam
  1604  0000                     wreg	equ	0xFE8
  1605                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60      66
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_set_PWM1_duty
    _set_PWM_freq->___aldiv
    _set_PWM1_duty->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11276
                         _PWM1_Start
                      _set_PWM1_duty
                       _set_PWM_freq
 ---------------------------------------------------------------------------------
 (1) _set_PWM_freq                                         8     4      4     664
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _set_PWM1_duty                                        4     2      2   10612
                                             56 COMRAM     4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2156
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                             41 COMRAM    15    11      4
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2626
                                             26 COMRAM    15     9      6
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2580
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2225
                                             20 COMRAM     4     1      3
                       _PWM_Max_Duty (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2070
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PWM_Max_Duty                                         6     4      2     556
                                             14 COMRAM     6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     556
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Start
   _set_PWM1_duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _set_PWM_freq
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      42       1       52.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      34        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Mar 14 18:49:17 2017

                      _i 0041              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_WDT$ON 000000                      l346 FDE6                      l288 FC46  
                    l961 FBD6                      l971 FC32                      l963 FBE0  
                    l973 FC3C                      l965 FBFE                      l957 FBC8  
                    l969 FC14                      l997 FC82             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      u621 FE28  
                    u710 FF56                      u800 FB9C                      u641 FE50  
                    u571 FD42                      u715 FF4E                      u565 FA88  
                    u591 FD6A                      u691 FF1C                      u775 FAD6  
                    u785 FAE6        set_PWM1_duty@duty 0039                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0015             ___ftdiv@sign 001A  
                   l1011 FCC8                     l1003 FC9A                     l1021 FCFC  
                   l1013 FCCC                     l1009 FCBC                     l1025 FD0A  
                   l1113 FEAA                     l1043 FD5A                     l1123 FED2  
                   l1029 FD20                     l1109 FE9A                     l1205 FB9E  
                   l1119 FEC2                     l1049 FD82                     l1139 FA0A  
                   l1171 FFAE                     l1069 FDC0                     l1181 FFD8  
                   l1149 FF38                     l1095 FE68                     l1167 FF9E  
                   l1089 FE40                     l1185 FFEE                     l1177 FFC6  
                   l1179 FFD2                     _P1M0 007DEE                     _P1M1 007DEF  
           _PWM_Max_Duty FA66    __end_of_set_PWM1_duty FBB8                     _main FA2E  
                   _freq 003D             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___ftmul@cntr 0028             ___param_bank 000000             ___ftmul@sign 0029  
           ___fttol@exp1 0038             ___fttol@lval 0034          __end_of___aldiv FD32  
                  ?_main 0001                    _CCP1X 007DED                    _CCP1Y 007DEC  
        __end_of___ftdiv FE18          __end_of___ftmul FF0C          __end_of___fttol 0000  
                  _TRISB 000F93                    _TRISC 000F94            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
            ?_PWM1_Start 0001           __CFG_EBTRB$OFF 000000            ___awtoft@sign 0018  
          ___ftpack@sign 0005                    status 000FD8           __CFG_PBADEN$ON 000000  
        __initialization F9B6             __end_of_main FA66                   ??_main 003D  
          ___fttol@sign1 0033            __activetblptr 000000                   _CCP1M0 007DE8  
                 _CCP1M1 007DE9                   _CCP1M2 007DEA                   _CCP1M3 007DEB  
                 _CCPR1L 000FBE         __end_of___awtoft FA2E         __end_of___ftpack FC66  
       __end_of___lwtoft F9F6                   _OSCCON 000FD3                   _TMR2ON 007E52  
         __CFG_XINST$OFF 000000                ??___aldiv 0009           __CFG_STVREN$ON 000000  
    __size_of_PWM1_Start 0012                ??___ftdiv 0012                ??___ftmul 0021  
              ??___fttol 002E    ___ftmul@f3_as_product 0025               __accesstop 0080  
__end_of__initialization F9BA            ___rparam_used 000001               ___ftdiv@f1 000C  
             ___ftdiv@f2 000F               ___ftdiv@f3 0016               ___awtoft@c 0015  
             ___ftmul@f1 001B               ___ftmul@f2 001E               ___fttol@f1 002A  
         __pcstackCOMRAM 0001               ___lwtoft@c 0009          __CFG_OSC$INTIO7 000000  
          ?_set_PWM_freq 000F               __pnvCOMRAM 003D                ?___awtoft 0015  
              ?___ftpack 0001                ?___lwtoft 0009             ??_PWM1_Start 0001  
         ??_set_PWM_freq 0013                  __Hparam 0000                  __Lparam 0000  
                ___aldiv FC66                  ___ftdiv FD32                  ___ftmul FE18  
                ___fttol FF0C       __end_of_PWM1_Start F9D2                  __pcinit F9B6  
             ??___awtoft 0018               ??___ftpack 0006                  __ramtop 1000  
                __ptext0 FA2E                  __ptext1 FAB4                  __ptext2 FB1E  
                __ptext3 F9D2                  __ptext4 FF0C                  __ptext5 FE18  
                __ptext6 FD32                  __ptext7 F9F6                  __ptext8 FBB8  
                __ptext9 FA66               ??___lwtoft 000C   __size_of_set_PWM1_duty 009A  
       ___aldiv@dividend 0001     end_of_initialization F9BA          set_PWM_freq@fre 000F  
       ___aldiv@quotient 000B                _TRISCbits 000F94              ___ftdiv@exp 0019  
          _set_PWM1_duty FB1E              ___ftmul@exp 0024     __end_of_set_PWM_freq FB1E  
    start_initialization F9B6            ?_PWM_Max_Duty 000F           ?_set_PWM1_duty 0039  
       __CFG_LPT1OSC$OFF 000000        __size_of___awtoft 0038        __size_of___ftpack 00AE  
            __pbssCOMRAM 0041        __size_of___lwtoft 0024           ??_PWM_Max_Duty 0011  
      __CFG_CCP2MX$PORTC 000000                 ?___aldiv 0001                 ?___ftdiv 000C  
               ?___ftmul 001B                 ?___fttol 002A          ??_set_PWM1_duty 003B  
        ___aldiv@divisor 0005          ___aldiv@counter 0009    __size_of_set_PWM_freq 006A  
       __CFG_WDTPS$32768 000000             _set_PWM_freq FAB4                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___aldiv 00CC  
   __end_of_PWM_Max_Duty FAB4         __size_of___ftdiv 00E6         __size_of___ftmul 00F4  
       __size_of___fttol 00F4                 ___awtoft F9F6                 ___ftpack FBB8  
               ___lwtoft F9D2                 __ptext10 FC66                 __ptext11 F9C0  
          __size_of_main 0038              _OSCTUNEbits 000F9B             ___aldiv@sign 000A  
             _PWM1_Start F9C0    __size_of_PWM_Max_Duty 004E  
