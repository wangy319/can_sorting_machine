

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Aug 22 12:24:18 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0006                     	;# 
    19  0007                     	;# 
    20  0008                     	;# 
    21  0009                     	;# 
    22  000A                     	;# 
    23  000B                     	;# 
    24  000C                     	;# 
    25  000D                     	;# 
    26  000E                     	;# 
    27  000E                     	;# 
    28  000F                     	;# 
    29  0010                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0013                     	;# 
    33  0014                     	;# 
    34  0015                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0017                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  001A                     	;# 
    41  001B                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001D                     	;# 
    45  001E                     	;# 
    46  001F                     	;# 
    47  0081                     	;# 
    48  0085                     	;# 
    49  0086                     	;# 
    50  0087                     	;# 
    51  0088                     	;# 
    52  0089                     	;# 
    53  008C                     	;# 
    54  008D                     	;# 
    55  008E                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0094                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  009F                     	;# 
    66  010C                     	;# 
    67  010D                     	;# 
    68  010E                     	;# 
    69  010F                     	;# 
    70  018C                     	;# 
    71  018D                     	;# 
    72  0030                     _RB0	set	48
    73  0086                     _TRISB	set	134
    74                           
    75                           	psect	text0
    76  0000                     __ptext0:	
    77                           ; #config settings
    78                           
    79                           
    80                           ;psect for function _servoRotate0
    81  0000                     
    82                           	psect	cinit
    83  07FC                     start_initialization:	
    84  07FC                     __initialization:	
    85  07FC                     end_of_initialization:	
    86                           ;End of C runtime variable initialization code
    87                           
    88  07FC                     __end_of__initialization:	
    89  07FC  0183               	clrf	3
    90  07FD  120A  118A  2FCF   	ljmp	_main	;jump to C main() function
    91                           
    92                           	psect	cstackCOMMON
    93  0070                     __pcstackCOMMON:	
    94  0070                     ?_servoRotate0:	
    95  0070                     ??_servoRotate0:	
    96                           ; 0 bytes @ 0x0
    97                           
    98  0070                     ?_servoRotate90:	
    99                           ; 0 bytes @ 0x0
   100                           
   101  0070                     ??_servoRotate90:	
   102                           ; 0 bytes @ 0x0
   103                           
   104  0070                     ?_servoRotate180:	
   105                           ; 0 bytes @ 0x0
   106                           
   107  0070                     ??_servoRotate180:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0070                     ?_main:	
   111                           ; 0 bytes @ 0x0
   112                           
   113                           
   114                           ; 0 bytes @ 0x0
   115  0070                     	ds	2
   116  0072                     servoRotate0@i:	
   117  0072                     servoRotate90@i:	
   118                           ; 2 bytes @ 0x2
   119                           
   120  0072                     servoRotate180@i:	
   121                           ; 2 bytes @ 0x2
   122                           
   123                           
   124                           ; 2 bytes @ 0x2
   125  0072                     	ds	2
   126  0074                     ??_main:	
   127                           
   128                           ; 0 bytes @ 0x4
   129  0074                     	ds	3
   130                           
   131                           	psect	maintext
   132  07CF                     __pmaintext:	
   133 ;;
   134 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   135 ;;
   136 ;; *************** function _main *****************
   137 ;; Defined at:
   138 ;;		line 52 in file "main.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;		None
   143 ;; Return value:  Size  Location     Type
   144 ;;		None               void
   145 ;; Registers used:
   146 ;;		wreg, status,2, status,0, pclath, cstack
   147 ;; Tracked objects:
   148 ;;		On entry : 17F/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   152 ;;      Params:         0       0       0       0       0
   153 ;;      Locals:         0       0       0       0       0
   154 ;;      Temps:          3       0       0       0       0
   155 ;;      Totals:         3       0       0       0       0
   156 ;;Total ram usage:        3 bytes
   157 ;; Hardware stack levels required when called:    1
   158 ;; This function calls:
   159 ;;		_servoRotate0
   160 ;;		_servoRotate180
   161 ;;		_servoRotate90
   162 ;; This function is called by:
   163 ;;		Startup code after reset
   164 ;; This function uses a non-reentrant model
   165 ;;
   166                           
   167                           
   168                           ;psect for function _main
   169  07CF                     _main:	
   170                           
   171                           ;main.c: 54: TRISB = 0;
   172                           
   173                           ;incstack = 0
   174                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   175  07CF  1683               	bsf	3,5	;RP0=1, select bank1
   176  07D0  1303               	bcf	3,6	;RP1=0, select bank1
   177  07D1  0186               	clrf	6	;volatile
   178  07D2                     l515:	
   179                           ;main.c: 55: do
   180                           
   181                           
   182                           ;main.c: 56: {
   183                           ;main.c: 57: servoRotate0();
   184  07D2  120A  118A  2758  120A  118A  	fcall	_servoRotate0
   185                           
   186                           ;main.c: 58: _delay((unsigned long)((2000)*(8000000/4000.0)));
   187  07D7  3015               	movlw	21
   188  07D8  00F6               	movwf	??_main+2
   189  07D9  304B               	movlw	75
   190  07DA  00F5               	movwf	??_main+1
   191  07DB  30D1               	movlw	209
   192  07DC  00F4               	movwf	??_main
   193  07DD                     u77:	
   194  07DD  0BF4               	decfsz	??_main,f
   195  07DE  2FDD               	goto	u77
   196  07DF  0BF5               	decfsz	??_main+1,f
   197  07E0  2FDD               	goto	u77
   198  07E1  0BF6               	decfsz	??_main+2,f
   199  07E2  2FDD               	goto	u77
   200  07E3  0000               	nop
   201                           
   202                           ;main.c: 59: servoRotate90();
   203  07E4  120A  118A  27A7  120A  118A  	fcall	_servoRotate90
   204                           
   205                           ;main.c: 60: _delay((unsigned long)((2000)*(8000000/4000.0)));
   206  07E9  3015               	movlw	21
   207  07EA  00F6               	movwf	??_main+2
   208  07EB  304B               	movlw	75
   209  07EC  00F5               	movwf	??_main+1
   210  07ED  30D1               	movlw	209
   211  07EE  00F4               	movwf	??_main
   212  07EF                     u87:	
   213  07EF  0BF4               	decfsz	??_main,f
   214  07F0  2FEF               	goto	u87
   215  07F1  0BF5               	decfsz	??_main+1,f
   216  07F2  2FEF               	goto	u87
   217  07F3  0BF6               	decfsz	??_main+2,f
   218  07F4  2FEF               	goto	u87
   219  07F5  0000               	nop
   220                           
   221                           ;main.c: 61: servoRotate180();
   222  07F6  120A  118A  277F  120A  118A  	fcall	_servoRotate180
   223                           
   224                           ;main.c: 62: }while(1);
   225  07FB  2FD2               	goto	l515
   226  07FC                     __end_of_main:	
   227                           
   228                           	psect	text1
   229  07A7                     __ptext1:	
   230 ;; *************** function _servoRotate90 *****************
   231 ;; Defined at:
   232 ;;		line 28 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  i               2    2[COMMON] unsigned int 
   237 ;; Return value:  Size  Location     Type
   238 ;;		None               void
   239 ;; Registers used:
   240 ;;		wreg, status,2
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   246 ;;      Params:         0       0       0       0       0
   247 ;;      Locals:         2       0       0       0       0
   248 ;;      Temps:          2       0       0       0       0
   249 ;;      Totals:         4       0       0       0       0
   250 ;;Total ram usage:        4 bytes
   251 ;; Hardware stack levels used:    1
   252 ;; This function calls:
   253 ;;		Nothing
   254 ;; This function is called by:
   255 ;;		_main
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           
   260                           ;psect for function _servoRotate90
   261  07A7                     _servoRotate90:	
   262                           
   263                           ;main.c: 30: unsigned int i;
   264                           ;main.c: 31: for(i=0;i<50;i++)
   265                           
   266                           ;incstack = 0
   267                           ; Regs used in _servoRotate90: [wreg+status,2]
   268  07A7  01F2               	clrf	servoRotate90@i
   269  07A8  01F3               	clrf	servoRotate90@i+1
   270  07A9                     L1:	
   271  07A9  3000               	movlw	0
   272  07AA  0273               	subwf	servoRotate90@i+1,w
   273  07AB  3032               	movlw	50
   274  07AC  1903               	skipnz
   275  07AD  0272               	subwf	servoRotate90@i,w
   276  07AE  1803               	btfsc	3,0
   277  07AF  0008               	return
   278                           
   279                           ;main.c: 32: {
   280                           ;main.c: 33: RB0 = 1;
   281  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   282  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   283  07B2  1406               	bsf	6,0	;volatile
   284                           
   285                           ;main.c: 34: _delay((unsigned long)((1500)*(8000000/4000000.0)));
   286  07B3  3004               	movlw	4
   287  07B4  00F1               	movwf	??_servoRotate90+1
   288  07B5  30E4               	movlw	228
   289  07B6  00F0               	movwf	??_servoRotate90
   290  07B7                     u97:	
   291  07B7  0BF0               	decfsz	??_servoRotate90,f
   292  07B8  2FB7               	goto	u97
   293  07B9  0BF1               	decfsz	??_servoRotate90+1,f
   294  07BA  2FB7               	goto	u97
   295  07BB  0000               	nop
   296                           
   297                           ;main.c: 35: RB0 = 0;
   298  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   299  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   300  07BE  1006               	bcf	6,0	;volatile
   301                           
   302                           ;main.c: 36: _delay((unsigned long)((18500)*(8000000/4000000.0)));
   303  07BF  3031               	movlw	49
   304  07C0  00F1               	movwf	??_servoRotate90+1
   305  07C1  300B               	movlw	11
   306  07C2  00F0               	movwf	??_servoRotate90
   307  07C3                     u107:	
   308  07C3  0BF0               	decfsz	??_servoRotate90,f
   309  07C4  2FC3               	goto	u107
   310  07C5  0BF1               	decfsz	??_servoRotate90+1,f
   311  07C6  2FC3               	goto	u107
   312  07C7  2FC8               	nop2
   313  07C8  3001               	movlw	1
   314  07C9  07F2               	addwf	servoRotate90@i,f
   315  07CA  1803               	skipnc
   316  07CB  0AF3               	incf	servoRotate90@i+1,f
   317  07CC  3000               	movlw	0
   318  07CD  07F3               	addwf	servoRotate90@i+1,f
   319  07CE  2FA9               	goto	L1
   320  07CF                     __end_of_servoRotate90:	
   321                           
   322                           	psect	text2
   323  077F                     __ptext2:	
   324 ;; *************** function _servoRotate180 *****************
   325 ;; Defined at:
   326 ;;		line 40 in file "main.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  i               2    2[COMMON] unsigned int 
   331 ;; Return value:  Size  Location     Type
   332 ;;		None               void
   333 ;; Registers used:
   334 ;;		wreg, status,2
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   340 ;;      Params:         0       0       0       0       0
   341 ;;      Locals:         2       0       0       0       0
   342 ;;      Temps:          2       0       0       0       0
   343 ;;      Totals:         4       0       0       0       0
   344 ;;Total ram usage:        4 bytes
   345 ;; Hardware stack levels used:    1
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           
   354                           ;psect for function _servoRotate180
   355  077F                     _servoRotate180:	
   356                           
   357                           ;main.c: 42: unsigned int i;
   358                           ;main.c: 43: for(i=0;i<50;i++)
   359                           
   360                           ;incstack = 0
   361                           ; Regs used in _servoRotate180: [wreg+status,2]
   362  077F  01F2               	clrf	servoRotate180@i
   363  0780  01F3               	clrf	servoRotate180@i+1
   364  0781                     L2:	
   365  0781  3000               	movlw	0
   366  0782  0273               	subwf	servoRotate180@i+1,w
   367  0783  3032               	movlw	50
   368  0784  1903               	skipnz
   369  0785  0272               	subwf	servoRotate180@i,w
   370  0786  1803               	btfsc	3,0
   371  0787  0008               	return
   372                           
   373                           ;main.c: 44: {
   374                           ;main.c: 45: RB0 = 1;
   375  0788  1283               	bcf	3,5	;RP0=0, select bank0
   376  0789  1303               	bcf	3,6	;RP1=0, select bank0
   377  078A  1406               	bsf	6,0	;volatile
   378                           
   379                           ;main.c: 46: _delay((unsigned long)((2200)*(8000000/4000000.0)));
   380  078B  3006               	movlw	6
   381  078C  00F1               	movwf	??_servoRotate180+1
   382  078D  30B5               	movlw	181
   383  078E  00F0               	movwf	??_servoRotate180
   384  078F                     u117:	
   385  078F  0BF0               	decfsz	??_servoRotate180,f
   386  0790  2F8F               	goto	u117
   387  0791  0BF1               	decfsz	??_servoRotate180+1,f
   388  0792  2F8F               	goto	u117
   389  0793  2F94               	nop2
   390                           
   391                           ;main.c: 47: RB0 = 0;
   392  0794  1283               	bcf	3,5	;RP0=0, select bank0
   393  0795  1303               	bcf	3,6	;RP1=0, select bank0
   394  0796  1006               	bcf	6,0	;volatile
   395                           
   396                           ;main.c: 48: _delay((unsigned long)((17800)*(8000000/4000000.0)));
   397  0797  302F               	movlw	47
   398  0798  00F1               	movwf	??_servoRotate180+1
   399  0799  303A               	movlw	58
   400  079A  00F0               	movwf	??_servoRotate180
   401  079B                     u127:	
   402  079B  0BF0               	decfsz	??_servoRotate180,f
   403  079C  2F9B               	goto	u127
   404  079D  0BF1               	decfsz	??_servoRotate180+1,f
   405  079E  2F9B               	goto	u127
   406  079F  0000               	nop
   407  07A0  3001               	movlw	1
   408  07A1  07F2               	addwf	servoRotate180@i,f
   409  07A2  1803               	skipnc
   410  07A3  0AF3               	incf	servoRotate180@i+1,f
   411  07A4  3000               	movlw	0
   412  07A5  07F3               	addwf	servoRotate180@i+1,f
   413  07A6  2F81               	goto	L2
   414  07A7                     __end_of_servoRotate180:	
   415                           
   416                           	psect	text3
   417  0758                     __ptext3:	
   418 ;; *************** function _servoRotate0 *****************
   419 ;; Defined at:
   420 ;;		line 16 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;  i               2    2[COMMON] unsigned int 
   425 ;; Return value:  Size  Location     Type
   426 ;;		None               void
   427 ;; Registers used:
   428 ;;		wreg, status,2
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         2       0       0       0       0
   436 ;;      Temps:          2       0       0       0       0
   437 ;;      Totals:         4       0       0       0       0
   438 ;;Total ram usage:        4 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _servoRotate0
   449  0758                     _servoRotate0:	
   450                           
   451                           ;main.c: 18: unsigned int i;
   452                           ;main.c: 19: for(i=0;i<50;i++)
   453                           
   454                           ;incstack = 0
   455                           ; Regs used in _servoRotate0: [wreg+status,2]
   456  0758  01F2               	clrf	servoRotate0@i
   457  0759  01F3               	clrf	servoRotate0@i+1
   458  075A                     L3:	
   459  075A  3000               	movlw	0
   460  075B  0273               	subwf	servoRotate0@i+1,w
   461  075C  3032               	movlw	50
   462  075D  1903               	skipnz
   463  075E  0272               	subwf	servoRotate0@i,w
   464  075F  1803               	btfsc	3,0
   465  0760  0008               	return
   466                           
   467                           ;main.c: 20: {
   468                           ;main.c: 21: RB0 = 1;
   469  0761  1283               	bcf	3,5	;RP0=0, select bank0
   470  0762  1303               	bcf	3,6	;RP1=0, select bank0
   471  0763  1406               	bsf	6,0	;volatile
   472                           
   473                           ;main.c: 22: _delay((unsigned long)((800)*(8000000/4000000.0)));
   474  0764  30E4               	movlw	228
   475  0765  00F0               	movwf	??_servoRotate0
   476  0766                     u137:	
   477  0766  2F67               	nop2
   478  0767  2F68               	nop2
   479  0768  0BF0               	decfsz	??_servoRotate0,f
   480  0769  2F66               	goto	u137
   481  076A  2F6B               	nop2	;nop
   482  076B  0000               	nop
   483                           
   484                           ;main.c: 23: RB0 = 0;
   485  076C  1283               	bcf	3,5	;RP0=0, select bank0
   486  076D  1303               	bcf	3,6	;RP1=0, select bank0
   487  076E  1006               	bcf	6,0	;volatile
   488                           
   489                           ;main.c: 24: _delay((unsigned long)((19200)*(8000000/4000000.0)));
   490  076F  3032               	movlw	50
   491  0770  00F1               	movwf	??_servoRotate0+1
   492  0771  30DD               	movlw	221
   493  0772  00F0               	movwf	??_servoRotate0
   494  0773                     u147:	
   495  0773  0BF0               	decfsz	??_servoRotate0,f
   496  0774  2F73               	goto	u147
   497  0775  0BF1               	decfsz	??_servoRotate0+1,f
   498  0776  2F73               	goto	u147
   499  0777  2F78               	nop2
   500  0778  3001               	movlw	1
   501  0779  07F2               	addwf	servoRotate0@i,f
   502  077A  1803               	skipnc
   503  077B  0AF3               	incf	servoRotate0@i+1,f
   504  077C  3000               	movlw	0
   505  077D  07F3               	addwf	servoRotate0@i+1,f
   506  077E  2F5A               	goto	L3
   507  077F                     __end_of_servoRotate0:	
   508  007E                     btemp	set	126	;btemp
   509  007E                     wtemp	set	126
   510  007E                     wtemp0	set	126
   511  0080                     wtemp1	set	128
   512  0082                     wtemp2	set	130
   513  0084                     wtemp3	set	132
   514  0086                     wtemp4	set	134
   515  0088                     wtemp5	set	136
   516  007F                     wtemp6	set	127
   517  007E                     ttemp	set	126
   518  007E                     ttemp0	set	126
   519  0081                     ttemp1	set	129
   520  0084                     ttemp2	set	132
   521  0087                     ttemp3	set	135
   522  007F                     ttemp4	set	127
   523  007E                     ltemp	set	126
   524  007E                     ltemp0	set	126
   525  0082                     ltemp1	set	130
   526  0086                     ltemp2	set	134
   527  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_servoRotate0
    _main->_servoRotate180
    _main->_servoRotate90

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      90
                                              4 COMMON     3     3      0
                       _servoRotate0
                     _servoRotate180
                      _servoRotate90
 ---------------------------------------------------------------------------------
 (1) _servoRotate90                                        4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate180                                       4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _servoRotate0                                         4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servoRotate0
   _servoRotate180
   _servoRotate90

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Aug 22 12:24:18 2014

            __CFG_CP$OFF 0000                       u77 07DD                       u87 07EF  
                     u97 07B7            servoRotate0@i 0072                      l515 07D2  
                    _RB0 0030                      u107 07C3                      u117 078F  
                    u127 079B                      u137 0766                      u147 0773  
           __CFG_CPD$OFF 0000             __CFG_FOSC$HS 0000           servoRotate90@i 0072  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _main 07CF  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
        ??_servoRotate90 0070          servoRotate180@i 0072                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _TRISB 0086                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F         ??_servoRotate180 0070          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07CF  
  __end_of_servoRotate90 07CF                  __ptext0 0000                  __ptext1 07A7  
                __ptext2 077F                  __ptext3 0758     end_of_initialization 07FC  
          ?_servoRotate0 0070           ??_servoRotate0 0070  __size_of_servoRotate180 0028  
    start_initialization 07FC                ___latbits 0002     __end_of_servoRotate0 077F  
         _servoRotate180 077F   __size_of_servoRotate90 0028   __end_of_servoRotate180 07A7  
          __size_of_main 002D          ?_servoRotate180 0070            _servoRotate90 07A7  
  __size_of_servoRotate0 0027           ?_servoRotate90 0070             _servoRotate0 0758  
