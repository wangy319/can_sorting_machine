

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Feb 28 22:30:23 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           ; Version 1.41
    42                           ; Generated 25/01/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4620 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	mediumconst
    77  00FEFC                     __pmediumconst:
    78                           	opt stack 0
    79  00FEFC  00                 	db	0
    80  00FEFD                     _keys:
    81                           	opt stack 0
    82  00FEFD  31                 	db	49
    83  00FEFE  32                 	db	50
    84  00FEFF  33                 	db	51
    85  00FF00  41                 	db	65
    86  00FF01  34                 	db	52
    87  00FF02  35                 	db	53
    88  00FF03  36                 	db	54
    89  00FF04  42                 	db	66
    90  00FF05  37                 	db	55
    91  00FF06  38                 	db	56
    92  00FF07  39                 	db	57
    93  00FF08  43                 	db	67
    94  00FF09  2A                 	db	42
    95  00FF0A  30                 	db	48
    96  00FF0B  23                 	db	35
    97  00FF0C  44                 	db	68
    98  00FF0D  00                 	db	0
    99  00FF0E                     __end_of_keys:
   100                           	opt stack 0
   101  00FF0E                     _hexpowers:
   102                           	opt stack 0
   103  00FF0E  0001               	dw	1
   104  00FF10  0010               	dw	16
   105  00FF12  0100               	dw	256
   106  00FF14  1000               	dw	4096
   107  00FF16                     __end_of_hexpowers:
   108                           	opt stack 0
   109  00FF16                     _RtcTime:
   110                           	opt stack 0
   111  00FF16  45                 	db	69
   112  00FF17  59                 	db	89
   113  00FF18  23                 	db	35
   114  00FF19  07                 	db	7
   115  00FF1A  31                 	db	49
   116  00FF1B  12                 	db	18
   117  00FF1C  16                 	db	22
   118  00FF1D                     __end_of_RtcTime:
   119                           	opt stack 0
   120  0000                     _SSPBUF	set	4041
   121  0000                     _SSPADD	set	4040
   122  0000                     _SSPCON2	set	4037
   123  0000                     _SSPCON1	set	4038
   124  0000                     _SSPSTAT	set	4039
   125  0000                     _PORTBbits	set	3969
   126  0000                     _PORTB	set	3969
   127  0000                     _INTCONbits	set	4082
   128  0000                     _ADCON1	set	4033
   129  0000                     _ADCON0	set	4034
   130  0000                     _LATE	set	3981
   131  0000                     _LATC	set	3979
   132  0000                     _LATB	set	3978
   133  0000                     _LATA	set	3977
   134  0000                     _TRISE	set	3990
   135  0000                     _TRISD	set	3989
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISA	set	3986
   139  0000                     _LATD	set	3980
   140  0000                     _LATDbits	set	3980
   141  0000                     _ACKEN	set	32300
   142  0000                     _ACKDT	set	32301
   143  0000                     _RCEN	set	32299
   144  0000                     _PEN	set	32298
   145  0000                     _RSEN	set	32297
   146  0000                     _SEN	set	32296
   147  0000                     _TRISC4	set	31908
   148  0000                     _TRISC3	set	31907
   149  0000                     _INT1IF	set	32640
   150  00FF1D                     STR_7:
   151  00FF1D  54                 	db	84	;'T'
   152  00FF1E  6F                 	db	111	;'o'
   153  00FF1F  74                 	db	116	;'t'
   154  00FF20  61                 	db	97	;'a'
   155  00FF21  6C                 	db	108	;'l'
   156  00FF22  20                 	db	32
   157  00FF23  53                 	db	83	;'S'
   158  00FF24  6F                 	db	111	;'o'
   159  00FF25  72                 	db	114	;'r'
   160  00FF26  74                 	db	116	;'t'
   161  00FF27  65                 	db	101	;'e'
   162  00FF28  64                 	db	100	;'d'
   163  00FF29  3A                 	db	58	;':'
   164  00FF2A  20                 	db	32
   165  00FF2B  25                 	db	37
   166  00FF2C  30                 	db	48	;'0'
   167  00FF2D  32                 	db	50	;'2'
   168  00FF2E  78                 	db	120	;'x'
   169  00FF2F  00                 	db	0
   170  00FF30                     STR_4:
   171  00FF30  41                 	db	65	;'A'
   172  00FF31  3A                 	db	58	;':'
   173  00FF32  54                 	db	84	;'T'
   174  00FF33  6F                 	db	111	;'o'
   175  00FF34  74                 	db	116	;'t'
   176  00FF35  61                 	db	97	;'a'
   177  00FF36  6C                 	db	108	;'l'
   178  00FF37  20                 	db	32
   179  00FF38  20                 	db	32
   180  00FF39  20                 	db	32
   181  00FF3A  42                 	db	66	;'B'
   182  00FF3B  3A                 	db	58	;':'
   183  00FF3C  50                 	db	80	;'P'
   184  00FF3D  6F                 	db	111	;'o'
   185  00FF3E  70                 	db	112	;'p'
   186  00FF3F  20                 	db	32
   187  00FF40  20                 	db	32
   188  00FF41  00                 	db	0
   189  00FF42                     STR_16:
   190  00FF42  30                 	db	48	;'0'
   191  00FF43  31                 	db	49	;'1'
   192  00FF44  32                 	db	50	;'2'
   193  00FF45  33                 	db	51	;'3'
   194  00FF46  34                 	db	52	;'4'
   195  00FF47  35                 	db	53	;'5'
   196  00FF48  36                 	db	54	;'6'
   197  00FF49  37                 	db	55	;'7'
   198  00FF4A  38                 	db	56	;'8'
   199  00FF4B  39                 	db	57	;'9'
   200  00FF4C  61                 	db	97	;'a'
   201  00FF4D  62                 	db	98	;'b'
   202  00FF4E  63                 	db	99	;'c'
   203  00FF4F  64                 	db	100	;'d'
   204  00FF50  65                 	db	101	;'e'
   205  00FF51  66                 	db	102	;'f'
   206  00FF52  00                 	db	0
   207  00FF53                     STR_5:
   208  00FF53  43                 	db	67	;'C'
   209  00FF54  3A                 	db	58	;':'
   210  00FF55  54                 	db	84	;'T'
   211  00FF56  69                 	db	105	;'i'
   212  00FF57  6E                 	db	110	;'n'
   213  00FF58  20                 	db	32
   214  00FF59  20                 	db	32
   215  00FF5A  20                 	db	32
   216  00FF5B  20                 	db	32
   217  00FF5C  20                 	db	32
   218  00FF5D  44                 	db	68	;'D'
   219  00FF5E  3A                 	db	58	;':'
   220  00FF5F  54                 	db	84	;'T'
   221  00FF60  69                 	db	105	;'i'
   222  00FF61  6D                 	db	109	;'m'
   223  00FF62  65                 	db	101	;'e'
   224  00FF63  00                 	db	0
   225  00FF64                     STR_6:
   226  00FF64  50                 	db	80	;'P'
   227  00FF65  72                 	db	114	;'r'
   228  00FF66  65                 	db	101	;'e'
   229  00FF67  73                 	db	115	;'s'
   230  00FF68  73                 	db	115	;'s'
   231  00FF69  20                 	db	32
   232  00FF6A  30                 	db	48	;'0'
   233  00FF6B  20                 	db	32
   234  00FF6C  74                 	db	116	;'t'
   235  00FF6D  6F                 	db	111	;'o'
   236  00FF6E  20                 	db	32
   237  00FF6F  52                 	db	82	;'R'
   238  00FF70  65                 	db	101	;'e'
   239  00FF71  73                 	db	115	;'s'
   240  00FF72  65                 	db	101	;'e'
   241  00FF73  74                 	db	116	;'t'
   242  00FF74  00                 	db	0
   243  00FF75                     STR_3:
   244  00FF75  50                 	db	80	;'P'
   245  00FF76  72                 	db	114	;'r'
   246  00FF77  65                 	db	101	;'e'
   247  00FF78  73                 	db	115	;'s'
   248  00FF79  73                 	db	115	;'s'
   249  00FF7A  20                 	db	32
   250  00FF7B  23                 	db	35
   251  00FF7C  20                 	db	32
   252  00FF7D  74                 	db	116	;'t'
   253  00FF7E  6F                 	db	111	;'o'
   254  00FF7F  20                 	db	32
   255  00FF80  53                 	db	83	;'S'
   256  00FF81  74                 	db	116	;'t'
   257  00FF82  61                 	db	97	;'a'
   258  00FF83  72                 	db	114	;'r'
   259  00FF84  74                 	db	116	;'t'
   260  00FF85  00                 	db	0
   261  00FF86                     STR_10:
   262  00FF86  57                 	db	87	;'W'
   263  00FF87  69                 	db	105	;'i'
   264  00FF88  74                 	db	116	;'t'
   265  00FF89  68                 	db	104	;'h'
   266  00FF8A  20                 	db	32
   267  00FF8B  4C                 	db	76	;'L'
   268  00FF8C  61                 	db	97	;'a'
   269  00FF8D  62                 	db	98	;'b'
   270  00FF8E  65                 	db	101	;'e'
   271  00FF8F  6C                 	db	108	;'l'
   272  00FF90  3A                 	db	58	;':'
   273  00FF91  20                 	db	32
   274  00FF92  25                 	db	37
   275  00FF93  30                 	db	48	;'0'
   276  00FF94  32                 	db	50	;'2'
   277  00FF95  78                 	db	120	;'x'
   278  00FF96  00                 	db	0
   279  00FF97                     STR_8:
   280  00FF97  57                 	db	87	;'W'
   281  00FF98  69                 	db	105	;'i'
   282  00FF99  74                 	db	116	;'t'
   283  00FF9A  68                 	db	104	;'h'
   284  00FF9B  20                 	db	32
   285  00FF9C  54                 	db	84	;'T'
   286  00FF9D  61                 	db	97	;'a'
   287  00FF9E  62                 	db	98	;'b'
   288  00FF9F  3A                 	db	58	;':'
   289  00FFA0  20                 	db	32
   290  00FFA1  25                 	db	37
   291  00FFA2  30                 	db	48	;'0'
   292  00FFA3  32                 	db	50	;'2'
   293  00FFA4  78                 	db	120	;'x'
   294  00FFA5  00                 	db	0
   295  00FFA6                     STR_11:
   296  00FFA6  4E                 	db	78	;'N'
   297  00FFA7  6F                 	db	111	;'o'
   298  00FFA8  20                 	db	32
   299  00FFA9  4C                 	db	76	;'L'
   300  00FFAA  61                 	db	97	;'a'
   301  00FFAB  62                 	db	98	;'b'
   302  00FFAC  65                 	db	101	;'e'
   303  00FFAD  6C                 	db	108	;'l'
   304  00FFAE  3A                 	db	58	;':'
   305  00FFAF  20                 	db	32
   306  00FFB0  25                 	db	37
   307  00FFB1  30                 	db	48	;'0'
   308  00FFB2  32                 	db	50	;'2'
   309  00FFB3  78                 	db	120	;'x'
   310  00FFB4  00                 	db	0
   311  00FFB5                     STR_1:
   312  00FFB5  25                 	db	37
   313  00FFB6  30                 	db	48	;'0'
   314  00FFB7  32                 	db	50	;'2'
   315  00FFB8  78                 	db	120	;'x'
   316  00FFB9  2F                 	db	47
   317  00FFBA  25                 	db	37
   318  00FFBB  30                 	db	48	;'0'
   319  00FFBC  32                 	db	50	;'2'
   320  00FFBD  78                 	db	120	;'x'
   321  00FFBE  2F                 	db	47
   322  00FFBF  25                 	db	37
   323  00FFC0  30                 	db	48	;'0'
   324  00FFC1  32                 	db	50	;'2'
   325  00FFC2  78                 	db	120	;'x'
   326  00FFC3  00                 	db	0
   327  00FFC4                     STR_2:
   328  00FFC4  25                 	db	37
   329  00FFC5  30                 	db	48	;'0'
   330  00FFC6  32                 	db	50	;'2'
   331  00FFC7  78                 	db	120	;'x'
   332  00FFC8  3A                 	db	58	;':'
   333  00FFC9  25                 	db	37
   334  00FFCA  30                 	db	48	;'0'
   335  00FFCB  32                 	db	50	;'2'
   336  00FFCC  78                 	db	120	;'x'
   337  00FFCD  3A                 	db	58	;':'
   338  00FFCE  25                 	db	37
   339  00FFCF  30                 	db	48	;'0'
   340  00FFD0  32                 	db	50	;'2'
   341  00FFD1  78                 	db	120	;'x'
   342  00FFD2  00                 	db	0
   343  00FFD3                     STR_12:
   344  00FFD3  54                 	db	84	;'T'
   345  00FFD4  69                 	db	105	;'i'
   346  00FFD5  6D                 	db	109	;'m'
   347  00FFD6  65                 	db	101	;'e'
   348  00FFD7  3A                 	db	58	;':'
   349  00FFD8  20                 	db	32
   350  00FFD9  25                 	db	37
   351  00FFDA  30                 	db	48	;'0'
   352  00FFDB  32                 	db	50	;'2'
   353  00FFDC  78                 	db	120	;'x'
   354  00FFDD  20                 	db	32
   355  00FFDE  73                 	db	115	;'s'
   356  00FFDF  00                 	db	0
   357  00FFE0                     STR_9:
   358  00FFE0  4E                 	db	78	;'N'
   359  00FFE1  6F                 	db	111	;'o'
   360  00FFE2  20                 	db	32
   361  00FFE3  54                 	db	84	;'T'
   362  00FFE4  61                 	db	97	;'a'
   363  00FFE5  62                 	db	98	;'b'
   364  00FFE6  3A                 	db	58	;':'
   365  00FFE7  20                 	db	32
   366  00FFE8  25                 	db	37
   367  00FFE9  30                 	db	48	;'0'
   368  00FFEA  32                 	db	50	;'2'
   369  00FFEB  78                 	db	120	;'x'
   370  00FFEC  00                 	db	0
   371  00FFED                     STR_14:
   372  00FFED  43                 	db	67	;'C'
   373  00FFEE  6F                 	db	111	;'o'
   374  00FFEF  6D                 	db	109	;'m'
   375  00FFF0  70                 	db	112	;'p'
   376  00FFF1  6C                 	db	108	;'l'
   377  00FFF2  65                 	db	101	;'e'
   378  00FFF3  74                 	db	116	;'t'
   379  00FFF4  65                 	db	101	;'e'
   380  00FFF5  64                 	db	100	;'d'
   381  00FFF6  00                 	db	0
   382  00FFF7                     STR_13:
   383  00FFF7  53                 	db	83	;'S'
   384  00FFF8  6F                 	db	111	;'o'
   385  00FFF9  72                 	db	114	;'r'
   386  00FFFA  74                 	db	116	;'t'
   387  00FFFB  69                 	db	105	;'i'
   388  00FFFC  6E                 	db	110	;'n'
   389  00FFFD  67                 	db	103	;'g'
   390  00FFFE  00                 	db	0
   391  0000                     
   392                           ; #config settings
   393  00FFFF  00                 	db	0	; dummy byte at the end
   394  0000                     
   395                           	psect	cinit
   396  000E40                     __pcinit:
   397                           	opt stack 0
   398  000E40                     start_initialization:
   399                           	opt stack 0
   400  000E40                     __initialization:
   401                           	opt stack 0
   402                           
   403                           ; Clear objects allocated to BANK0 (2 bytes)
   404  000E40  0100               	movlb	0
   405  000E42  6BAB               	clrf	(__pbssBANK0+1)& (0+255),b
   406  000E44  6BAA               	clrf	__pbssBANK0& (0+255),b
   407  000E46                     end_of_initialization:
   408                           	opt stack 0
   409  000E46                     __end_of__initialization:
   410                           	opt stack 0
   411  000E46  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   412  000E48  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   413  000E4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   414  000E4C  6EF8               	movwf	tblptru,c
   415  000E4E  0100               	movlb	0
   416  000E50  EFEA  F002         	goto	_main	;jump to C main() function
   417                           tblptru	equ	0xFF8
   418                           
   419                           	psect	bssBANK0
   420  0000AA                     __pbssBANK0:
   421                           	opt stack 0
   422  0000AA                     _passed:
   423                           	opt stack 0
   424  0000AA                     	ds	2
   425                           tblptru	equ	0xFF8
   426                           
   427                           	psect	cstackBANK0
   428  000080                     __pcstackBANK0:
   429                           	opt stack 0
   430  000080                     ??_isdigit:
   431  000080                     ??_I2C_Master_Wait:
   432  000080                     ?___wmul:
   433                           	opt stack 0
   434  000080                     ?___lwdiv:
   435                           	opt stack 0
   436  000080                     ?___lldiv:
   437                           	opt stack 0
   438  000080                     lcdNibble@temp:
   439                           	opt stack 0
   440  000080                     ___wmul@multiplier:
   441                           	opt stack 0
   442  000080                     ___lwdiv@dividend:
   443                           	opt stack 0
   444  000080                     ___lldiv@dividend:
   445                           	opt stack 0
   446                           
   447                           ; 4 bytes @ 0x0
   448  000080                     	ds	1
   449  000081                     lcdNibble@data:
   450                           	opt stack 0
   451  000081                     I2C_Master_Read@a:
   452                           	opt stack 0
   453  000081                     _isdigit$606:
   454                           	opt stack 0
   455  000081                     I2C_Master_Write@d:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x1
   459  000081                     	ds	1
   460  000082                     lcdInst@data:
   461                           	opt stack 0
   462  000082                     putch@data:
   463                           	opt stack 0
   464  000082                     I2C_Master_Read@temp:
   465                           	opt stack 0
   466  000082                     isdigit@c:
   467                           	opt stack 0
   468  000082                     ___wmul@multiplicand:
   469                           	opt stack 0
   470  000082                     ___lwdiv@divisor:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x2
   474  000082                     	ds	1
   475  000083                     ??_initLCD:
   476  000083                     set_time@i:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x3
   480  000083                     	ds	1
   481  000084                     ___wmul@product:
   482                           	opt stack 0
   483  000084                     ___lwdiv@quotient:
   484                           	opt stack 0
   485  000084                     ___lldiv@divisor:
   486                           	opt stack 0
   487                           
   488                           ; 4 bytes @ 0x4
   489  000084                     	ds	2
   490  000086                     ___lwdiv@counter:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x6
   494  000086                     	ds	1
   495  000087                     ?_printf:
   496                           	opt stack 0
   497  000087                     printf@f:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x7
   501  000087                     	ds	1
   502  000088                     ___lldiv@quotient:
   503                           	opt stack 0
   504                           
   505                           ; 4 bytes @ 0x8
   506  000088                     	ds	4
   507  00008C                     ___lldiv@counter:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0xC
   511  00008C                     	ds	1
   512  00008D                     I2C_Master_Init@c:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0xD
   516  00008D                     	ds	2
   517  00008F                     ??_printf:
   518                           
   519                           ; 1 bytes @ 0xF
   520  00008F                     	ds	2
   521  000091                     ??_I2C_Master_Init:
   522                           
   523                           ; 1 bytes @ 0x11
   524  000091                     	ds	2
   525  000093                     printf@ap:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x13
   529  000093                     	ds	2
   530  000095                     printf@idx:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x15
   534  000095                     	ds	1
   535  000096                     printf@flag:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x16
   539  000096                     	ds	1
   540  000097                     printf@val:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x17
   544  000097                     	ds	2
   545  000099                     printf@prec:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x19
   549  000099                     	ds	1
   550  00009A                     printf@width:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x1A
   554  00009A                     	ds	2
   555  00009C                     printf@c:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x1C
   559  00009C                     	ds	1
   560  00009D                     ??_main:
   561                           
   562                           ; 1 bytes @ 0x1D
   563  00009D                     	ds	1
   564  00009E                     main@keypress:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x1E
   568  00009E                     	ds	1
   569  00009F                     main@time:
   570                           	opt stack 0
   571                           
   572                           ; 7 bytes @ 0x1F
   573  00009F                     	ds	7
   574  0000A6                     main@i_282:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x26
   578  0000A6                     	ds	1
   579  0000A7                     main@i_294:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x27
   583  0000A7                     	ds	1
   584  0000A8                     main@i_296:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x28
   588  0000A8                     	ds	1
   589  0000A9                     main@i:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x29
   593  0000A9                     	ds	1
   594                           tblptru	equ	0xFF8
   595                           
   596                           	psect	cstackCOMRAM
   597  000001                     __pcstackCOMRAM:
   598                           	opt stack 0
   599  000001                     ??i2_isdigit:
   600  000001                     ?i2___wmul:
   601                           	opt stack 0
   602  000001                     ?i2___lwdiv:
   603                           	opt stack 0
   604  000001                     i2lcdNibble@temp:
   605                           	opt stack 0
   606  000001                     i2___wmul@multiplier:
   607                           	opt stack 0
   608  000001                     i2___lwdiv@dividend:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x0
   612  000001                     	ds	1
   613  000002                     i2lcdNibble@data:
   614                           	opt stack 0
   615  000002                     i2_isdigit$606:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x1
   619  000002                     	ds	1
   620  000003                     i2lcdInst@data:
   621                           	opt stack 0
   622  000003                     i2putch@data:
   623                           	opt stack 0
   624  000003                     i2isdigit@c:
   625                           	opt stack 0
   626  000003                     i2___wmul@multiplicand:
   627                           	opt stack 0
   628  000003                     i2___lwdiv@divisor:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x2
   632  000003                     	ds	1
   633  000004                     ??i2_initLCD:
   634                           
   635                           ; 1 bytes @ 0x3
   636  000004                     	ds	1
   637  000005                     i2___wmul@product:
   638                           	opt stack 0
   639  000005                     i2___lwdiv@quotient:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x4
   643  000005                     	ds	2
   644  000007                     i2___lwdiv@counter:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x6
   648  000007                     	ds	1
   649  000008                     ?i2_printf:
   650                           	opt stack 0
   651  000008                     i2printf@f:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x7
   655  000008                     	ds	4
   656  00000C                     ??i2_printf:
   657                           
   658                           ; 1 bytes @ 0xB
   659  00000C                     	ds	4
   660  000010                     i2printf@idx:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0xF
   664  000010                     	ds	1
   665  000011                     i2printf@ap:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x10
   669  000011                     	ds	2
   670  000013                     i2printf@flag:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x12
   674  000013                     	ds	1
   675  000014                     i2printf@val:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x13
   679  000014                     	ds	2
   680  000016                     i2printf@prec:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x15
   684  000016                     	ds	1
   685  000017                     i2printf@width:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x16
   689  000017                     	ds	2
   690  000019                     i2printf@c:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x18
   694  000019                     	ds	1
   695  00001A                     ??_keypressed:
   696                           
   697                           ; 1 bytes @ 0x19
   698  00001A                     	ds	15
   699  000029                     keypressed@pop_can:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x28
   703  000029                     	ds	2
   704  00002B                     keypressed@pop_can_tab:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x2A
   708  00002B                     	ds	2
   709  00002D                     keypressed@tin_can:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x2C
   713  00002D                     	ds	2
   714  00002F                     keypressed@tin_can_label:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x2E
   718  00002F                     	ds	2
   719  000031                     keypressed@operation_time:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x30
   723  000031                     	ds	2
   724  000033                     keypressed@tot:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x32
   728  000033                     	ds	2
   729  000035                     keypressed@keypress:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x34
   733  000035                     	ds	1
   734  000036                     keypressed@i:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x35
   738  000036                     	ds	1
   739  000037                     keypressed@i_312:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x36
   743  000037                     	ds	1
   744  000038                     keypressed@i_315:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x37
   748  000038                     	ds	1
   749  000039                     keypressed@i_316:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x38
   753  000039                     	ds	1
   754  00003A                     keypressed@i_319:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x39
   758  00003A                     	ds	1
   759  00003B                     keypressed@i_320:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x3A
   763  00003B                     	ds	1
   764  00003C                     keypressed@i_322:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x3B
   768  00003C                     	ds	1
   769  00003D                     keypressed@i_323:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x3C
   773  00003D                     	ds	1
   774  00003E                     keypressed@i_325:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x3D
   778  00003E                     	ds	1
   779  00003F                     keypressed@i_326:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x3E
   783  00003F                     	ds	1
   784  000040                     keypressed@i_329:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x3F
   788  000040                     	ds	1
   789  000041                     keypressed@keypress_temp:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x40
   793  000041                     	ds	1
   794                           tblptru	equ	0xFF8
   795                           
   796 ;;
   797 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   798 ;;
   799 ;; *************** function _main *****************
   800 ;; Defined at:
   801 ;;		line 33 in file "main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  i               1   40[BANK0 ] unsigned char 
   806 ;;  i               1   39[BANK0 ] unsigned char 
   807 ;;  i               1   38[BANK0 ] unsigned char 
   808 ;;  i               1   41[BANK0 ] unsigned char 
   809 ;;  keypress        1   30[BANK0 ] unsigned char 
   810 ;;  time            7   31[BANK0 ] unsigned char [7]
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;Total ram usage:       13 bytes
   825 ;; Hardware stack levels required when called:    7
   826 ;; This function calls:
   827 ;;		_I2C_Master_Init
   828 ;;		_I2C_Master_Read
   829 ;;		_I2C_Master_Start
   830 ;;		_I2C_Master_Stop
   831 ;;		_I2C_Master_Write
   832 ;;		_initLCD
   833 ;;		_lcdInst
   834 ;;		_printf
   835 ;;		_set_time
   836 ;; This function is called by:
   837 ;;		Startup code after reset
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text0
   842  0005D4                     __ptext0:
   843                           	opt stack 0
   844  0005D4                     _main:
   845                           	opt stack 24
   846                           
   847                           ;main.c: 36: TRISA = 0xFF;
   848                           
   849                           ;incstack = 0
   850  0005D4  6892               	setf	3986,c	;volatile
   851                           
   852                           ;main.c: 37: TRISB = 0xFF;
   853  0005D6  6893               	setf	3987,c	;volatile
   854                           
   855                           ;main.c: 38: TRISC = 0x00011000;
   856  0005D8  0E00               	movlw	0
   857  0005DA  6E94               	movwf	3988,c	;volatile
   858                           
   859                           ;main.c: 39: TRISD = 0x00;
   860  0005DC  0E00               	movlw	0
   861  0005DE  6E95               	movwf	3989,c	;volatile
   862                           
   863                           ;main.c: 40: TRISE = 0x00;
   864  0005E0  0E00               	movlw	0
   865  0005E2  6E96               	movwf	3990,c	;volatile
   866                           
   867                           ;main.c: 42: LATA = 0x00;
   868  0005E4  0E00               	movlw	0
   869  0005E6  6E89               	movwf	3977,c	;volatile
   870                           
   871                           ;main.c: 43: LATB = 0x00;
   872  0005E8  0E00               	movlw	0
   873  0005EA  6E8A               	movwf	3978,c	;volatile
   874                           
   875                           ;main.c: 44: LATC = 0x00;
   876  0005EC  0E00               	movlw	0
   877  0005EE  6E8B               	movwf	3979,c	;volatile
   878                           
   879                           ;main.c: 45: LATD = 0x00;
   880  0005F0  0E00               	movlw	0
   881  0005F2  6E8C               	movwf	3980,c	;volatile
   882                           
   883                           ;main.c: 46: LATE = 0x00;
   884  0005F4  0E00               	movlw	0
   885  0005F6  6E8D               	movwf	3981,c	;volatile
   886                           
   887                           ;main.c: 48: ADCON0 = 0x00;
   888  0005F8  0E00               	movlw	0
   889  0005FA  6EC2               	movwf	4034,c	;volatile
   890                           
   891                           ;main.c: 49: ADCON1 = 0xFF;
   892  0005FC  68C1               	setf	4033,c	;volatile
   893                           
   894                           ;main.c: 53: initLCD();
   895  0005FE  EC6F  F006         	call	_initLCD	;wreg free
   896                           
   897                           ;main.c: 55: INT1IF = 1;
   898  000602  80F0               	bsf	intcon3,0,c	;volatile
   899                           
   900                           ;main.c: 56: (INTCONbits.GIE = 1);
   901  000604  8EF2               	bsf	intcon,7,c	;volatile
   902                           
   903                           ;main.c: 58: unsigned char time[7];
   904                           ;main.c: 60: I2C_Master_Init(10000);
   905  000606  0E10               	movlw	16
   906  000608  0100               	movlb	0	; () banked
   907  00060A  6F8D               	movwf	I2C_Master_Init@c& (0+255),b
   908  00060C  0E27               	movlw	39
   909  00060E  6F8E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
   910  000610  0E00               	movlw	0
   911  000612  6F8F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
   912  000614  0E00               	movlw	0
   913  000616  6F90               	movwf	(I2C_Master_Init@c+3)& (0+255),b
   914  000618  ECBD  F005         	call	_I2C_Master_Init	;wreg free
   915                           
   916                           ;main.c: 63: set_time();
   917  00061C  ECED  F005         	call	_set_time	;wreg free
   918                           
   919                           ;main.c: 66: while (passed == 0) {
   920                           
   921                           ;main.c: 65: while(1){
   922  000620  D088               	goto	l1973
   923  000622                     l1937:
   924                           
   925                           ;main.c: 69: I2C_Master_Start();
   926  000622  EC59  F007         	call	_I2C_Master_Start	;wreg free
   927                           
   928                           ;main.c: 70: I2C_Master_Write(0b11010000);
   929  000626  0E00               	movlw	0
   930  000628  0100               	movlb	0	; () banked
   931  00062A  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
   932  00062C  0ED0               	movlw	208
   933  00062E  6F81               	movwf	I2C_Master_Write@d& (0+255),b
   934  000630  EC50  F007         	call	_I2C_Master_Write	;wreg free
   935                           
   936                           ;main.c: 71: I2C_Master_Write(0x00);
   937  000634  0E00               	movlw	0
   938  000636  0100               	movlb	0	; () banked
   939  000638  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
   940  00063A  0E00               	movlw	0
   941  00063C  6F81               	movwf	I2C_Master_Write@d& (0+255),b
   942  00063E  EC50  F007         	call	_I2C_Master_Write	;wreg free
   943                           
   944                           ;main.c: 72: I2C_Master_Stop();
   945  000642  EC55  F007         	call	_I2C_Master_Stop	;wreg free
   946                           
   947                           ;main.c: 75: I2C_Master_Start();
   948  000646  EC59  F007         	call	_I2C_Master_Start	;wreg free
   949                           
   950                           ;main.c: 76: I2C_Master_Write(0b11010001);
   951  00064A  0E00               	movlw	0
   952  00064C  0100               	movlb	0	; () banked
   953  00064E  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
   954  000650  0ED1               	movlw	209
   955  000652  6F81               	movwf	I2C_Master_Write@d& (0+255),b
   956  000654  EC50  F007         	call	_I2C_Master_Write	;wreg free
   957                           
   958                           ;main.c: 77: for(unsigned char i=0;i<0x06;i++){
   959  000658  0E00               	movlw	0
   960  00065A  0100               	movlb	0	; () banked
   961  00065C  6FA9               	movwf	main@i& (0+255),b
   962  00065E                     l1941:
   963                           
   964                           ; BSR set to: 0
   965  00065E  0E05               	movlw	5
   966  000660  0100               	movlb	0	; () banked
   967  000662  65A9               	cpfsgt	main@i& (0+255),b
   968  000664  D001               	goto	l1945
   969  000666  D010               	goto	l1951
   970  000668                     l1945:
   971                           
   972                           ; BSR set to: 0
   973                           ;main.c: 78: time[i] = I2C_Master_Read(1);
   974  000668  0100               	movlb	0	; () banked
   975  00066A  51A9               	movf	main@i& (0+255),w,b
   976  00066C  0D01               	mullw	1
   977  00066E  0E9F               	movlw	low main@time
   978  000670  24F3               	addwf	prodl,w,c
   979  000672  6ED9               	movwf	fsr2l,c
   980  000674  0E00               	movlw	high main@time
   981  000676  20F4               	addwfc	prodh,w,c
   982  000678  6EDA               	movwf	fsr2h,c
   983  00067A  0E01               	movlw	1
   984  00067C  ECD2  F006         	call	_I2C_Master_Read
   985  000680  6EDF               	movwf	indf2,c
   986  000682  0100               	movlb	0	; () banked
   987  000684  2BA9               	incf	main@i& (0+255),f,b
   988  000686  D7EB               	goto	l1941
   989  000688                     l1951:
   990                           
   991                           ; BSR set to: 0
   992                           ;main.c: 79: }
   993                           ;main.c: 80: time[6] = I2C_Master_Read(0);
   994  000688  0E00               	movlw	0
   995  00068A  ECD2  F006         	call	_I2C_Master_Read
   996  00068E  0100               	movlb	0	; () banked
   997  000690  6FA5               	movwf	(main@time+6)& (0+255),b
   998                           
   999                           ;main.c: 81: I2C_Master_Stop();
  1000  000692  EC55  F007         	call	_I2C_Master_Stop	;wreg free
  1001                           
  1002                           ;main.c: 82: lcdInst(0b10000000);;
  1003  000696  0E80               	movlw	128
  1004  000698  EC3C  F007         	call	_lcdInst
  1005                           
  1006                           ;main.c: 83: printf("%02x/%02x/%02x", time[6],time[5],time[4]);
  1007  00069C  0EB5               	movlw	low STR_1
  1008  00069E  0100               	movlb	0	; () banked
  1009  0006A0  6F87               	movwf	printf@f& (0+255),b
  1010  0006A2  0EFF               	movlw	high STR_1
  1011  0006A4  0100               	movlb	0	; () banked
  1012  0006A6  6F88               	movwf	(printf@f+1)& (0+255),b
  1013  0006A8  C0A5  F089         	movff	main@time+6,?_printf+2
  1014  0006AC  0100               	movlb	0	; () banked
  1015  0006AE  6B8A               	clrf	(?_printf+3)& (0+255),b
  1016  0006B0  C0A4  F08B         	movff	main@time+5,?_printf+4
  1017  0006B4  0100               	movlb	0	; () banked
  1018  0006B6  6B8C               	clrf	(?_printf+5)& (0+255),b
  1019  0006B8  C0A3  F08D         	movff	main@time+4,?_printf+6
  1020  0006BC  0100               	movlb	0	; () banked
  1021  0006BE  6B8E               	clrf	(?_printf+7)& (0+255),b
  1022  0006C0  ECB4  F001         	call	_printf	;wreg free
  1023                           
  1024                           ;main.c: 84: printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1025  0006C4  0EC4               	movlw	low STR_2
  1026  0006C6  0100               	movlb	0	; () banked
  1027  0006C8  6F87               	movwf	printf@f& (0+255),b
  1028  0006CA  0EFF               	movlw	high STR_2
  1029  0006CC  0100               	movlb	0	; () banked
  1030  0006CE  6F88               	movwf	(printf@f+1)& (0+255),b
  1031  0006D0  C0A1  F089         	movff	main@time+2,?_printf+2
  1032  0006D4  0100               	movlb	0	; () banked
  1033  0006D6  6B8A               	clrf	(?_printf+3)& (0+255),b
  1034  0006D8  C0A0  F08B         	movff	main@time+1,?_printf+4
  1035  0006DC  0100               	movlb	0	; () banked
  1036  0006DE  6B8C               	clrf	(?_printf+5)& (0+255),b
  1037  0006E0  C09F  F08D         	movff	main@time,?_printf+6
  1038  0006E4  0100               	movlb	0	; () banked
  1039  0006E6  6B8E               	clrf	(?_printf+7)& (0+255),b
  1040  0006E8  ECB4  F001         	call	_printf	;wreg free
  1041                           
  1042                           ;main.c: 87: initLCD();
  1043  0006EC  EC6F  F006         	call	_initLCD	;wreg free
  1044                           
  1045                           ;main.c: 88: lcdInst(0b11000000);;
  1046  0006F0  0EC0               	movlw	192
  1047  0006F2  EC3C  F007         	call	_lcdInst
  1048                           
  1049                           ;main.c: 89: (INTCONbits.GIE = 0);
  1050  0006F6  9EF2               	bcf	intcon,7,c	;volatile
  1051                           
  1052                           ;main.c: 90: printf("Press # to Start");
  1053  0006F8  0E75               	movlw	low STR_3
  1054  0006FA  0100               	movlb	0	; () banked
  1055  0006FC  6F87               	movwf	printf@f& (0+255),b
  1056  0006FE  0EFF               	movlw	high STR_3
  1057  000700  0100               	movlb	0	; () banked
  1058  000702  6F88               	movwf	(printf@f+1)& (0+255),b
  1059  000704  ECB4  F001         	call	_printf	;wreg free
  1060                           
  1061                           ;main.c: 91: (INTCONbits.GIE = 1);
  1062  000708  8EF2               	bsf	intcon,7,c	;volatile
  1063                           
  1064                           ;main.c: 92: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  1065  00070A  0E00               	movlw	0
  1066  00070C  0100               	movlb	0	; () banked
  1067  00070E  6FA6               	movwf	main@i_282& (0+255),b
  1068  000710                     l1965:
  1069                           
  1070                           ; BSR set to: 0
  1071  000710  0E63               	movlw	99
  1072  000712  0100               	movlb	0	; () banked
  1073  000714  65A6               	cpfsgt	main@i_282& (0+255),b
  1074  000716  D001               	goto	l1969
  1075  000718  D00C               	goto	l1973
  1076  00071A                     l1969:
  1077                           
  1078                           ; BSR set to: 0
  1079  00071A  0E21               	movlw	33
  1080  00071C  0100               	movlb	0	; () banked
  1081  00071E  6F9D               	movwf	??_main& (0+255),b
  1082  000720  0E76               	movlw	118
  1083  000722                     u1767:
  1084  000722  2EE8               	decfsz	wreg,f,c
  1085  000724  D7FE               	bra	u1767
  1086  000726  2F9D               	decfsz	??_main& (0+255),f,b
  1087  000728  D7FC               	bra	u1767
  1088  00072A  F000               	nop	
  1089  00072C  0100               	movlb	0	; () banked
  1090  00072E  2BA6               	incf	main@i_282& (0+255),f,b
  1091  000730  D7EF               	goto	l1965
  1092  000732                     l1973:
  1093  000732  0100               	movlb	0	; () banked
  1094  000734  51AA               	movf	_passed& (0+255),w,b
  1095  000736  0100               	movlb	0	; () banked
  1096  000738  11AB               	iorwf	(_passed+1)& (0+255),w,b
  1097  00073A  B4D8               	btfsc	status,2,c
  1098  00073C  D772               	goto	l1937
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;main.c: 93: }
  1102                           ;main.c: 97: unsigned char keypress = (PORTB & 0xF0)>>4;
  1103                           
  1104                           ; BSR set to: 0
  1105  00073E  3881               	swapf	3969,w,c	;volatile
  1106  000740  0B0F               	andlw	15
  1107  000742  0B0F               	andlw	15
  1108  000744  0100               	movlb	0	; () banked
  1109  000746  6F9E               	movwf	main@keypress& (0+255),b
  1110  000748                     l95:
  1111  000748  B281               	btfsc	3969,1,c	;volatile
  1112  00074A  D7FE               	goto	l95
  1113  00074C                     l98:
  1114                           
  1115                           ;main.c: 103: (INTCONbits.GIE = 0);
  1116  00074C  9EF2               	bcf	intcon,7,c	;volatile
  1117                           
  1118                           ;main.c: 105: printf("A:Total   B:Pop  ");
  1119  00074E  0E30               	movlw	low STR_4
  1120  000750  0100               	movlb	0	; () banked
  1121  000752  6F87               	movwf	printf@f& (0+255),b
  1122  000754  0EFF               	movlw	high STR_4
  1123  000756  0100               	movlb	0	; () banked
  1124  000758  6F88               	movwf	(printf@f+1)& (0+255),b
  1125  00075A  ECB4  F001         	call	_printf	;wreg free
  1126                           
  1127                           ;main.c: 106: lcdInst(0b11000000);;
  1128  00075E  0EC0               	movlw	192
  1129  000760  EC3C  F007         	call	_lcdInst
  1130                           
  1131                           ;main.c: 107: printf("C:Tin     D:Time");
  1132  000764  0E53               	movlw	low STR_5
  1133  000766  0100               	movlb	0	; () banked
  1134  000768  6F87               	movwf	printf@f& (0+255),b
  1135  00076A  0EFF               	movlw	high STR_5
  1136  00076C  0100               	movlb	0	; () banked
  1137  00076E  6F88               	movwf	(printf@f+1)& (0+255),b
  1138  000770  ECB4  F001         	call	_printf	;wreg free
  1139                           
  1140                           ;main.c: 108: (INTCONbits.GIE = 1);
  1141  000774  8EF2               	bsf	intcon,7,c	;volatile
  1142                           
  1143                           ;main.c: 109: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  1144  000776  0E00               	movlw	0
  1145  000778  0100               	movlb	0	; () banked
  1146  00077A  6FA7               	movwf	main@i_294& (0+255),b
  1147  00077C                     l1987:
  1148                           
  1149                           ; BSR set to: 0
  1150  00077C  0E63               	movlw	99
  1151  00077E  0100               	movlb	0	; () banked
  1152  000780  65A7               	cpfsgt	main@i_294& (0+255),b
  1153  000782  D001               	goto	l1991
  1154  000784  D00C               	goto	l100
  1155  000786                     l1991:
  1156                           
  1157                           ; BSR set to: 0
  1158  000786  0E21               	movlw	33
  1159  000788  0100               	movlb	0	; () banked
  1160  00078A  6F9D               	movwf	??_main& (0+255),b
  1161  00078C  0E76               	movlw	118
  1162  00078E                     u1777:
  1163  00078E  2EE8               	decfsz	wreg,f,c
  1164  000790  D7FE               	bra	u1777
  1165  000792  2F9D               	decfsz	??_main& (0+255),f,b
  1166  000794  D7FC               	bra	u1777
  1167  000796  F000               	nop	
  1168  000798  0100               	movlb	0	; () banked
  1169  00079A  2BA7               	incf	main@i_294& (0+255),f,b
  1170  00079C  D7EF               	goto	l1987
  1171  00079E                     l100:
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;main.c: 110: (INTCONbits.GIE = 0);
  1175  00079E  9EF2               	bcf	intcon,7,c	;volatile
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;main.c: 111: lcdInst(0b10000000);;
  1179  0007A0  0E80               	movlw	128
  1180  0007A2  EC3C  F007         	call	_lcdInst
  1181                           
  1182                           ;main.c: 112: initLCD();
  1183  0007A6  EC6F  F006         	call	_initLCD	;wreg free
  1184                           
  1185                           ;main.c: 113: printf("Press 0 to Reset");
  1186  0007AA  0E64               	movlw	low STR_6
  1187  0007AC  0100               	movlb	0	; () banked
  1188  0007AE  6F87               	movwf	printf@f& (0+255),b
  1189  0007B0  0EFF               	movlw	high STR_6
  1190  0007B2  0100               	movlb	0	; () banked
  1191  0007B4  6F88               	movwf	(printf@f+1)& (0+255),b
  1192  0007B6  ECB4  F001         	call	_printf	;wreg free
  1193                           
  1194                           ;main.c: 114: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  1195  0007BA  0E00               	movlw	0
  1196  0007BC  0100               	movlb	0	; () banked
  1197  0007BE  6FA8               	movwf	main@i_296& (0+255),b
  1198  0007C0                     l2001:
  1199                           
  1200                           ; BSR set to: 0
  1201  0007C0  0E63               	movlw	99
  1202  0007C2  0100               	movlb	0	; () banked
  1203  0007C4  65A8               	cpfsgt	main@i_296& (0+255),b
  1204  0007C6  D001               	goto	l2005
  1205  0007C8  D00C               	goto	l102
  1206  0007CA                     l2005:
  1207                           
  1208                           ; BSR set to: 0
  1209  0007CA  0E21               	movlw	33
  1210  0007CC  0100               	movlb	0	; () banked
  1211  0007CE  6F9D               	movwf	??_main& (0+255),b
  1212  0007D0  0E76               	movlw	118
  1213  0007D2                     u1787:
  1214  0007D2  2EE8               	decfsz	wreg,f,c
  1215  0007D4  D7FE               	bra	u1787
  1216  0007D6  2F9D               	decfsz	??_main& (0+255),f,b
  1217  0007D8  D7FC               	bra	u1787
  1218  0007DA  F000               	nop	
  1219  0007DC  0100               	movlb	0	; () banked
  1220  0007DE  2BA8               	incf	main@i_296& (0+255),f,b
  1221  0007E0  D7EF               	goto	l2001
  1222  0007E2                     l102:
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;main.c: 115: (INTCONbits.GIE = 1);
  1226  0007E2  8EF2               	bsf	intcon,7,c	;volatile
  1227                           
  1228                           ; BSR set to: 0
  1229  0007E4  D7B3               	goto	l98
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;main.c: 116: }
  1233                           ;main.c: 117: __nop();
  1234  0007E6  F000               	nop	
  1235                           
  1236                           ;main.c: 118: __nop();
  1237  0007E8  F000               	nop	
  1238  0007EA                     __end_of_main:
  1239                           	opt stack 0
  1240                           tblptru	equ	0xFF8
  1241                           prodh	equ	0xFF4
  1242                           prodl	equ	0xFF3
  1243                           intcon	equ	0xFF2
  1244                           intcon3	equ	0xFF0
  1245                           wreg	equ	0xFE8
  1246                           indf2	equ	0xFDF
  1247                           fsr2h	equ	0xFDA
  1248                           fsr2l	equ	0xFD9
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function _set_time *****************
  1252 ;; Defined at:
  1253 ;;		line 123 in file "main.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  i               1    3[BANK0 ] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        1 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    6
  1274 ;; This function calls:
  1275 ;;		_I2C_Master_Start
  1276 ;;		_I2C_Master_Stop
  1277 ;;		_I2C_Master_Write
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text1
  1284  000BDA                     __ptext1:
  1285                           	opt stack 0
  1286  000BDA                     _set_time:
  1287                           	opt stack 24
  1288                           
  1289                           ;main.c: 124: I2C_Master_Start();
  1290                           
  1291                           ;incstack = 0
  1292  000BDA  EC59  F007         	call	_I2C_Master_Start	;wreg free
  1293                           
  1294                           ;main.c: 125: I2C_Master_Write(0b11010000);
  1295  000BDE  0E00               	movlw	0
  1296  000BE0  0100               	movlb	0	; () banked
  1297  000BE2  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  1298  000BE4  0ED0               	movlw	208
  1299  000BE6  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  1300  000BE8  EC50  F007         	call	_I2C_Master_Write	;wreg free
  1301                           
  1302                           ;main.c: 126: I2C_Master_Write(0x00);
  1303  000BEC  0E00               	movlw	0
  1304  000BEE  0100               	movlb	0	; () banked
  1305  000BF0  6F82               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  1306  000BF2  0E00               	movlw	0
  1307  000BF4  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  1308  000BF6  EC50  F007         	call	_I2C_Master_Write	;wreg free
  1309                           
  1310                           ;main.c: 127: for(char i=0; i<7; i++){
  1311  000BFA  0E00               	movlw	0
  1312  000BFC  0100               	movlb	0	; () banked
  1313  000BFE  6F83               	movwf	set_time@i& (0+255),b
  1314  000C00                     l1729:
  1315                           
  1316                           ; BSR set to: 0
  1317  000C00  0E06               	movlw	6
  1318  000C02  0100               	movlb	0	; () banked
  1319  000C04  6583               	cpfsgt	set_time@i& (0+255),b
  1320  000C06  D001               	goto	l1733
  1321  000C08  D013               	goto	l1739
  1322  000C0A                     l1733:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;main.c: 128: I2C_Master_Write(RtcTime[i]);
  1326  000C0A  0100               	movlb	0	; () banked
  1327  000C0C  5183               	movf	set_time@i& (0+255),w,b
  1328  000C0E  0D01               	mullw	1
  1329  000C10  0E16               	movlw	low _RtcTime
  1330  000C12  24F3               	addwf	prodl,w,c
  1331  000C14  6EF6               	movwf	tblptrl,c
  1332  000C16  0EFF               	movlw	high _RtcTime
  1333  000C18  20F4               	addwfc	prodh,w,c
  1334  000C1A  6EF7               	movwf	tblptrh,c
  1335  000C1C                     	if	0	;There are less than 3 active tblptr bytes
  1336  000C1C                     	endif
  1337  000C1C  0008               	tblrd		*
  1338  000C1E  50F5               	movf	tablat,w,c
  1339  000C20  0100               	movlb	0	; () banked
  1340  000C22  6F81               	movwf	I2C_Master_Write@d& (0+255),b
  1341  000C24  6B82               	clrf	(I2C_Master_Write@d+1)& (0+255),b
  1342  000C26  EC50  F007         	call	_I2C_Master_Write	;wreg free
  1343  000C2A  0100               	movlb	0	; () banked
  1344  000C2C  2B83               	incf	set_time@i& (0+255),f,b
  1345  000C2E  D7E8               	goto	l1729
  1346  000C30                     l1739:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;main.c: 129: }
  1350                           ;main.c: 130: I2C_Master_Stop();
  1351  000C30  EC55  F007         	call	_I2C_Master_Stop	;wreg free
  1352  000C34  0012               	return		;funcret
  1353  000C36                     __end_of_set_time:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           intcon	equ	0xFF2
  1362                           intcon3	equ	0xFF0
  1363                           wreg	equ	0xFE8
  1364                           indf2	equ	0xFDF
  1365                           fsr2h	equ	0xFDA
  1366                           fsr2l	equ	0xFD9
  1367                           status	equ	0xFD8
  1368                           
  1369 ;; *************** function _I2C_Master_Write *****************
  1370 ;; Defined at:
  1371 ;;		line 47 in file "I2C.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  d               2    1[BANK0 ] unsigned int 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1385 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;Total ram usage:        2 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    5
  1392 ;; This function calls:
  1393 ;;		_I2C_Master_Wait
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;;		_set_time
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text2
  1401  000EA0                     __ptext2:
  1402                           	opt stack 0
  1403  000EA0                     _I2C_Master_Write:
  1404                           	opt stack 24
  1405                           
  1406                           ;I2C.c: 49: I2C_Master_Wait();
  1407                           
  1408                           ;incstack = 0
  1409  000EA0  EC2A  F007         	call	_I2C_Master_Wait	;wreg free
  1410                           
  1411                           ;I2C.c: 50: SSPBUF = d;
  1412  000EA4  C081  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1413  000EA8  0012               	return		;funcret
  1414  000EAA                     __end_of_I2C_Master_Write:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           prodh	equ	0xFF4
  1421                           prodl	equ	0xFF3
  1422                           intcon	equ	0xFF2
  1423                           intcon3	equ	0xFF0
  1424                           wreg	equ	0xFE8
  1425                           indf2	equ	0xFDF
  1426                           fsr2h	equ	0xFDA
  1427                           fsr2l	equ	0xFD9
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _I2C_Master_Stop *****************
  1431 ;; Defined at:
  1432 ;;		line 41 in file "I2C.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  2   62[None  ] int 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    5
  1453 ;; This function calls:
  1454 ;;		_I2C_Master_Wait
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;;		_set_time
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text3
  1462  000EAA                     __ptext3:
  1463                           	opt stack 0
  1464  000EAA                     _I2C_Master_Stop:
  1465                           	opt stack 24
  1466                           
  1467                           ;I2C.c: 43: I2C_Master_Wait();
  1468                           
  1469                           ;incstack = 0
  1470  000EAA  EC2A  F007         	call	_I2C_Master_Wait	;wreg free
  1471                           
  1472                           ;I2C.c: 44: PEN = 1;
  1473  000EAE  84C5               	bsf	4037,2,c	;volatile
  1474  000EB0  0012               	return		;funcret
  1475  000EB2                     __end_of_I2C_Master_Stop:
  1476                           	opt stack 0
  1477                           tblptru	equ	0xFF8
  1478                           tblptrh	equ	0xFF7
  1479                           tblptrl	equ	0xFF6
  1480                           tablat	equ	0xFF5
  1481                           prodh	equ	0xFF4
  1482                           prodl	equ	0xFF3
  1483                           intcon	equ	0xFF2
  1484                           intcon3	equ	0xFF0
  1485                           wreg	equ	0xFE8
  1486                           indf2	equ	0xFDF
  1487                           fsr2h	equ	0xFDA
  1488                           fsr2l	equ	0xFD9
  1489                           status	equ	0xFD8
  1490                           
  1491 ;; *************** function _I2C_Master_Start *****************
  1492 ;; Defined at:
  1493 ;;		line 29 in file "I2C.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2   58[None  ] int 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;Total ram usage:        0 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    5
  1514 ;; This function calls:
  1515 ;;		_I2C_Master_Wait
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;;		_set_time
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text4
  1523  000EB2                     __ptext4:
  1524                           	opt stack 0
  1525  000EB2                     _I2C_Master_Start:
  1526                           	opt stack 24
  1527                           
  1528                           ;I2C.c: 31: I2C_Master_Wait();
  1529                           
  1530                           ;incstack = 0
  1531  000EB2  EC2A  F007         	call	_I2C_Master_Wait	;wreg free
  1532                           
  1533                           ;I2C.c: 32: SEN = 1;
  1534  000EB6  80C5               	bsf	4037,0,c	;volatile
  1535  000EB8  0012               	return		;funcret
  1536  000EBA                     __end_of_I2C_Master_Start:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           prodh	equ	0xFF4
  1543                           prodl	equ	0xFF3
  1544                           intcon	equ	0xFF2
  1545                           intcon3	equ	0xFF0
  1546                           wreg	equ	0xFE8
  1547                           indf2	equ	0xFDF
  1548                           fsr2h	equ	0xFDA
  1549                           fsr2l	equ	0xFD9
  1550                           status	equ	0xFD8
  1551                           
  1552 ;; *************** function _printf *****************
  1553 ;; Defined at:
  1554 ;;		line 464 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  f               2    7[BANK0 ] PTR const unsigned char 
  1557 ;;		 -> STR_15(2), STR_14(10), STR_13(8), STR_12(13), 
  1558 ;;		 -> STR_11(15), STR_10(17), STR_9(13), STR_8(15), 
  1559 ;;		 -> STR_7(19), STR_6(17), STR_5(17), STR_4(18), 
  1560 ;;		 -> STR_3(17), STR_2(15), STR_1(15), 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  idx             1   21[BANK0 ] unsigned char 
  1563 ;;  tmpval          4    0        struct .
  1564 ;;  cp              3    0        PTR const unsigned char 
  1565 ;;  width           2   26[BANK0 ] int 
  1566 ;;  val             2   23[BANK0 ] unsigned int 
  1567 ;;  ap              2   19[BANK0 ] PTR void [1]
  1568 ;;		 -> ?i2_printf(2), ?_printf(2), 
  1569 ;;  len             2    0        unsigned int 
  1570 ;;  c               1   28[BANK0 ] char 
  1571 ;;  prec            1   25[BANK0 ] char 
  1572 ;;  flag            1   22[BANK0 ] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  2    7[BANK0 ] int 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1582 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;Total ram usage:       22 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    6
  1589 ;; This function calls:
  1590 ;;		___lwdiv
  1591 ;;		___wmul
  1592 ;;		_isdigit
  1593 ;;		_putch
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text5
  1600  000368                     __ptext5:
  1601                           	opt stack 0
  1602  000368                     _printf:
  1603                           	opt stack 24
  1604                           
  1605                           ;doprnt.c: 466: va_list ap;
  1606                           ;doprnt.c: 499: signed char c;
  1607                           ;doprnt.c: 501: int width;
  1608                           ;doprnt.c: 506: signed char prec;
  1609                           ;doprnt.c: 508: unsigned char flag;
  1610                           ;doprnt.c: 523: union {
  1611                           ;doprnt.c: 524: unsigned long vd;
  1612                           ;doprnt.c: 525: double integ;
  1613                           ;doprnt.c: 526: } tmpval;
  1614                           ;doprnt.c: 528: unsigned int val;
  1615                           ;doprnt.c: 529: unsigned len;
  1616                           ;doprnt.c: 530: const char * cp;
  1617                           ;doprnt.c: 533: *ap = __va_start();
  1618                           
  1619                           ;incstack = 0
  1620  000368  0E89               	movlw	low (?_printf+2)
  1621  00036A  0100               	movlb	0	; () banked
  1622  00036C  6F93               	movwf	printf@ap& (0+255),b
  1623  00036E  0E00               	movlw	high (?_printf+2)
  1624  000370  0100               	movlb	0	; () banked
  1625  000372  6F94               	movwf	(printf@ap+1)& (0+255),b
  1626                           
  1627                           ;doprnt.c: 536: while(c = *f++) {
  1628  000374  D120               	goto	l1829
  1629  000376                     l1757:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;doprnt.c: 538: if(c != '%')
  1633  000376  0E25               	movlw	37
  1634  000378  0100               	movlb	0	; () banked
  1635  00037A  199C               	xorwf	printf@c& (0+255),w,b
  1636  00037C  B4D8               	btfsc	status,2,c
  1637  00037E  D005               	goto	l1761
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;doprnt.c: 540: {
  1641                           ;doprnt.c: 541: (putch(c) );
  1642  000380  0100               	movlb	0	; () banked
  1643  000382  519C               	movf	printf@c& (0+255),w,b
  1644  000384  EC34  F007         	call	_putch
  1645                           
  1646                           ;doprnt.c: 542: continue;
  1647  000388  D116               	goto	l1829
  1648  00038A                     l1761:
  1649                           
  1650                           ;doprnt.c: 543: }
  1651                           ;doprnt.c: 546: width = 0;
  1652  00038A  0E00               	movlw	0
  1653  00038C  0100               	movlb	0	; () banked
  1654  00038E  6F9B               	movwf	(printf@width+1)& (0+255),b
  1655  000390  0E00               	movlw	0
  1656  000392  6F9A               	movwf	printf@width& (0+255),b
  1657                           
  1658                           ;doprnt.c: 548: flag = 0;
  1659  000394  0E00               	movlw	0
  1660  000396  0100               	movlb	0	; () banked
  1661  000398  6F96               	movwf	printf@flag& (0+255),b
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;doprnt.c: 551: switch(*f) {
  1665                           
  1666                           ;doprnt.c: 550: for(;;) {
  1667  00039A  D005               	goto	l1767
  1668  00039C                     l1763:
  1669                           
  1670                           ;doprnt.c: 580: flag |= 0x04;
  1671  00039C  0100               	movlb	0	; () banked
  1672  00039E  8596               	bsf	printf@flag& (0+255),2,b
  1673                           
  1674                           ;doprnt.c: 581: f++;
  1675  0003A0  0100               	movlb	0	; () banked
  1676  0003A2  4B87               	infsnz	printf@f& (0+255),f,b
  1677  0003A4  2B88               	incf	(printf@f+1)& (0+255),f,b
  1678  0003A6                     l1767:
  1679  0003A6  C087  FFF6         	movff	printf@f,tblptrl
  1680  0003AA  C088  FFF7         	movff	printf@f+1,tblptrh
  1681  0003AE                     	if	0	;tblptru may be non-zero
  1682  0003AE                     	endif
  1683  0003AE                     	if	0	;tblptru may be non-zero
  1684  0003AE                     	endif
  1685  0003AE  0008               	tblrd		*
  1686  0003B0  50F5               	movf	tablat,w,c
  1687                           
  1688                           ; Switch size 1, requested type "space"
  1689                           ; Number of cases is 1, Range of values is 48 to 48
  1690                           ; switch strategies available:
  1691                           ; Name         Instructions Cycles
  1692                           ; simple_byte            4     3 (average)
  1693                           ;	Chosen strategy is simple_byte
  1694  0003B2  0A30               	xorlw	48	; case 48
  1695  0003B4  B4D8               	btfsc	status,2,c
  1696  0003B6  D7F2               	goto	l1763
  1697                           
  1698                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1699                           
  1700                           ;doprnt.c: 586: }
  1701                           
  1702                           ;doprnt.c: 585: break;
  1703  0003B8  C087  FFF6         	movff	printf@f,tblptrl
  1704  0003BC  C088  FFF7         	movff	printf@f+1,tblptrh
  1705  0003C0                     	if	0	;tblptru may be non-zero
  1706  0003C0                     	endif
  1707  0003C0                     	if	0	;tblptru may be non-zero
  1708  0003C0                     	endif
  1709  0003C0  0008               	tblrd		*
  1710  0003C2  50F5               	movf	tablat,w,c
  1711  0003C4  ECE9  F006         	call	_isdigit
  1712  0003C8  A0D8               	btfss	status,0,c
  1713  0003CA  D040               	goto	l1783
  1714                           
  1715                           ;doprnt.c: 598: width = 0;
  1716  0003CC  0E00               	movlw	0
  1717  0003CE  0100               	movlb	0	; () banked
  1718  0003D0  6F9B               	movwf	(printf@width+1)& (0+255),b
  1719  0003D2  0E00               	movlw	0
  1720  0003D4  6F9A               	movwf	printf@width& (0+255),b
  1721  0003D6                     l1773:
  1722                           
  1723                           ;doprnt.c: 600: width *= 10;
  1724  0003D6  C09A  F080         	movff	printf@width,___wmul@multiplier
  1725  0003DA  C09B  F081         	movff	printf@width+1,___wmul@multiplier+1
  1726  0003DE  0E00               	movlw	0
  1727  0003E0  0100               	movlb	0	; () banked
  1728  0003E2  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1729  0003E4  0E0A               	movlw	10
  1730  0003E6  6F82               	movwf	___wmul@multiplicand& (0+255),b
  1731  0003E8  ECB7  F006         	call	___wmul	;wreg free
  1732  0003EC  C080  F09A         	movff	?___wmul,printf@width
  1733  0003F0  C081  F09B         	movff	?___wmul+1,printf@width+1
  1734                           
  1735                           ;doprnt.c: 601: width += *f++ - '0';
  1736  0003F4  0ED0               	movlw	208
  1737  0003F6  0100               	movlb	0	; () banked
  1738  0003F8  6F8F               	movwf	??_printf& (0+255),b
  1739  0003FA  0EFF               	movlw	255
  1740  0003FC  0100               	movlb	0	; () banked
  1741  0003FE  6F90               	movwf	(??_printf+1)& (0+255),b
  1742  000400  C087  FFF6         	movff	printf@f,tblptrl
  1743  000404  C088  FFF7         	movff	printf@f+1,tblptrh
  1744  000408                     	if	0	;tblptru may be non-zero
  1745  000408                     	endif
  1746  000408                     	if	0	;tblptru may be non-zero
  1747  000408                     	endif
  1748  000408  0008               	tblrd		*
  1749  00040A  50F5               	movf	tablat,w,c
  1750  00040C  0100               	movlb	0	; () banked
  1751  00040E  6F91               	movwf	(??_printf+2)& (0+255),b
  1752  000410  6B92               	clrf	(??_printf+3)& (0+255),b
  1753  000412  0100               	movlb	0	; () banked
  1754  000414  518F               	movf	??_printf& (0+255),w,b
  1755  000416  0100               	movlb	0	; () banked
  1756  000418  2791               	addwf	(??_printf+2)& (0+255),f,b
  1757  00041A  0100               	movlb	0	; () banked
  1758  00041C  5190               	movf	(??_printf+1)& (0+255),w,b
  1759  00041E  0100               	movlb	0	; () banked
  1760  000420  2392               	addwfc	(??_printf+3)& (0+255),f,b
  1761  000422  0100               	movlb	0	; () banked
  1762  000424  5191               	movf	(??_printf+2)& (0+255),w,b
  1763  000426  0100               	movlb	0	; () banked
  1764  000428  279A               	addwf	printf@width& (0+255),f,b
  1765  00042A  0100               	movlb	0	; () banked
  1766  00042C  5192               	movf	(??_printf+3)& (0+255),w,b
  1767  00042E  0100               	movlb	0	; () banked
  1768  000430  239B               	addwfc	(printf@width+1)& (0+255),f,b
  1769                           
  1770                           ; BSR set to: 0
  1771  000432  0100               	movlb	0	; () banked
  1772  000434  4B87               	infsnz	printf@f& (0+255),f,b
  1773  000436  2B88               	incf	(printf@f+1)& (0+255),f,b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1777  000438  C087  FFF6         	movff	printf@f,tblptrl
  1778  00043C  C088  FFF7         	movff	printf@f+1,tblptrh
  1779  000440                     	if	0	;tblptru may be non-zero
  1780  000440                     	endif
  1781  000440                     	if	0	;tblptru may be non-zero
  1782  000440                     	endif
  1783  000440  0008               	tblrd		*
  1784  000442  50F5               	movf	tablat,w,c
  1785  000444  ECE9  F006         	call	_isdigit
  1786  000448  B0D8               	btfsc	status,0,c
  1787  00044A  D7C5               	goto	l1773
  1788  00044C                     l1783:
  1789  00044C  C087  FFF6         	movff	printf@f,tblptrl
  1790  000450  C088  FFF7         	movff	printf@f+1,tblptrh
  1791  000454  0100               	movlb	0	; () banked
  1792  000456  4B87               	infsnz	printf@f& (0+255),f,b
  1793  000458  2B88               	incf	(printf@f+1)& (0+255),f,b
  1794  00045A                     	if	0	;tblptru may be non-zero
  1795  00045A                     	endif
  1796  00045A                     	if	0	;tblptru may be non-zero
  1797  00045A                     	endif
  1798  00045A  0008               	tblrd		*
  1799  00045C  CFF5 F09C          	movff	tablat,printf@c
  1800  000460  0100               	movlb	0	; () banked
  1801  000462  519C               	movf	printf@c& (0+255),w,b
  1802                           
  1803                           ; Switch size 1, requested type "space"
  1804                           ; Number of cases is 2, Range of values is 0 to 120
  1805                           ; switch strategies available:
  1806                           ; Name         Instructions Cycles
  1807                           ; simple_byte            7     4 (average)
  1808                           ;	Chosen strategy is simple_byte
  1809  000464  0A00               	xorlw	0	; case 0
  1810  000466  B4D8               	btfsc	status,2,c
  1811  000468  0012               	return	
  1812  00046A  0A78               	xorlw	120	; case 120
  1813  00046C  A4D8               	btfss	status,2,c
  1814  00046E  D0A3               	goto	l1829
  1815                           
  1816                           ;doprnt.c: 1273: {
  1817                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1818                           
  1819                           ; BSR set to: 0
  1820  000470  C093  FFD9         	movff	printf@ap,fsr2l
  1821  000474  C094  FFDA         	movff	printf@ap+1,fsr2h
  1822  000478  CFDE F097          	movff	postinc2,printf@val
  1823  00047C  CFDD F098          	movff	postdec2,printf@val+1
  1824  000480  0E02               	movlw	2
  1825  000482  0100               	movlb	0	; () banked
  1826  000484  2793               	addwf	printf@ap& (0+255),f,b
  1827  000486  0E00               	movlw	0
  1828  000488  2394               	addwfc	(printf@ap+1)& (0+255),f,b
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;doprnt.c: 1287: }
  1832                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1833  00048A  0E01               	movlw	1
  1834  00048C  0100               	movlb	0	; () banked
  1835  00048E  6F9C               	movwf	printf@c& (0+255),b
  1836  000490                     l1791:
  1837                           
  1838                           ; BSR set to: 0
  1839  000490  0E04               	movlw	4
  1840  000492  0100               	movlb	0	; () banked
  1841  000494  199C               	xorwf	printf@c& (0+255),w,b
  1842  000496  B4D8               	btfsc	status,2,c
  1843  000498  D016               	goto	l1803
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1847                           
  1848                           ; BSR set to: 0
  1849                           
  1850                           ; BSR set to: 0
  1851  00049A  0100               	movlb	0	; () banked
  1852  00049C  519C               	movf	printf@c& (0+255),w,b
  1853  00049E  0D02               	mullw	2
  1854  0004A0  0E0E               	movlw	low _hexpowers
  1855  0004A2  24F3               	addwf	prodl,w,c
  1856  0004A4  6EF6               	movwf	tblptrl,c
  1857  0004A6  0EFF               	movlw	high _hexpowers
  1858  0004A8  20F4               	addwfc	prodh,w,c
  1859  0004AA  6EF7               	movwf	tblptrh,c
  1860  0004AC                     	if	0	;There are less than 3 active tblptr bytes
  1861  0004AC                     	endif
  1862  0004AC  0009               	tblrd		*+
  1863  0004AE  50F5               	movf	tablat,w,c
  1864  0004B0  0100               	movlb	0	; () banked
  1865  0004B2  5D97               	subwf	printf@val& (0+255),w,b
  1866  0004B4  0009               	tblrd		*+
  1867  0004B6  50F5               	movf	tablat,w,c
  1868  0004B8  0100               	movlb	0	; () banked
  1869  0004BA  5998               	subwfb	(printf@val+1)& (0+255),w,b
  1870  0004BC  A0D8               	btfss	status,0,c
  1871  0004BE  D003               	goto	l1803
  1872                           
  1873                           ; BSR set to: 0
  1874                           
  1875                           ; BSR set to: 0
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;doprnt.c: 1318: break;
  1879  0004C0  0100               	movlb	0	; () banked
  1880  0004C2  2B9C               	incf	printf@c& (0+255),f,b
  1881  0004C4  D7E5               	goto	l1791
  1882  0004C6                     l1803:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;doprnt.c: 1381: if(width > c)
  1886  0004C6  0E80               	movlw	128
  1887  0004C8  0100               	movlb	0	; () banked
  1888  0004CA  BF9C               	btfsc	printf@c& (0+255),7,b
  1889  0004CC  0E7F               	movlw	127
  1890  0004CE  0100               	movlb	0	; () banked
  1891  0004D0  6F8F               	movwf	??_printf& (0+255),b
  1892  0004D2  0100               	movlb	0	; () banked
  1893  0004D4  519A               	movf	printf@width& (0+255),w,b
  1894  0004D6  0100               	movlb	0	; () banked
  1895  0004D8  5D9C               	subwf	printf@c& (0+255),w,b
  1896  0004DA  0100               	movlb	0	; () banked
  1897  0004DC  519B               	movf	(printf@width+1)& (0+255),w,b
  1898  0004DE  0A80               	xorlw	128
  1899  0004E0  0100               	movlb	0	; () banked
  1900  0004E2  598F               	subwfb	??_printf& (0+255),w,b
  1901  0004E4  B0D8               	btfsc	status,0,c
  1902  0004E6  D00B               	goto	l1807
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;doprnt.c: 1382: width -= c;
  1906  0004E8  0100               	movlb	0	; () banked
  1907  0004EA  519C               	movf	printf@c& (0+255),w,b
  1908  0004EC  0100               	movlb	0	; () banked
  1909  0004EE  5F9A               	subwf	printf@width& (0+255),f,b
  1910  0004F0  0E00               	movlw	0
  1911  0004F2  0100               	movlb	0	; () banked
  1912  0004F4  BF9C               	btfsc	printf@c& (0+255),7,b
  1913  0004F6  0EFF               	movlw	255
  1914  0004F8  0100               	movlb	0	; () banked
  1915  0004FA  5B9B               	subwfb	(printf@width+1)& (0+255),f,b
  1916  0004FC  D005               	goto	l1809
  1917  0004FE                     l1807:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;doprnt.c: 1383: else
  1921                           ;doprnt.c: 1384: width = 0;
  1922  0004FE  0E00               	movlw	0
  1923  000500  0100               	movlb	0	; () banked
  1924  000502  6F9B               	movwf	(printf@width+1)& (0+255),b
  1925  000504  0E00               	movlw	0
  1926  000506  6F9A               	movwf	printf@width& (0+255),b
  1927  000508                     l1809:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;doprnt.c: 1387: if(flag & 0x04) {
  1931  000508  0100               	movlb	0	; () banked
  1932  00050A  A596               	btfss	printf@flag& (0+255),2,b
  1933  00050C  D00E               	goto	l1817
  1934  00050E                     
  1935                           ; BSR set to: 0
  1936                           ;doprnt.c: 1415: if(width)
  1937  00050E  0100               	movlb	0	; () banked
  1938  000510  519A               	movf	printf@width& (0+255),w,b
  1939  000512  0100               	movlb	0	; () banked
  1940  000514  119B               	iorwf	(printf@width+1)& (0+255),w,b
  1941  000516  B4D8               	btfsc	status,2,c
  1942  000518  D01B               	goto	l248
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;doprnt.c: 1417: (putch('0') );
  1946                           
  1947                           ; BSR set to: 0
  1948                           
  1949                           ;doprnt.c: 1416: do
  1950  00051A  0E30               	movlw	48
  1951  00051C  EC34  F007         	call	_putch
  1952                           
  1953                           ;doprnt.c: 1418: while(--width);
  1954  000520  0100               	movlb	0	; () banked
  1955  000522  079A               	decf	printf@width& (0+255),f,b
  1956  000524  A0D8               	btfss	status,0,c
  1957  000526  079B               	decf	(printf@width+1)& (0+255),f,b
  1958  000528  D7F2               	goto	L1
  1959  00052A                     l1817:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;doprnt.c: 1422: {
  1963                           ;doprnt.c: 1424: if(width
  1964                           ;doprnt.c: 1428: )
  1965  00052A  0100               	movlb	0	; () banked
  1966  00052C  519A               	movf	printf@width& (0+255),w,b
  1967  00052E  0100               	movlb	0	; () banked
  1968  000530  119B               	iorwf	(printf@width+1)& (0+255),w,b
  1969  000532  B4D8               	btfsc	status,2,c
  1970  000534  D00D               	goto	l248
  1971  000536                     l1819:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;doprnt.c: 1430: (putch(' ') );
  1975  000536  0E20               	movlw	32
  1976  000538  EC34  F007         	call	_putch
  1977                           
  1978                           ;doprnt.c: 1431: while(--width);
  1979  00053C  0100               	movlb	0	; () banked
  1980  00053E  079A               	decf	printf@width& (0+255),f,b
  1981  000540  A0D8               	btfss	status,0,c
  1982  000542  079B               	decf	(printf@width+1)& (0+255),f,b
  1983  000544  0100               	movlb	0	; () banked
  1984  000546  519A               	movf	printf@width& (0+255),w,b
  1985  000548  0100               	movlb	0	; () banked
  1986  00054A  119B               	iorwf	(printf@width+1)& (0+255),w,b
  1987  00054C  A4D8               	btfss	status,2,c
  1988  00054E  D7F3               	goto	l1819
  1989  000550                     l248:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;doprnt.c: 1469: }
  1993                           ;doprnt.c: 1472: prec = c;
  1994  000550  C09C  F099         	movff	printf@c,printf@prec
  1995                           
  1996                           ;doprnt.c: 1474: while(prec--) {
  1997  000554  D02A               	goto	l252
  1998  000556                     l1823:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;doprnt.c: 1478: {
  2002                           ;doprnt.c: 1499: {
  2003                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2004  000556  C097  F080         	movff	printf@val,___lwdiv@dividend
  2005  00055A  C098  F081         	movff	printf@val+1,___lwdiv@dividend+1
  2006  00055E  0100               	movlb	0	; () banked
  2007  000560  5199               	movf	printf@prec& (0+255),w,b
  2008  000562  0D02               	mullw	2
  2009  000564  0E0E               	movlw	low _hexpowers
  2010  000566  24F3               	addwf	prodl,w,c
  2011  000568  6EF6               	movwf	tblptrl,c
  2012  00056A  0EFF               	movlw	high _hexpowers
  2013  00056C  20F4               	addwfc	prodh,w,c
  2014  00056E  6EF7               	movwf	tblptrh,c
  2015  000570                     	if	0	;There are less than 3 active tblptr bytes
  2016  000570                     	endif
  2017  000570  0009               	tblrd		*+
  2018  000572  CFF5 F082          	movff	tablat,___lwdiv@divisor
  2019  000576  000A               	tblrd		*-
  2020  000578  CFF5 F083          	movff	tablat,___lwdiv@divisor+1
  2021  00057C  EC4D  F005         	call	___lwdiv	;wreg free
  2022  000580  0100               	movlb	0	; () banked
  2023  000582  5180               	movf	?___lwdiv& (0+255),w,b
  2024  000584  0B0F               	andlw	15
  2025  000586  0100               	movlb	0	; () banked
  2026  000588  6F95               	movwf	printf@idx& (0+255),b
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2030  00058A  0100               	movlb	0	; () banked
  2031  00058C  5195               	movf	printf@idx& (0+255),w,b
  2032  00058E  0D01               	mullw	1
  2033  000590  0E42               	movlw	low STR_16
  2034  000592  24F3               	addwf	prodl,w,c
  2035  000594  6EF6               	movwf	tblptrl,c
  2036  000596  0EFF               	movlw	high STR_16
  2037  000598  20F4               	addwfc	prodh,w,c
  2038  00059A  6EF7               	movwf	tblptrh,c
  2039  00059C                     	if	0	;There are less than 3 active tblptr bytes
  2040  00059C                     	endif
  2041  00059C  0008               	tblrd		*
  2042  00059E  CFF5 F09C          	movff	tablat,printf@c
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;doprnt.c: 1508: }
  2046                           ;doprnt.c: 1523: }
  2047                           ;doprnt.c: 1524: (putch(c) );
  2048  0005A2  0100               	movlb	0	; () banked
  2049  0005A4  519C               	movf	printf@c& (0+255),w,b
  2050  0005A6  EC34  F007         	call	_putch
  2051  0005AA                     l252:
  2052  0005AA  0100               	movlb	0	; () banked
  2053  0005AC  0799               	decf	printf@prec& (0+255),f,b
  2054  0005AE  0100               	movlb	0	; () banked
  2055  0005B0  2999               	incf	printf@prec& (0+255),w,b
  2056  0005B2  A4D8               	btfss	status,2,c
  2057  0005B4  D7D0               	goto	l1823
  2058  0005B6                     l1829:
  2059  0005B6  C087  FFF6         	movff	printf@f,tblptrl
  2060  0005BA  C088  FFF7         	movff	printf@f+1,tblptrh
  2061  0005BE  0100               	movlb	0	; () banked
  2062  0005C0  4B87               	infsnz	printf@f& (0+255),f,b
  2063  0005C2  2B88               	incf	(printf@f+1)& (0+255),f,b
  2064  0005C4                     	if	0	;tblptru may be non-zero
  2065  0005C4                     	endif
  2066  0005C4                     	if	0	;tblptru may be non-zero
  2067  0005C4                     	endif
  2068  0005C4  0008               	tblrd		*
  2069  0005C6  CFF5 F09C          	movff	tablat,printf@c
  2070  0005CA  0100               	movlb	0	; () banked
  2071  0005CC  519C               	movf	printf@c& (0+255),w,b
  2072  0005CE  B4D8               	btfsc	status,2,c
  2073  0005D0  0012               	return	
  2074  0005D2  D6D1               	goto	l1757
  2075  0005D4                     __end_of_printf:
  2076                           	opt stack 0
  2077                           tblptru	equ	0xFF8
  2078                           tblptrh	equ	0xFF7
  2079                           tblptrl	equ	0xFF6
  2080                           tablat	equ	0xFF5
  2081                           prodh	equ	0xFF4
  2082                           prodl	equ	0xFF3
  2083                           intcon	equ	0xFF2
  2084                           intcon3	equ	0xFF0
  2085                           wreg	equ	0xFE8
  2086                           indf2	equ	0xFDF
  2087                           postinc2	equ	0xFDE
  2088                           postdec2	equ	0xFDD
  2089                           fsr2h	equ	0xFDA
  2090                           fsr2l	equ	0xFD9
  2091                           status	equ	0xFD8
  2092                           
  2093 ;; *************** function _putch *****************
  2094 ;; Defined at:
  2095 ;;		line 30 in file "lcd.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  data            1    wreg     unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  data            1    2[BANK0 ] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;Total ram usage:        1 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    5
  2116 ;; This function calls:
  2117 ;;		_lcdNibble
  2118 ;; This function is called by:
  2119 ;;		_printf
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text6
  2124  000E68                     __ptext6:
  2125                           	opt stack 0
  2126  000E68                     _putch:
  2127                           	opt stack 24
  2128                           
  2129                           ;incstack = 0
  2130                           ;putch@data stored from wreg
  2131  000E68  0100               	movlb	0	; () banked
  2132  000E6A  6F82               	movwf	putch@data& (0+255),b
  2133                           
  2134                           ;lcd.c: 31: LATDbits.LATD2 = 1;
  2135  000E6C  848C               	bsf	3980,2,c	;volatile
  2136                           
  2137                           ;lcd.c: 32: lcdNibble(data);
  2138  000E6E  0100               	movlb	0	; () banked
  2139  000E70  5182               	movf	putch@data& (0+255),w,b
  2140  000E72  EC89  F005         	call	_lcdNibble
  2141  000E76  0012               	return		;funcret
  2142  000E78                     __end_of_putch:
  2143                           	opt stack 0
  2144                           tblptru	equ	0xFF8
  2145                           tblptrh	equ	0xFF7
  2146                           tblptrl	equ	0xFF6
  2147                           tablat	equ	0xFF5
  2148                           prodh	equ	0xFF4
  2149                           prodl	equ	0xFF3
  2150                           intcon	equ	0xFF2
  2151                           intcon3	equ	0xFF0
  2152                           wreg	equ	0xFE8
  2153                           indf2	equ	0xFDF
  2154                           postinc2	equ	0xFDE
  2155                           postdec2	equ	0xFDD
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _isdigit *****************
  2161 ;; Defined at:
  2162 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/isdigit.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  c               1    wreg     unsigned char 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  c               1    2[BANK0 ] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        3 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    4
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_printf
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text7
  2191  000DD2                     __ptext7:
  2192                           	opt stack 0
  2193  000DD2                     _isdigit:
  2194                           	opt stack 25
  2195                           
  2196                           ;incstack = 0
  2197                           ;isdigit@c stored from wreg
  2198  000DD2  0100               	movlb	0	; () banked
  2199  000DD4  6F82               	movwf	isdigit@c& (0+255),b
  2200  000DD6  0E00               	movlw	0
  2201  000DD8  0100               	movlb	0	; () banked
  2202  000DDA  6F81               	movwf	_isdigit$606& (0+255),b
  2203                           
  2204                           ; BSR set to: 0
  2205  000DDC  0E3A               	movlw	58
  2206  000DDE  0100               	movlb	0	; () banked
  2207  000DE0  6182               	cpfslt	isdigit@c& (0+255),b
  2208  000DE2  D007               	goto	l1601
  2209                           
  2210                           ; BSR set to: 0
  2211  000DE4  0E2F               	movlw	47
  2212  000DE6  0100               	movlb	0	; () banked
  2213  000DE8  6582               	cpfsgt	isdigit@c& (0+255),b
  2214  000DEA  D003               	goto	l1601
  2215                           
  2216                           ; BSR set to: 0
  2217  000DEC  0E01               	movlw	1
  2218  000DEE  0100               	movlb	0	; () banked
  2219  000DF0  6F81               	movwf	_isdigit$606& (0+255),b
  2220  000DF2                     l1601:
  2221                           
  2222                           ; BSR set to: 0
  2223  000DF2  C081  F080         	movff	_isdigit$606,??_isdigit
  2224  000DF6  0100               	movlb	0	; () banked
  2225  000DF8  3180               	rrcf	??_isdigit& (0+255),w,b
  2226  000DFA  0012               	return	
  2227  000DFC                     __end_of_isdigit:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           intcon	equ	0xFF2
  2236                           intcon3	equ	0xFF0
  2237                           wreg	equ	0xFE8
  2238                           indf2	equ	0xFDF
  2239                           postinc2	equ	0xFDE
  2240                           postdec2	equ	0xFDD
  2241                           fsr2h	equ	0xFDA
  2242                           fsr2l	equ	0xFD9
  2243                           status	equ	0xFD8
  2244                           
  2245 ;; *************** function ___wmul *****************
  2246 ;; Defined at:
  2247 ;;		line 15 in file "/Applications/microchip/xc8/v1.41/sources/common/Umul16.c"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2250 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  product         2    4[BANK0 ] unsigned int 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2    0[BANK0 ] unsigned int 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0, prodl, prodh
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;Total ram usage:        6 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    4
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_printf
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text8
  2277  000D6E                     __ptext8:
  2278                           	opt stack 0
  2279  000D6E                     ___wmul:
  2280                           	opt stack 25
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;incstack = 0
  2284  000D6E  0100               	movlb	0	; () banked
  2285  000D70  5180               	movf	___wmul@multiplier& (0+255),w,b
  2286  000D72  0100               	movlb	0	; () banked
  2287  000D74  0382               	mulwf	___wmul@multiplicand& (0+255),b
  2288  000D76  CFF3 F084          	movff	prodl,___wmul@product
  2289  000D7A  CFF4 F085          	movff	prodh,___wmul@product+1
  2290  000D7E  0100               	movlb	0	; () banked
  2291  000D80  5180               	movf	___wmul@multiplier& (0+255),w,b
  2292  000D82  0100               	movlb	0	; () banked
  2293  000D84  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2294  000D86  50F3               	movf	prodl,w,c
  2295  000D88  0100               	movlb	0	; () banked
  2296  000D8A  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  2297  000D8C  0100               	movlb	0	; () banked
  2298  000D8E  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2299  000D90  0100               	movlb	0	; () banked
  2300  000D92  0382               	mulwf	___wmul@multiplicand& (0+255),b
  2301  000D94  50F3               	movf	prodl,w,c
  2302  000D96  0100               	movlb	0	; () banked
  2303  000D98  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  2304                           
  2305                           ; BSR set to: 0
  2306  000D9A  C084  F080         	movff	___wmul@product,?___wmul
  2307  000D9E  C085  F081         	movff	___wmul@product+1,?___wmul+1
  2308  000DA2  0012               	return	
  2309  000DA4                     __end_of___wmul:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           intcon	equ	0xFF2
  2318                           intcon3	equ	0xFF0
  2319                           wreg	equ	0xFE8
  2320                           indf2	equ	0xFDF
  2321                           postinc2	equ	0xFDE
  2322                           postdec2	equ	0xFDD
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function ___lwdiv *****************
  2328 ;; Defined at:
  2329 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lwdiv.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  dividend        2    0[BANK0 ] unsigned int 
  2332 ;;  divisor         2    2[BANK0 ] unsigned int 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  quotient        2    4[BANK0 ] unsigned int 
  2335 ;;  counter         1    6[BANK0 ] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2    0[BANK0 ] unsigned int 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        7 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    4
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_printf
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text9
  2360  000A9A                     __ptext9:
  2361                           	opt stack 0
  2362  000A9A                     ___lwdiv:
  2363                           	opt stack 25
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;incstack = 0
  2367  000A9A  0E00               	movlw	0
  2368  000A9C  0100               	movlb	0	; () banked
  2369  000A9E  6F85               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2370  000AA0  0E00               	movlw	0
  2371  000AA2  6F84               	movwf	___lwdiv@quotient& (0+255),b
  2372                           
  2373                           ; BSR set to: 0
  2374  000AA4  0100               	movlb	0	; () banked
  2375  000AA6  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2376  000AA8  0100               	movlb	0	; () banked
  2377  000AAA  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2378  000AAC  B4D8               	btfsc	status,2,c
  2379  000AAE  D02C               	goto	l664
  2380                           
  2381                           ; BSR set to: 0
  2382  000AB0  0E01               	movlw	1
  2383  000AB2  0100               	movlb	0	; () banked
  2384  000AB4  6F86               	movwf	___lwdiv@counter& (0+255),b
  2385  000AB6  D006               	goto	l1641
  2386  000AB8                     l1639:
  2387                           
  2388                           ; BSR set to: 0
  2389  000AB8  0100               	movlb	0	; () banked
  2390  000ABA  90D8               	bcf	status,0,c
  2391  000ABC  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
  2392  000ABE  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2393  000AC0  0100               	movlb	0	; () banked
  2394  000AC2  2B86               	incf	___lwdiv@counter& (0+255),f,b
  2395  000AC4                     l1641:
  2396                           
  2397                           ; BSR set to: 0
  2398  000AC4  0100               	movlb	0	; () banked
  2399  000AC6  AF83               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2400  000AC8  D7F7               	goto	l1639
  2401  000ACA                     l1643:
  2402                           
  2403                           ; BSR set to: 0
  2404  000ACA  0100               	movlb	0	; () banked
  2405  000ACC  90D8               	bcf	status,0,c
  2406  000ACE  3784               	rlcf	___lwdiv@quotient& (0+255),f,b
  2407  000AD0  3785               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2408                           
  2409                           ; BSR set to: 0
  2410  000AD2  0100               	movlb	0	; () banked
  2411  000AD4  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2412  000AD6  0100               	movlb	0	; () banked
  2413  000AD8  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
  2414  000ADA  0100               	movlb	0	; () banked
  2415  000ADC  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2416  000ADE  0100               	movlb	0	; () banked
  2417  000AE0  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2418  000AE2  A0D8               	btfss	status,0,c
  2419  000AE4  D00A               	goto	l1651
  2420                           
  2421                           ; BSR set to: 0
  2422  000AE6  0100               	movlb	0	; () banked
  2423  000AE8  5182               	movf	___lwdiv@divisor& (0+255),w,b
  2424  000AEA  0100               	movlb	0	; () banked
  2425  000AEC  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
  2426  000AEE  0100               	movlb	0	; () banked
  2427  000AF0  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2428  000AF2  0100               	movlb	0	; () banked
  2429  000AF4  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2430                           
  2431                           ; BSR set to: 0
  2432  000AF6  0100               	movlb	0	; () banked
  2433  000AF8  8184               	bsf	___lwdiv@quotient& (0+255),0,b
  2434  000AFA                     l1651:
  2435                           
  2436                           ; BSR set to: 0
  2437  000AFA  0100               	movlb	0	; () banked
  2438  000AFC  90D8               	bcf	status,0,c
  2439  000AFE  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2440  000B00  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
  2441                           
  2442                           ; BSR set to: 0
  2443  000B02  0100               	movlb	0	; () banked
  2444  000B04  2F86               	decfsz	___lwdiv@counter& (0+255),f,b
  2445  000B06  D7E1               	goto	l1643
  2446  000B08                     l664:
  2447                           
  2448                           ; BSR set to: 0
  2449  000B08  C084  F080         	movff	___lwdiv@quotient,?___lwdiv
  2450  000B0C  C085  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2451                           
  2452                           ; BSR set to: 0
  2453  000B10  0012               	return		;funcret
  2454  000B12                     __end_of___lwdiv:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           prodh	equ	0xFF4
  2461                           prodl	equ	0xFF3
  2462                           intcon	equ	0xFF2
  2463                           intcon3	equ	0xFF0
  2464                           wreg	equ	0xFE8
  2465                           indf2	equ	0xFDF
  2466                           postinc2	equ	0xFDE
  2467                           postdec2	equ	0xFDD
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           status	equ	0xFD8
  2471                           
  2472 ;; *************** function _initLCD *****************
  2473 ;; Defined at:
  2474 ;;		line 14 in file "lcd.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        1 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    6
  2495 ;; This function calls:
  2496 ;;		_lcdInst
  2497 ;; This function is called by:
  2498 ;;		_main
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text10
  2503  000CDE                     __ptext10:
  2504                           	opt stack 0
  2505  000CDE                     _initLCD:
  2506                           	opt stack 24
  2507                           
  2508                           ;lcd.c: 15: _delay((unsigned long)((15)*(10000000/4000.0)));
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;incstack = 0
  2512  000CDE  0E31               	movlw	49
  2513  000CE0  0100               	movlb	0	; () banked
  2514  000CE2  6F83               	movwf	??_initLCD& (0+255),b
  2515  000CE4  0EB2               	movlw	178
  2516  000CE6                     u1797:
  2517  000CE6  2EE8               	decfsz	wreg,f,c
  2518  000CE8  D7FE               	bra	u1797
  2519  000CEA  2F83               	decfsz	??_initLCD& (0+255),f,b
  2520  000CEC  D7FC               	bra	u1797
  2521  000CEE  F000               	nop	
  2522                           
  2523                           ;lcd.c: 16: lcdInst(0b00110011);
  2524  000CF0  0E33               	movlw	51
  2525  000CF2  EC3C  F007         	call	_lcdInst
  2526                           
  2527                           ;lcd.c: 17: lcdInst(0b00110010);
  2528  000CF6  0E32               	movlw	50
  2529  000CF8  EC3C  F007         	call	_lcdInst
  2530                           
  2531                           ;lcd.c: 18: lcdInst(0b00101000);
  2532  000CFC  0E28               	movlw	40
  2533  000CFE  EC3C  F007         	call	_lcdInst
  2534                           
  2535                           ;lcd.c: 19: lcdInst(0b00001111);
  2536  000D02  0E0F               	movlw	15
  2537  000D04  EC3C  F007         	call	_lcdInst
  2538                           
  2539                           ;lcd.c: 20: lcdInst(0b00000110);
  2540  000D08  0E06               	movlw	6
  2541  000D0A  EC3C  F007         	call	_lcdInst
  2542                           
  2543                           ;lcd.c: 21: lcdInst(0b00000001);
  2544  000D0E  0E01               	movlw	1
  2545  000D10  EC3C  F007         	call	_lcdInst
  2546                           
  2547                           ;lcd.c: 22: _delay((unsigned long)((15)*(10000000/4000.0)));
  2548  000D14  0E31               	movlw	49
  2549  000D16  0100               	movlb	0	; () banked
  2550  000D18  6F83               	movwf	??_initLCD& (0+255),b
  2551  000D1A  0EB2               	movlw	178
  2552  000D1C                     u1807:
  2553  000D1C  2EE8               	decfsz	wreg,f,c
  2554  000D1E  D7FE               	bra	u1807
  2555  000D20  2F83               	decfsz	??_initLCD& (0+255),f,b
  2556  000D22  D7FC               	bra	u1807
  2557  000D24  F000               	nop	
  2558  000D26  0012               	return		;funcret
  2559  000D28                     __end_of_initLCD:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           prodh	equ	0xFF4
  2566                           prodl	equ	0xFF3
  2567                           intcon	equ	0xFF2
  2568                           intcon3	equ	0xFF0
  2569                           wreg	equ	0xFE8
  2570                           indf2	equ	0xFDF
  2571                           postinc2	equ	0xFDE
  2572                           postdec2	equ	0xFDD
  2573                           fsr2h	equ	0xFDA
  2574                           fsr2l	equ	0xFD9
  2575                           status	equ	0xFD8
  2576                           
  2577 ;; *************** function _lcdInst *****************
  2578 ;; Defined at:
  2579 ;;		line 25 in file "lcd.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  data            1    wreg     unsigned char 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  data            1    2[BANK0 ] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      void 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;Total ram usage:        1 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    5
  2600 ;; This function calls:
  2601 ;;		_lcdNibble
  2602 ;; This function is called by:
  2603 ;;		_initLCD
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text11
  2609  000E78                     __ptext11:
  2610                           	opt stack 0
  2611  000E78                     _lcdInst:
  2612                           	opt stack 25
  2613                           
  2614                           ;incstack = 0
  2615                           ;lcdInst@data stored from wreg
  2616  000E78  0100               	movlb	0	; () banked
  2617  000E7A  6F82               	movwf	lcdInst@data& (0+255),b
  2618                           
  2619                           ;lcd.c: 26: LATDbits.LATD2 = 0;
  2620  000E7C  948C               	bcf	3980,2,c	;volatile
  2621                           
  2622                           ;lcd.c: 27: lcdNibble(data);
  2623  000E7E  0100               	movlb	0	; () banked
  2624  000E80  5182               	movf	lcdInst@data& (0+255),w,b
  2625  000E82  EC89  F005         	call	_lcdNibble
  2626  000E86  0012               	return		;funcret
  2627  000E88                     __end_of_lcdInst:
  2628                           	opt stack 0
  2629                           tblptru	equ	0xFF8
  2630                           tblptrh	equ	0xFF7
  2631                           tblptrl	equ	0xFF6
  2632                           tablat	equ	0xFF5
  2633                           prodh	equ	0xFF4
  2634                           prodl	equ	0xFF3
  2635                           intcon	equ	0xFF2
  2636                           intcon3	equ	0xFF0
  2637                           wreg	equ	0xFE8
  2638                           indf2	equ	0xFDF
  2639                           postinc2	equ	0xFDE
  2640                           postdec2	equ	0xFDD
  2641                           fsr2h	equ	0xFDA
  2642                           fsr2l	equ	0xFD9
  2643                           status	equ	0xFD8
  2644                           
  2645 ;; *************** function _lcdNibble *****************
  2646 ;; Defined at:
  2647 ;;		line 35 in file "lcd.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  data            1    wreg     unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  data            1    1[BANK0 ] unsigned char 
  2652 ;;  temp            1    0[BANK0 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        2 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    4
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_lcdInst
  2673 ;;		_putch
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text12
  2678  000B12                     __ptext12:
  2679                           	opt stack 0
  2680  000B12                     _lcdNibble:
  2681                           	opt stack 24
  2682                           
  2683                           ;incstack = 0
  2684                           ;lcdNibble@data stored from wreg
  2685  000B12  0100               	movlb	0	; () banked
  2686  000B14  6F81               	movwf	lcdNibble@data& (0+255),b
  2687                           
  2688                           ;lcd.c: 37: char temp = data & 0xF0;
  2689  000B16  0100               	movlb	0	; () banked
  2690  000B18  5181               	movf	lcdNibble@data& (0+255),w,b
  2691  000B1A  0BF0               	andlw	240
  2692  000B1C  0100               	movlb	0	; () banked
  2693  000B1E  6F80               	movwf	lcdNibble@temp& (0+255),b
  2694                           
  2695                           ;lcd.c: 38: LATD = LATD & 0x0F;
  2696  000B20  508C               	movf	3980,w,c	;volatile
  2697  000B22  0B0F               	andlw	15
  2698  000B24  6E8C               	movwf	3980,c	;volatile
  2699                           
  2700                           ;lcd.c: 39: LATD = temp | LATD;
  2701  000B26  0100               	movlb	0	; () banked
  2702  000B28  5180               	movf	lcdNibble@temp& (0+255),w,b
  2703  000B2A  108C               	iorwf	3980,w,c	;volatile
  2704  000B2C  6E8C               	movwf	3980,c	;volatile
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;lcd.c: 41: LATDbits.LATD3 = 0;
  2708  000B2E  968C               	bcf	3980,3,c	;volatile
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;lcd.c: 42: _delay((unsigned long)((25)*(10000000/4000000.0)));
  2712  000B30  0E14               	movlw	20
  2713  000B32                     u1817:
  2714  000B32  2EE8               	decfsz	wreg,f,c
  2715  000B34  D7FE               	bra	u1817
  2716  000B36  D000               	nop2	
  2717                           
  2718                           ;lcd.c: 43: LATDbits.LATD3 = 1;
  2719  000B38  868C               	bsf	3980,3,c	;volatile
  2720                           
  2721                           ;lcd.c: 44: _delay((unsigned long)((25)*(10000000/4000000.0)));
  2722  000B3A  0E14               	movlw	20
  2723  000B3C                     u1827:
  2724  000B3C  2EE8               	decfsz	wreg,f,c
  2725  000B3E  D7FE               	bra	u1827
  2726  000B40  D000               	nop2	
  2727                           
  2728                           ;lcd.c: 46: data = data << 4;
  2729  000B42  0100               	movlb	0	; () banked
  2730  000B44  3981               	swapf	lcdNibble@data& (0+255),w,b
  2731  000B46  0BF0               	andlw	240
  2732  000B48  0100               	movlb	0	; () banked
  2733  000B4A  6F81               	movwf	lcdNibble@data& (0+255),b
  2734                           
  2735                           ;lcd.c: 48: temp = data & 0xF0;
  2736  000B4C  0100               	movlb	0	; () banked
  2737  000B4E  5181               	movf	lcdNibble@data& (0+255),w,b
  2738  000B50  0BF0               	andlw	240
  2739  000B52  0100               	movlb	0	; () banked
  2740  000B54  6F80               	movwf	lcdNibble@temp& (0+255),b
  2741                           
  2742                           ;lcd.c: 49: LATD = LATD & 0x0F;
  2743  000B56  508C               	movf	3980,w,c	;volatile
  2744  000B58  0B0F               	andlw	15
  2745  000B5A  6E8C               	movwf	3980,c	;volatile
  2746                           
  2747                           ;lcd.c: 50: LATD = temp | LATD;
  2748  000B5C  0100               	movlb	0	; () banked
  2749  000B5E  5180               	movf	lcdNibble@temp& (0+255),w,b
  2750  000B60  108C               	iorwf	3980,w,c	;volatile
  2751  000B62  6E8C               	movwf	3980,c	;volatile
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  2755  000B64  968C               	bcf	3980,3,c	;volatile
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;lcd.c: 53: _delay((unsigned long)((25)*(10000000/4000000.0)));
  2759  000B66  0E14               	movlw	20
  2760  000B68                     u1837:
  2761  000B68  2EE8               	decfsz	wreg,f,c
  2762  000B6A  D7FE               	bra	u1837
  2763  000B6C  D000               	nop2	
  2764                           
  2765                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  2766  000B6E  868C               	bsf	3980,3,c	;volatile
  2767                           
  2768                           ;lcd.c: 55: _delay((unsigned long)((25)*(10000000/4000000.0)));
  2769  000B70  0E14               	movlw	20
  2770  000B72                     u1847:
  2771  000B72  2EE8               	decfsz	wreg,f,c
  2772  000B74  D7FE               	bra	u1847
  2773  000B76  D000               	nop2	
  2774  000B78  0012               	return		;funcret
  2775  000B7A                     __end_of_lcdNibble:
  2776                           	opt stack 0
  2777                           tblptru	equ	0xFF8
  2778                           tblptrh	equ	0xFF7
  2779                           tblptrl	equ	0xFF6
  2780                           tablat	equ	0xFF5
  2781                           prodh	equ	0xFF4
  2782                           prodl	equ	0xFF3
  2783                           intcon	equ	0xFF2
  2784                           intcon3	equ	0xFF0
  2785                           wreg	equ	0xFE8
  2786                           indf2	equ	0xFDF
  2787                           postinc2	equ	0xFDE
  2788                           postdec2	equ	0xFDD
  2789                           fsr2h	equ	0xFDA
  2790                           fsr2l	equ	0xFD9
  2791                           status	equ	0xFD8
  2792                           
  2793 ;; *************** function _I2C_Master_Read *****************
  2794 ;; Defined at:
  2795 ;;		line 53 in file "I2C.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  a               1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  a               1    1[BANK0 ] unsigned char 
  2800 ;;  temp            1    2[BANK0 ] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      unsigned char 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    5
  2817 ;; This function calls:
  2818 ;;		_I2C_Master_Wait
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text13
  2825  000DA4                     __ptext13:
  2826                           	opt stack 0
  2827  000DA4                     _I2C_Master_Read:
  2828                           	opt stack 25
  2829                           
  2830                           ;incstack = 0
  2831                           ;I2C_Master_Read@a stored from wreg
  2832  000DA4  0100               	movlb	0	; () banked
  2833  000DA6  6F81               	movwf	I2C_Master_Read@a& (0+255),b
  2834                           
  2835                           ;I2C.c: 55: unsigned char temp;
  2836                           ;I2C.c: 56: I2C_Master_Wait();
  2837  000DA8  EC2A  F007         	call	_I2C_Master_Wait	;wreg free
  2838                           
  2839                           ;I2C.c: 57: RCEN = 1;
  2840  000DAC  86C5               	bsf	4037,3,c	;volatile
  2841                           
  2842                           ;I2C.c: 58: I2C_Master_Wait();
  2843  000DAE  EC2A  F007         	call	_I2C_Master_Wait	;wreg free
  2844                           
  2845                           ;I2C.c: 59: temp = SSPBUF;
  2846  000DB2  CFC9 F082          	movff	4041,I2C_Master_Read@temp	;volatile
  2847                           
  2848                           ;I2C.c: 60: I2C_Master_Wait();
  2849  000DB6  EC2A  F007         	call	_I2C_Master_Wait	;wreg free
  2850                           
  2851                           ;I2C.c: 61: ACKDT = (a)?0:1;
  2852  000DBA  0100               	movlb	0	; () banked
  2853  000DBC  5181               	movf	I2C_Master_Read@a& (0+255),w,b
  2854  000DBE  0100               	movlb	0	; () banked
  2855  000DC0  A4D8               	btfss	status,2,c
  2856  000DC2  D002               	goto	u1070
  2857  000DC4  8AC5               	bsf	4037,5,c	;volatile
  2858  000DC6  D001               	goto	l1749
  2859  000DC8                     u1070:
  2860  000DC8  9AC5               	bcf	4037,5,c	;volatile
  2861  000DCA                     l1749:
  2862                           
  2863                           ;I2C.c: 62: ACKEN = 1;
  2864  000DCA  88C5               	bsf	4037,4,c	;volatile
  2865                           
  2866                           ;I2C.c: 63: return temp;
  2867  000DCC  0100               	movlb	0	; () banked
  2868  000DCE  5182               	movf	I2C_Master_Read@temp& (0+255),w,b
  2869  000DD0  0012               	return	
  2870  000DD2                     __end_of_I2C_Master_Read:
  2871                           	opt stack 0
  2872                           tblptru	equ	0xFF8
  2873                           tblptrh	equ	0xFF7
  2874                           tblptrl	equ	0xFF6
  2875                           tablat	equ	0xFF5
  2876                           prodh	equ	0xFF4
  2877                           prodl	equ	0xFF3
  2878                           intcon	equ	0xFF2
  2879                           intcon3	equ	0xFF0
  2880                           wreg	equ	0xFE8
  2881                           indf2	equ	0xFDF
  2882                           postinc2	equ	0xFDE
  2883                           postdec2	equ	0xFDD
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function _I2C_Master_Wait *****************
  2889 ;; Defined at:
  2890 ;;		line 24 in file "I2C.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;Total ram usage:        1 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:    4
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_I2C_Master_Start
  2915 ;;		_I2C_Master_Stop
  2916 ;;		_I2C_Master_Write
  2917 ;;		_I2C_Master_Read
  2918 ;;		_I2C_Master_RepeatedStart
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text14
  2923  000E54                     __ptext14:
  2924                           	opt stack 0
  2925  000E54                     _I2C_Master_Wait:
  2926                           	opt stack 24
  2927  000E54                     l184:
  2928  000E54  B4C7               	btfsc	4039,2,c	;volatile
  2929  000E56  D7FE               	goto	l184
  2930  000E58  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
  2931  000E5C  0E1F               	movlw	31
  2932  000E5E  0100               	movlb	0	; () banked
  2933  000E60  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
  2934  000E62  B4D8               	btfsc	status,2,c
  2935  000E64  0012               	return	
  2936  000E66  D7F6               	goto	l184
  2937  000E68                     __end_of_I2C_Master_Wait:
  2938                           	opt stack 0
  2939                           tblptru	equ	0xFF8
  2940                           tblptrh	equ	0xFF7
  2941                           tblptrl	equ	0xFF6
  2942                           tablat	equ	0xFF5
  2943                           prodh	equ	0xFF4
  2944                           prodl	equ	0xFF3
  2945                           intcon	equ	0xFF2
  2946                           intcon3	equ	0xFF0
  2947                           wreg	equ	0xFE8
  2948                           indf2	equ	0xFDF
  2949                           postinc2	equ	0xFDE
  2950                           postdec2	equ	0xFDD
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _I2C_Master_Init *****************
  2956 ;; Defined at:
  2957 ;;		line 13 in file "I2C.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  c               4   13[BANK0 ] const unsigned long 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        8 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    5
  2978 ;; This function calls:
  2979 ;;		___lldiv
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text15
  2986  000B7A                     __ptext15:
  2987                           	opt stack 0
  2988  000B7A                     _I2C_Master_Init:
  2989                           	opt stack 25
  2990                           
  2991                           ;I2C.c: 16: SSPSTAT = 0b00000000;
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;incstack = 0
  2995  000B7A  0E00               	movlw	0
  2996  000B7C  6EC7               	movwf	4039,c	;volatile
  2997                           
  2998                           ;I2C.c: 17: SSPCON1 = 0b00101000;
  2999  000B7E  0E28               	movlw	40
  3000  000B80  6EC6               	movwf	4038,c	;volatile
  3001                           
  3002                           ;I2C.c: 18: SSPCON2 = 0b00000000;
  3003  000B82  0E00               	movlw	0
  3004  000B84  6EC5               	movwf	4037,c	;volatile
  3005                           
  3006                           ;I2C.c: 19: SSPADD = (10000000/(4*c))-1;
  3007  000B86  0E80               	movlw	128
  3008  000B88  0100               	movlb	0	; () banked
  3009  000B8A  6F80               	movwf	___lldiv@dividend& (0+255),b
  3010  000B8C  0E96               	movlw	150
  3011  000B8E  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
  3012  000B90  0E98               	movlw	152
  3013  000B92  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
  3014  000B94  0E00               	movlw	0
  3015  000B96  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
  3016  000B98  C08D  F091         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  3017  000B9C  C08E  F092         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  3018  000BA0  C08F  F093         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  3019  000BA4  C090  F094         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  3020  000BA8  0E02               	movlw	2
  3021  000BAA                     u1045:
  3022  000BAA  90D8               	bcf	status,0,c
  3023  000BAC  0100               	movlb	0	; () banked
  3024  000BAE  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
  3025  000BB0  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
  3026  000BB2  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
  3027  000BB4  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
  3028  000BB6  2EE8               	decfsz	wreg,f,c
  3029  000BB8  D7F8               	goto	u1045
  3030  000BBA  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
  3031  000BBE  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3032  000BC2  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3033  000BC6  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3034  000BCA  ECEF  F004         	call	___lldiv	;wreg free
  3035  000BCE  0100               	movlb	0	; () banked
  3036  000BD0  0580               	decf	?___lldiv& (0+255),w,b
  3037  000BD2  6EC8               	movwf	4040,c	;volatile
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;I2C.c: 20: TRISC3 = 1;
  3041  000BD4  8694               	bsf	3988,3,c	;volatile
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;I2C.c: 21: TRISC4 = 1;
  3045  000BD6  8894               	bsf	3988,4,c	;volatile
  3046                           
  3047                           ; BSR set to: 0
  3048  000BD8  0012               	return		;funcret
  3049  000BDA                     __end_of_I2C_Master_Init:
  3050                           	opt stack 0
  3051                           tblptru	equ	0xFF8
  3052                           tblptrh	equ	0xFF7
  3053                           tblptrl	equ	0xFF6
  3054                           tablat	equ	0xFF5
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           intcon	equ	0xFF2
  3058                           intcon3	equ	0xFF0
  3059                           wreg	equ	0xFE8
  3060                           indf2	equ	0xFDF
  3061                           postinc2	equ	0xFDE
  3062                           postdec2	equ	0xFDD
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function ___lldiv *****************
  3068 ;; Defined at:
  3069 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lldiv.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  dividend        4    0[BANK0 ] unsigned long 
  3072 ;;  divisor         4    4[BANK0 ] unsigned long 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  quotient        4    8[BANK0 ] unsigned long 
  3075 ;;  counter         1   12[BANK0 ] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  4    0[BANK0 ] unsigned long 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:       13 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    4
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_I2C_Master_Init
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text16
  3100  0009DE                     __ptext16:
  3101                           	opt stack 0
  3102  0009DE                     ___lldiv:
  3103                           	opt stack 25
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;incstack = 0
  3107  0009DE  0E00               	movlw	0
  3108  0009E0  0100               	movlb	0	; () banked
  3109  0009E2  6F88               	movwf	___lldiv@quotient& (0+255),b
  3110  0009E4  0E00               	movlw	0
  3111  0009E6  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
  3112  0009E8  0E00               	movlw	0
  3113  0009EA  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
  3114  0009EC  0E00               	movlw	0
  3115  0009EE  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
  3116                           
  3117                           ; BSR set to: 0
  3118  0009F0  0100               	movlb	0	; () banked
  3119  0009F2  5184               	movf	___lldiv@divisor& (0+255),w,b
  3120  0009F4  0100               	movlb	0	; () banked
  3121  0009F6  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  3122  0009F8  0100               	movlb	0	; () banked
  3123  0009FA  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  3124  0009FC  0100               	movlb	0	; () banked
  3125  0009FE  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  3126  000A00  B4D8               	btfsc	status,2,c
  3127  000A02  D042               	goto	l611
  3128                           
  3129                           ; BSR set to: 0
  3130  000A04  0E01               	movlw	1
  3131  000A06  0100               	movlb	0	; () banked
  3132  000A08  6F8C               	movwf	___lldiv@counter& (0+255),b
  3133  000A0A  D008               	goto	l1619
  3134  000A0C                     l1617:
  3135                           
  3136                           ; BSR set to: 0
  3137  000A0C  0100               	movlb	0	; () banked
  3138  000A0E  90D8               	bcf	status,0,c
  3139  000A10  3784               	rlcf	___lldiv@divisor& (0+255),f,b
  3140  000A12  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  3141  000A14  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  3142  000A16  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  3143  000A18  0100               	movlb	0	; () banked
  3144  000A1A  2B8C               	incf	___lldiv@counter& (0+255),f,b
  3145  000A1C                     l1619:
  3146                           
  3147                           ; BSR set to: 0
  3148  000A1C  0100               	movlb	0	; () banked
  3149  000A1E  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  3150  000A20  D7F5               	goto	l1617
  3151  000A22                     l1621:
  3152                           
  3153                           ; BSR set to: 0
  3154  000A22  0100               	movlb	0	; () banked
  3155  000A24  90D8               	bcf	status,0,c
  3156  000A26  3788               	rlcf	___lldiv@quotient& (0+255),f,b
  3157  000A28  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  3158  000A2A  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  3159  000A2C  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  3160                           
  3161                           ; BSR set to: 0
  3162  000A2E  0100               	movlb	0	; () banked
  3163  000A30  5184               	movf	___lldiv@divisor& (0+255),w,b
  3164  000A32  0100               	movlb	0	; () banked
  3165  000A34  5D80               	subwf	___lldiv@dividend& (0+255),w,b
  3166  000A36  0100               	movlb	0	; () banked
  3167  000A38  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3168  000A3A  0100               	movlb	0	; () banked
  3169  000A3C  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  3170  000A3E  0100               	movlb	0	; () banked
  3171  000A40  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3172  000A42  0100               	movlb	0	; () banked
  3173  000A44  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  3174  000A46  0100               	movlb	0	; () banked
  3175  000A48  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3176  000A4A  0100               	movlb	0	; () banked
  3177  000A4C  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  3178  000A4E  A0D8               	btfss	status,0,c
  3179  000A50  D012               	goto	l1629
  3180                           
  3181                           ; BSR set to: 0
  3182  000A52  0100               	movlb	0	; () banked
  3183  000A54  5184               	movf	___lldiv@divisor& (0+255),w,b
  3184  000A56  0100               	movlb	0	; () banked
  3185  000A58  5F80               	subwf	___lldiv@dividend& (0+255),f,b
  3186  000A5A  0100               	movlb	0	; () banked
  3187  000A5C  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  3188  000A5E  0100               	movlb	0	; () banked
  3189  000A60  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  3190  000A62  0100               	movlb	0	; () banked
  3191  000A64  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  3192  000A66  0100               	movlb	0	; () banked
  3193  000A68  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  3194  000A6A  0100               	movlb	0	; () banked
  3195  000A6C  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  3196  000A6E  0100               	movlb	0	; () banked
  3197  000A70  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  3198                           
  3199                           ; BSR set to: 0
  3200  000A72  0100               	movlb	0	; () banked
  3201  000A74  8188               	bsf	___lldiv@quotient& (0+255),0,b
  3202  000A76                     l1629:
  3203                           
  3204                           ; BSR set to: 0
  3205  000A76  0100               	movlb	0	; () banked
  3206  000A78  90D8               	bcf	status,0,c
  3207  000A7A  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  3208  000A7C  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  3209  000A7E  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  3210  000A80  3384               	rrcf	___lldiv@divisor& (0+255),f,b
  3211                           
  3212                           ; BSR set to: 0
  3213  000A82  0100               	movlb	0	; () banked
  3214  000A84  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
  3215  000A86  D7CD               	goto	l1621
  3216  000A88                     l611:
  3217                           
  3218                           ; BSR set to: 0
  3219  000A88  C088  F080         	movff	___lldiv@quotient,?___lldiv
  3220  000A8C  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
  3221  000A90  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
  3222  000A94  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
  3223                           
  3224                           ; BSR set to: 0
  3225  000A98  0012               	return		;funcret
  3226  000A9A                     __end_of___lldiv:
  3227                           	opt stack 0
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           prodh	equ	0xFF4
  3233                           prodl	equ	0xFF3
  3234                           intcon	equ	0xFF2
  3235                           intcon3	equ	0xFF0
  3236                           wreg	equ	0xFE8
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           postdec2	equ	0xFDD
  3240                           fsr2h	equ	0xFDA
  3241                           fsr2l	equ	0xFD9
  3242                           status	equ	0xFD8
  3243                           
  3244 ;; *************** function _keypressed *****************
  3245 ;; Defined at:
  3246 ;;		line 133 in file "main.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  i               1   62[COMRAM] unsigned char 
  3251 ;;  i               1   61[COMRAM] unsigned char 
  3252 ;;  i               1   60[COMRAM] unsigned char 
  3253 ;;  i               1   59[COMRAM] unsigned char 
  3254 ;;  i               1   58[COMRAM] unsigned char 
  3255 ;;  i               1   57[COMRAM] unsigned char 
  3256 ;;  i               1   56[COMRAM] unsigned char 
  3257 ;;  i               1   55[COMRAM] unsigned char 
  3258 ;;  i               1   54[COMRAM] unsigned char 
  3259 ;;  i               1   53[COMRAM] unsigned char 
  3260 ;;  i               1   63[COMRAM] unsigned char 
  3261 ;;  keypress_tem    1   64[COMRAM] unsigned char 
  3262 ;;  keypress        1   52[COMRAM] unsigned char 
  3263 ;;  tot             2   50[COMRAM] int 
  3264 ;;  operation_ti    2   48[COMRAM] int 
  3265 ;;  tin_can_labe    2   46[COMRAM] int 
  3266 ;;  tin_can         2   44[COMRAM] int 
  3267 ;;  pop_can_tab     2   42[COMRAM] int 
  3268 ;;  pop_can         2   40[COMRAM] int 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:       40 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		i2_initLCD
  3287 ;;		i2_lcdInst
  3288 ;;		i2_printf
  3289 ;;		i2_putch
  3290 ;; This function is called by:
  3291 ;;		Interrupt level 2
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	intcode
  3296  000008                     __pintcode:
  3297                           	opt stack 0
  3298  000008                     _keypressed:
  3299                           	opt stack 24
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;incstack = 0
  3303  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3304  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           prodh	equ	0xFF4
  3310                           prodl	equ	0xFF3
  3311                           intcon	equ	0xFF2
  3312                           intcon3	equ	0xFF0
  3313                           wreg	equ	0xFE8
  3314                           indf2	equ	0xFDF
  3315                           postinc2	equ	0xFDE
  3316                           postdec2	equ	0xFDD
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           
  3321                           	psect	intcode_body
  3322  000012                     __pintcode_body:
  3323                           	opt stack 24
  3324  000012                     int_func:
  3325                           	opt stack 24
  3326  000012  0006               	pop		; remove dummy address from shadow register refresh
  3327  000014  CFFA F01B          	movff	pclath,??_keypressed+1
  3328  000018  CFFB F01C          	movff	pclatu,??_keypressed+2
  3329  00001C  CFE9 F01D          	movff	fsr0l,??_keypressed+3
  3330  000020  CFEA F01E          	movff	fsr0h,??_keypressed+4
  3331  000024  CFE1 F01F          	movff	fsr1l,??_keypressed+5
  3332  000028  CFE2 F020          	movff	fsr1h,??_keypressed+6
  3333  00002C  CFD9 F021          	movff	fsr2l,??_keypressed+7
  3334  000030  CFDA F022          	movff	fsr2h,??_keypressed+8
  3335  000034  CFF3 F023          	movff	prodl,??_keypressed+9
  3336  000038  CFF4 F024          	movff	prodh,??_keypressed+10
  3337  00003C  CFF6 F025          	movff	tblptrl,??_keypressed+11
  3338  000040  CFF7 F026          	movff	tblptrh,??_keypressed+12
  3339  000044  CFF8 F027          	movff	tblptru,??_keypressed+13
  3340  000048  CFF5 F028          	movff	tablat,??_keypressed+14
  3341                           
  3342                           ;main.c: 134: int pop_can = 0x1;
  3343  00004C  0E00               	movlw	0
  3344  00004E  6E2A               	movwf	keypressed@pop_can+1,c
  3345  000050  0E01               	movlw	1
  3346  000052  6E29               	movwf	keypressed@pop_can,c
  3347                           
  3348                           ;main.c: 135: int pop_can_tab = 0x2;
  3349  000054  0E00               	movlw	0
  3350  000056  6E2C               	movwf	keypressed@pop_can_tab+1,c
  3351  000058  0E02               	movlw	2
  3352  00005A  6E2B               	movwf	keypressed@pop_can_tab,c
  3353                           
  3354                           ;main.c: 136: int tin_can = 0x3;
  3355  00005C  0E00               	movlw	0
  3356  00005E  6E2E               	movwf	keypressed@tin_can+1,c
  3357  000060  0E03               	movlw	3
  3358  000062  6E2D               	movwf	keypressed@tin_can,c
  3359                           
  3360                           ;main.c: 137: int tin_can_label = 0x4;
  3361  000064  0E00               	movlw	0
  3362  000066  6E30               	movwf	keypressed@tin_can_label+1,c
  3363  000068  0E04               	movlw	4
  3364  00006A  6E2F               	movwf	keypressed@tin_can_label,c
  3365                           
  3366                           ;main.c: 138: int operation_time = 0x286;
  3367  00006C  0E02               	movlw	2
  3368  00006E  6E32               	movwf	keypressed@operation_time+1,c
  3369  000070  0E86               	movlw	134
  3370  000072  6E31               	movwf	keypressed@operation_time,c
  3371                           
  3372                           ;main.c: 139: int tot = 0x10;
  3373  000074  0E00               	movlw	0
  3374  000076  6E34               	movwf	keypressed@tot+1,c
  3375  000078  0E10               	movlw	16
  3376  00007A  6E33               	movwf	keypressed@tot,c
  3377                           
  3378                           ;main.c: 141: if(INT1IF){
  3379  00007C  A0F0               	btfss	intcon3,0,c	;volatile
  3380  00007E  D156               	goto	i2l150
  3381                           
  3382                           ;main.c: 142: lcdInst(0b11000000);;
  3383  000080  0EC0               	movlw	192
  3384  000082  EC4A  F007         	call	i2_lcdInst
  3385                           
  3386                           ;main.c: 143: unsigned char keypress = (PORTB & 0xF0) >> 4;
  3387  000086  3881               	swapf	3969,w,c	;volatile
  3388  000088  0B0F               	andlw	15
  3389  00008A  0B0F               	andlw	15
  3390  00008C  6E35               	movwf	keypressed@keypress,c
  3391                           
  3392                           ;main.c: 144: putch(keys[keypress]);
  3393  00008E  5035               	movf	keypressed@keypress,w,c
  3394  000090  0D01               	mullw	1
  3395  000092  0EFD               	movlw	low _keys
  3396  000094  24F3               	addwf	prodl,w,c
  3397  000096  6EF6               	movwf	tblptrl,c
  3398  000098  0EFE               	movlw	high _keys
  3399  00009A  20F4               	addwfc	prodh,w,c
  3400  00009C  6EF7               	movwf	tblptrh,c
  3401  00009E                     	if	0	;There are less than 3 active tblptr bytes
  3402  00009E                     	endif
  3403  00009E  0008               	tblrd		*
  3404  0000A0  50F5               	movf	tablat,w,c
  3405  0000A2  EC44  F007         	call	i2_putch
  3406                           
  3407                           ;main.c: 145: char keypress_temp = keys[keypress];
  3408  0000A6  5035               	movf	keypressed@keypress,w,c
  3409  0000A8  0D01               	mullw	1
  3410  0000AA  0EFD               	movlw	low _keys
  3411  0000AC  24F3               	addwf	prodl,w,c
  3412  0000AE  6EF6               	movwf	tblptrl,c
  3413  0000B0  0EFE               	movlw	high _keys
  3414  0000B2  20F4               	addwfc	prodh,w,c
  3415  0000B4  6EF7               	movwf	tblptrh,c
  3416  0000B6                     	if	0	;There are less than 3 active tblptr bytes
  3417  0000B6                     	endif
  3418  0000B6  0008               	tblrd		*
  3419  0000B8  CFF5 F041          	movff	tablat,keypressed@keypress_temp
  3420                           
  3421                           ;main.c: 146: if (keypress_temp == 0b01000001){
  3422  0000BC  0E41               	movlw	65
  3423  0000BE  1841               	xorwf	keypressed@keypress_temp,w,c
  3424  0000C0  A4D8               	btfss	status,2,c
  3425  0000C2  D02C               	goto	i2l2045
  3426                           
  3427                           ;main.c: 147: initLCD();
  3428  0000C4  EC94  F006         	call	i2_initLCD	;wreg free
  3429                           
  3430                           ;main.c: 148: printf("Total Sorted: %02x", tot);
  3431  0000C8  0E1D               	movlw	low STR_7
  3432  0000CA  6E08               	movwf	i2printf@f,c
  3433  0000CC  0EFF               	movlw	high STR_7
  3434  0000CE  6E09               	movwf	i2printf@f+1,c
  3435  0000D0  C033  F00A         	movff	keypressed@tot,?i2_printf+2
  3436  0000D4  C034  F00B         	movff	keypressed@tot+1,?i2_printf+3
  3437  0000D8  ECF5  F003         	call	i2_printf	;wreg free
  3438                           
  3439                           ;main.c: 149: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3440  0000DC  0E00               	movlw	0
  3441  0000DE  6E36               	movwf	keypressed@i,c
  3442  0000E0                     i2l2027:
  3443  0000E0  0E63               	movlw	99
  3444  0000E2  6436               	cpfsgt	keypressed@i,c
  3445  0000E4  D001               	goto	i2l2031
  3446  0000E6  D00A               	goto	i2l2035
  3447  0000E8                     i2l2031:
  3448  0000E8  0E21               	movlw	33
  3449  0000EA  6E1A               	movwf	??_keypressed& (0+255),c
  3450  0000EC  0E76               	movlw	118
  3451  0000EE                     i2u185_47:
  3452  0000EE  2EE8               	decfsz	wreg,f,c
  3453  0000F0  D7FE               	bra	i2u185_47
  3454  0000F2  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3455  0000F4  D7FC               	bra	i2u185_47
  3456  0000F6  D000               	nop2	
  3457  0000F8  2A36               	incf	keypressed@i,f,c
  3458  0000FA  D7F2               	goto	i2l2027
  3459  0000FC                     i2l2035:
  3460                           
  3461                           ;main.c: 150: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3462  0000FC  0E00               	movlw	0
  3463  0000FE  6E37               	movwf	keypressed@i_312,c
  3464  000100                     i2l2037:
  3465  000100  0E63               	movlw	99
  3466  000102  6437               	cpfsgt	keypressed@i_312,c
  3467  000104  D001               	goto	i2l2041
  3468  000106  D0FE               	goto	i2l2167
  3469  000108                     i2l2041:
  3470  000108  0E21               	movlw	33
  3471  00010A  6E1A               	movwf	??_keypressed& (0+255),c
  3472  00010C  0E76               	movlw	118
  3473  00010E                     i2u186_47:
  3474  00010E  2EE8               	decfsz	wreg,f,c
  3475  000110  D7FE               	bra	i2u186_47
  3476  000112  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3477  000114  D7FC               	bra	i2u186_47
  3478  000116  D000               	nop2	
  3479  000118  2A37               	incf	keypressed@i_312,f,c
  3480  00011A  D7F2               	goto	i2l2037
  3481  00011C                     i2l2045:
  3482                           
  3483                           ;main.c: 152: else if(keypress_temp == 0b01000010){
  3484  00011C  0E42               	movlw	66
  3485  00011E  1841               	xorwf	keypressed@keypress_temp,w,c
  3486  000120  A4D8               	btfss	status,2,c
  3487  000122  D039               	goto	i2l2073
  3488                           
  3489                           ;main.c: 153: initLCD();
  3490  000124  EC94  F006         	call	i2_initLCD	;wreg free
  3491                           
  3492                           ;main.c: 154: printf("With Tab: %02x",pop_can_tab);
  3493  000128  0E97               	movlw	low STR_8
  3494  00012A  6E08               	movwf	i2printf@f,c
  3495  00012C  0EFF               	movlw	high STR_8
  3496  00012E  6E09               	movwf	i2printf@f+1,c
  3497  000130  C02B  F00A         	movff	keypressed@pop_can_tab,?i2_printf+2
  3498  000134  C02C  F00B         	movff	keypressed@pop_can_tab+1,?i2_printf+3
  3499  000138  ECF5  F003         	call	i2_printf	;wreg free
  3500                           
  3501                           ;main.c: 155: lcdInst(0b11000000);;
  3502  00013C  0EC0               	movlw	192
  3503  00013E  EC4A  F007         	call	i2_lcdInst
  3504                           
  3505                           ;main.c: 156: printf("No Tab: %02x",pop_can);
  3506  000142  0EE0               	movlw	low STR_9
  3507  000144  6E08               	movwf	i2printf@f,c
  3508  000146  0EFF               	movlw	high STR_9
  3509  000148  6E09               	movwf	i2printf@f+1,c
  3510  00014A  C029  F00A         	movff	keypressed@pop_can,?i2_printf+2
  3511  00014E  C02A  F00B         	movff	keypressed@pop_can+1,?i2_printf+3
  3512  000152  ECF5  F003         	call	i2_printf	;wreg free
  3513                           
  3514                           ;main.c: 157: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3515  000156  0E00               	movlw	0
  3516  000158  6E38               	movwf	keypressed@i_315,c
  3517  00015A                     i2l2055:
  3518  00015A  0E63               	movlw	99
  3519  00015C  6438               	cpfsgt	keypressed@i_315,c
  3520  00015E  D001               	goto	i2l2059
  3521  000160  D00A               	goto	i2l2063
  3522  000162                     i2l2059:
  3523  000162  0E21               	movlw	33
  3524  000164  6E1A               	movwf	??_keypressed& (0+255),c
  3525  000166  0E76               	movlw	118
  3526  000168                     i2u187_47:
  3527  000168  2EE8               	decfsz	wreg,f,c
  3528  00016A  D7FE               	bra	i2u187_47
  3529  00016C  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3530  00016E  D7FC               	bra	i2u187_47
  3531  000170  D000               	nop2	
  3532  000172  2A38               	incf	keypressed@i_315,f,c
  3533  000174  D7F2               	goto	i2l2055
  3534  000176                     i2l2063:
  3535                           
  3536                           ;main.c: 158: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3537  000176  0E00               	movlw	0
  3538  000178  6E39               	movwf	keypressed@i_316,c
  3539  00017A                     i2l2065:
  3540  00017A  0E63               	movlw	99
  3541  00017C  6439               	cpfsgt	keypressed@i_316,c
  3542  00017E  D001               	goto	i2l2069
  3543  000180  D0C1               	goto	i2l2167
  3544  000182                     i2l2069:
  3545  000182  0E21               	movlw	33
  3546  000184  6E1A               	movwf	??_keypressed& (0+255),c
  3547  000186  0E76               	movlw	118
  3548  000188                     i2u188_47:
  3549  000188  2EE8               	decfsz	wreg,f,c
  3550  00018A  D7FE               	bra	i2u188_47
  3551  00018C  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3552  00018E  D7FC               	bra	i2u188_47
  3553  000190  D000               	nop2	
  3554  000192  2A39               	incf	keypressed@i_316,f,c
  3555  000194  D7F2               	goto	i2l2065
  3556  000196                     i2l2073:
  3557                           
  3558                           ;main.c: 160: else if(keypress_temp == 0b01000011){
  3559  000196  0E43               	movlw	67
  3560  000198  1841               	xorwf	keypressed@keypress_temp,w,c
  3561  00019A  A4D8               	btfss	status,2,c
  3562  00019C  D039               	goto	i2l2101
  3563                           
  3564                           ;main.c: 161: initLCD();
  3565  00019E  EC94  F006         	call	i2_initLCD	;wreg free
  3566                           
  3567                           ;main.c: 162: printf("With Label: %02x",tin_can);
  3568  0001A2  0E86               	movlw	low STR_10
  3569  0001A4  6E08               	movwf	i2printf@f,c
  3570  0001A6  0EFF               	movlw	high STR_10
  3571  0001A8  6E09               	movwf	i2printf@f+1,c
  3572  0001AA  C02D  F00A         	movff	keypressed@tin_can,?i2_printf+2
  3573  0001AE  C02E  F00B         	movff	keypressed@tin_can+1,?i2_printf+3
  3574  0001B2  ECF5  F003         	call	i2_printf	;wreg free
  3575                           
  3576                           ;main.c: 163: lcdInst(0b11000000);;
  3577  0001B6  0EC0               	movlw	192
  3578  0001B8  EC4A  F007         	call	i2_lcdInst
  3579                           
  3580                           ;main.c: 164: printf("No Label: %02x",tin_can_label);
  3581  0001BC  0EA6               	movlw	low STR_11
  3582  0001BE  6E08               	movwf	i2printf@f,c
  3583  0001C0  0EFF               	movlw	high STR_11
  3584  0001C2  6E09               	movwf	i2printf@f+1,c
  3585  0001C4  C02F  F00A         	movff	keypressed@tin_can_label,?i2_printf+2
  3586  0001C8  C030  F00B         	movff	keypressed@tin_can_label+1,?i2_printf+3
  3587  0001CC  ECF5  F003         	call	i2_printf	;wreg free
  3588                           
  3589                           ;main.c: 165: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3590  0001D0  0E00               	movlw	0
  3591  0001D2  6E3A               	movwf	keypressed@i_319,c
  3592  0001D4                     i2l2083:
  3593  0001D4  0E63               	movlw	99
  3594  0001D6  643A               	cpfsgt	keypressed@i_319,c
  3595  0001D8  D001               	goto	i2l2087
  3596  0001DA  D00A               	goto	i2l2091
  3597  0001DC                     i2l2087:
  3598  0001DC  0E21               	movlw	33
  3599  0001DE  6E1A               	movwf	??_keypressed& (0+255),c
  3600  0001E0  0E76               	movlw	118
  3601  0001E2                     i2u189_47:
  3602  0001E2  2EE8               	decfsz	wreg,f,c
  3603  0001E4  D7FE               	bra	i2u189_47
  3604  0001E6  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3605  0001E8  D7FC               	bra	i2u189_47
  3606  0001EA  D000               	nop2	
  3607  0001EC  2A3A               	incf	keypressed@i_319,f,c
  3608  0001EE  D7F2               	goto	i2l2083
  3609  0001F0                     i2l2091:
  3610                           
  3611                           ;main.c: 166: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3612  0001F0  0E00               	movlw	0
  3613  0001F2  6E3B               	movwf	keypressed@i_320,c
  3614  0001F4                     i2l2093:
  3615  0001F4  0E63               	movlw	99
  3616  0001F6  643B               	cpfsgt	keypressed@i_320,c
  3617  0001F8  D001               	goto	i2l2097
  3618  0001FA  D084               	goto	i2l2167
  3619  0001FC                     i2l2097:
  3620  0001FC  0E21               	movlw	33
  3621  0001FE  6E1A               	movwf	??_keypressed& (0+255),c
  3622  000200  0E76               	movlw	118
  3623  000202                     i2u190_47:
  3624  000202  2EE8               	decfsz	wreg,f,c
  3625  000204  D7FE               	bra	i2u190_47
  3626  000206  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3627  000208  D7FC               	bra	i2u190_47
  3628  00020A  D000               	nop2	
  3629  00020C  2A3B               	incf	keypressed@i_320,f,c
  3630  00020E  D7F2               	goto	i2l2093
  3631  000210                     i2l2101:
  3632                           
  3633                           ;main.c: 168: else if(keypress_temp == 0b01000100){
  3634  000210  0E44               	movlw	68
  3635  000212  1841               	xorwf	keypressed@keypress_temp,w,c
  3636  000214  A4D8               	btfss	status,2,c
  3637  000216  D02C               	goto	i2l2127
  3638                           
  3639                           ;main.c: 169: initLCD();
  3640  000218  EC94  F006         	call	i2_initLCD	;wreg free
  3641                           
  3642                           ;main.c: 170: printf("Time: %02x s", operation_time);
  3643  00021C  0ED3               	movlw	low STR_12
  3644  00021E  6E08               	movwf	i2printf@f,c
  3645  000220  0EFF               	movlw	high STR_12
  3646  000222  6E09               	movwf	i2printf@f+1,c
  3647  000224  C031  F00A         	movff	keypressed@operation_time,?i2_printf+2
  3648  000228  C032  F00B         	movff	keypressed@operation_time+1,?i2_printf+3
  3649  00022C  ECF5  F003         	call	i2_printf	;wreg free
  3650                           
  3651                           ;main.c: 171: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3652  000230  0E00               	movlw	0
  3653  000232  6E3C               	movwf	keypressed@i_322,c
  3654  000234                     i2l2109:
  3655  000234  0E63               	movlw	99
  3656  000236  643C               	cpfsgt	keypressed@i_322,c
  3657  000238  D001               	goto	i2l2113
  3658  00023A  D00A               	goto	i2l2117
  3659  00023C                     i2l2113:
  3660  00023C  0E21               	movlw	33
  3661  00023E  6E1A               	movwf	??_keypressed& (0+255),c
  3662  000240  0E76               	movlw	118
  3663  000242                     i2u191_47:
  3664  000242  2EE8               	decfsz	wreg,f,c
  3665  000244  D7FE               	bra	i2u191_47
  3666  000246  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3667  000248  D7FC               	bra	i2u191_47
  3668  00024A  D000               	nop2	
  3669  00024C  2A3C               	incf	keypressed@i_322,f,c
  3670  00024E  D7F2               	goto	i2l2109
  3671  000250                     i2l2117:
  3672                           
  3673                           ;main.c: 172: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3674  000250  0E00               	movlw	0
  3675  000252  6E3D               	movwf	keypressed@i_323,c
  3676  000254                     i2l2119:
  3677  000254  0E63               	movlw	99
  3678  000256  643D               	cpfsgt	keypressed@i_323,c
  3679  000258  D001               	goto	i2l2123
  3680  00025A  D054               	goto	i2l2167
  3681  00025C                     i2l2123:
  3682  00025C  0E21               	movlw	33
  3683  00025E  6E1A               	movwf	??_keypressed& (0+255),c
  3684  000260  0E76               	movlw	118
  3685  000262                     i2u192_47:
  3686  000262  2EE8               	decfsz	wreg,f,c
  3687  000264  D7FE               	bra	i2u192_47
  3688  000266  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3689  000268  D7FC               	bra	i2u192_47
  3690  00026A  D000               	nop2	
  3691  00026C  2A3D               	incf	keypressed@i_323,f,c
  3692  00026E  D7F2               	goto	i2l2119
  3693  000270                     i2l2127:
  3694                           
  3695                           ;main.c: 174: else if(keypress_temp == '#'){
  3696  000270  0E23               	movlw	35
  3697  000272  1841               	xorwf	keypressed@keypress_temp,w,c
  3698  000274  A4D8               	btfss	status,2,c
  3699  000276  D036               	goto	i2l2159
  3700                           
  3701                           ;main.c: 175: initLCD();
  3702  000278  EC94  F006         	call	i2_initLCD	;wreg free
  3703                           
  3704                           ;main.c: 176: printf("Sorting");
  3705  00027C  0EF7               	movlw	low STR_13
  3706  00027E  6E08               	movwf	i2printf@f,c
  3707  000280  0EFF               	movlw	high STR_13
  3708  000282  6E09               	movwf	i2printf@f+1,c
  3709  000284  ECF5  F003         	call	i2_printf	;wreg free
  3710                           
  3711                           ;main.c: 177: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3712  000288  0E00               	movlw	0
  3713  00028A  6E3E               	movwf	keypressed@i_325,c
  3714  00028C                     i2l2135:
  3715  00028C  0E63               	movlw	99
  3716  00028E  643E               	cpfsgt	keypressed@i_325,c
  3717  000290  D001               	goto	i2l2139
  3718  000292  D00A               	goto	i2l2143
  3719  000294                     i2l2139:
  3720  000294  0E21               	movlw	33
  3721  000296  6E1A               	movwf	??_keypressed& (0+255),c
  3722  000298  0E76               	movlw	118
  3723  00029A                     i2u193_47:
  3724  00029A  2EE8               	decfsz	wreg,f,c
  3725  00029C  D7FE               	bra	i2u193_47
  3726  00029E  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3727  0002A0  D7FC               	bra	i2u193_47
  3728  0002A2  D000               	nop2	
  3729  0002A4  2A3E               	incf	keypressed@i_325,f,c
  3730  0002A6  D7F2               	goto	i2l2135
  3731  0002A8                     i2l2143:
  3732                           
  3733                           ;main.c: 178: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3734  0002A8  0E00               	movlw	0
  3735  0002AA  6E3F               	movwf	keypressed@i_326,c
  3736  0002AC                     i2l2145:
  3737  0002AC  0E63               	movlw	99
  3738  0002AE  643F               	cpfsgt	keypressed@i_326,c
  3739  0002B0  D001               	goto	i2l2149
  3740  0002B2  D00A               	goto	i2l2153
  3741  0002B4                     i2l2149:
  3742  0002B4  0E21               	movlw	33
  3743  0002B6  6E1A               	movwf	??_keypressed& (0+255),c
  3744  0002B8  0E76               	movlw	118
  3745  0002BA                     i2u194_47:
  3746  0002BA  2EE8               	decfsz	wreg,f,c
  3747  0002BC  D7FE               	bra	i2u194_47
  3748  0002BE  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3749  0002C0  D7FC               	bra	i2u194_47
  3750  0002C2  D000               	nop2	
  3751  0002C4  2A3F               	incf	keypressed@i_326,f,c
  3752  0002C6  D7F2               	goto	i2l2145
  3753  0002C8                     i2l2153:
  3754                           
  3755                           ;main.c: 179: initLCD();
  3756  0002C8  EC94  F006         	call	i2_initLCD	;wreg free
  3757                           
  3758                           ;main.c: 180: printf("Completed");
  3759  0002CC  0EED               	movlw	low STR_14
  3760  0002CE  6E08               	movwf	i2printf@f,c
  3761  0002D0  0EFF               	movlw	high STR_14
  3762  0002D2  6E09               	movwf	i2printf@f+1,c
  3763  0002D4  ECF5  F003         	call	i2_printf	;wreg free
  3764                           
  3765                           ;main.c: 181: passed = 1;
  3766  0002D8  0E00               	movlw	0
  3767  0002DA  0100               	movlb	0	; () banked
  3768  0002DC  6FAB               	movwf	(_passed+1)& (0+255),b
  3769  0002DE  0E01               	movlw	1
  3770  0002E0  6FAA               	movwf	_passed& (0+255),b
  3771                           
  3772                           ;main.c: 182: }
  3773  0002E2  D010               	goto	i2l2167
  3774  0002E4                     i2l2159:
  3775                           
  3776                           ;main.c: 183: else if(keypress_temp == '0'){
  3777  0002E4  0E30               	movlw	48
  3778  0002E6  1841               	xorwf	keypressed@keypress_temp,w,c
  3779  0002E8  A4D8               	btfss	status,2,c
  3780  0002EA  D004               	goto	i2l2163
  3781                           
  3782                           ;main.c: 184: initLCD();
  3783  0002EC  EC94  F006         	call	i2_initLCD	;wreg free
  3784  0002F0  00FF               	reset		;# 
  3785                           
  3786                           ;main.c: 186: }
  3787  0002F2  D008               	goto	i2l2167
  3788  0002F4                     i2l2163:
  3789                           
  3790                           ;main.c: 187: else{
  3791                           ;main.c: 188: initLCD();
  3792  0002F4  EC94  F006         	call	i2_initLCD	;wreg free
  3793                           
  3794                           ;main.c: 189: printf(" ");
  3795  0002F8  0E40               	movlw	low (STR_4+16)
  3796  0002FA  6E08               	movwf	i2printf@f,c
  3797  0002FC  0EFF               	movlw	high (STR_4+16)
  3798  0002FE  6E09               	movwf	i2printf@f+1,c
  3799  000300  ECF5  F003         	call	i2_printf	;wreg free
  3800  000304                     i2l2167:
  3801                           
  3802                           ;main.c: 190: }
  3803                           ;main.c: 191: lcdInst(0b10000000);;
  3804  000304  0E80               	movlw	128
  3805  000306  EC4A  F007         	call	i2_lcdInst
  3806                           
  3807                           ;main.c: 192: INT1IF = 0;
  3808  00030A  90F0               	bcf	intcon3,0,c	;volatile
  3809                           
  3810                           ;main.c: 193: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  3811  00030C  0E00               	movlw	0
  3812  00030E  6E40               	movwf	keypressed@i_329,c
  3813  000310                     i2l2173:
  3814  000310  0E63               	movlw	99
  3815  000312  6440               	cpfsgt	keypressed@i_329,c
  3816  000314  D001               	goto	i2l2177
  3817  000316  D00A               	goto	i2l150
  3818  000318                     i2l2177:
  3819  000318  0E21               	movlw	33
  3820  00031A  6E1A               	movwf	??_keypressed& (0+255),c
  3821  00031C  0E76               	movlw	118
  3822  00031E                     i2u195_47:
  3823  00031E  2EE8               	decfsz	wreg,f,c
  3824  000320  D7FE               	bra	i2u195_47
  3825  000322  2E1A               	decfsz	??_keypressed& (0+255),f,c
  3826  000324  D7FC               	bra	i2u195_47
  3827  000326  D000               	nop2	
  3828  000328  2A40               	incf	keypressed@i_329,f,c
  3829  00032A  D7F2               	goto	i2l2173
  3830  00032C                     i2l150:
  3831  00032C  C028  FFF5         	movff	??_keypressed+14,tablat
  3832  000330  C027  FFF8         	movff	??_keypressed+13,tblptru
  3833  000334  C026  FFF7         	movff	??_keypressed+12,tblptrh
  3834  000338  C025  FFF6         	movff	??_keypressed+11,tblptrl
  3835  00033C  C024  FFF4         	movff	??_keypressed+10,prodh
  3836  000340  C023  FFF3         	movff	??_keypressed+9,prodl
  3837  000344  C022  FFDA         	movff	??_keypressed+8,fsr2h
  3838  000348  C021  FFD9         	movff	??_keypressed+7,fsr2l
  3839  00034C  C020  FFE2         	movff	??_keypressed+6,fsr1h
  3840  000350  C01F  FFE1         	movff	??_keypressed+5,fsr1l
  3841  000354  C01E  FFEA         	movff	??_keypressed+4,fsr0h
  3842  000358  C01D  FFE9         	movff	??_keypressed+3,fsr0l
  3843  00035C  C01C  FFFB         	movff	??_keypressed+2,pclatu
  3844  000360  C01B  FFFA         	movff	??_keypressed+1,pclath
  3845  000364  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3846  000366  0011               	retfie		f
  3847  000368                     __end_of_keypressed:
  3848                           	opt stack 0
  3849                           pclatu	equ	0xFFB
  3850                           pclath	equ	0xFFA
  3851                           tblptru	equ	0xFF8
  3852                           tblptrh	equ	0xFF7
  3853                           tblptrl	equ	0xFF6
  3854                           tablat	equ	0xFF5
  3855                           prodh	equ	0xFF4
  3856                           prodl	equ	0xFF3
  3857                           intcon	equ	0xFF2
  3858                           intcon3	equ	0xFF0
  3859                           fsr0h	equ	0xFEA
  3860                           fsr0l	equ	0xFE9
  3861                           wreg	equ	0xFE8
  3862                           fsr1h	equ	0xFE2
  3863                           fsr1l	equ	0xFE1
  3864                           indf2	equ	0xFDF
  3865                           postinc2	equ	0xFDE
  3866                           postdec2	equ	0xFDD
  3867                           fsr2h	equ	0xFDA
  3868                           fsr2l	equ	0xFD9
  3869                           status	equ	0xFD8
  3870                           
  3871 ;; *************** function i2_printf *****************
  3872 ;; Defined at:
  3873 ;;		line 464 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  f               2    7[COMRAM] PTR const unsigned char 
  3876 ;;		 -> STR_15(2), STR_14(10), STR_13(8), STR_12(13), 
  3877 ;;		 -> STR_11(15), STR_10(17), STR_9(13), STR_8(15), 
  3878 ;;		 -> STR_7(19), STR_6(17), STR_5(17), STR_4(18), 
  3879 ;;		 -> STR_3(17), STR_2(15), STR_1(15), 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  printf          4    0        struct .
  3882 ;;  printf          3    0        PTR const unsigned char 
  3883 ;;  printf          2   22[COMRAM] int 
  3884 ;;  printf          2   19[COMRAM] unsigned int 
  3885 ;;  printf          2   16[COMRAM] PTR void [1]
  3886 ;;		 -> ?i2_printf(2), ?_printf(2), 
  3887 ;;  printf          2    0        unsigned int 
  3888 ;;  printf          1   24[COMRAM] char 
  3889 ;;  printf          1   21[COMRAM] char 
  3890 ;;  printf          1   18[COMRAM] unsigned char 
  3891 ;;  printf          1   15[COMRAM] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  2    7[COMRAM] int 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;Total ram usage:       18 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    2
  3908 ;; This function calls:
  3909 ;;		i2___lwdiv
  3910 ;;		i2___wmul
  3911 ;;		i2_isdigit
  3912 ;;		i2_putch
  3913 ;; This function is called by:
  3914 ;;		_keypressed
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text18
  3919  0007EA                     __ptext18:
  3920                           	opt stack 0
  3921  0007EA                     i2_printf:
  3922                           	opt stack 24
  3923                           
  3924                           ;doprnt.c: 466: va_list ap;
  3925                           ;doprnt.c: 499: signed char c;
  3926                           ;doprnt.c: 501: int width;
  3927                           ;doprnt.c: 506: signed char prec;
  3928                           ;doprnt.c: 508: unsigned char flag;
  3929                           ;doprnt.c: 523: union {
  3930                           ;doprnt.c: 524: unsigned long vd;
  3931                           ;doprnt.c: 525: double integ;
  3932                           ;doprnt.c: 526: } tmpval;
  3933                           ;doprnt.c: 528: unsigned int val;
  3934                           ;doprnt.c: 529: unsigned len;
  3935                           ;doprnt.c: 530: const char * cp;
  3936                           ;doprnt.c: 533: *ap = __va_start();
  3937                           
  3938                           ;incstack = 0
  3939  0007EA  0E0A               	movlw	low (?i2_printf+2)
  3940  0007EC  6E11               	movwf	i2printf@ap,c
  3941  0007EE  0E00               	movlw	high (?i2_printf+2)
  3942  0007F0  6E12               	movwf	i2printf@ap+1,c
  3943                           
  3944                           ;doprnt.c: 536: while(c = *f++) {
  3945  0007F2  D0E8               	goto	i2l1919
  3946  0007F4                     i2l1847:
  3947                           
  3948                           ;doprnt.c: 538: if(c != '%')
  3949  0007F4  0E25               	movlw	37
  3950  0007F6  1819               	xorwf	i2printf@c,w,c
  3951  0007F8  B4D8               	btfsc	status,2,c
  3952  0007FA  D004               	goto	i2l1851
  3953                           
  3954                           ;doprnt.c: 540: {
  3955                           ;doprnt.c: 541: (putch(c) );
  3956  0007FC  5019               	movf	i2printf@c,w,c
  3957  0007FE  EC44  F007         	call	i2_putch
  3958                           
  3959                           ;doprnt.c: 542: continue;
  3960  000802  D0E0               	goto	i2l1919
  3961  000804                     i2l1851:
  3962                           
  3963                           ;doprnt.c: 543: }
  3964                           ;doprnt.c: 546: width = 0;
  3965  000804  0E00               	movlw	0
  3966  000806  6E18               	movwf	i2printf@width+1,c
  3967  000808  0E00               	movlw	0
  3968  00080A  6E17               	movwf	i2printf@width,c
  3969                           
  3970                           ;doprnt.c: 548: flag = 0;
  3971  00080C  0E00               	movlw	0
  3972  00080E  6E13               	movwf	i2printf@flag,c
  3973                           
  3974                           ;doprnt.c: 551: switch(*f) {
  3975                           
  3976                           ;doprnt.c: 550: for(;;) {
  3977  000810  D003               	goto	i2l1857
  3978  000812                     i2l1853:
  3979                           
  3980                           ;doprnt.c: 580: flag |= 0x04;
  3981  000812  8413               	bsf	i2printf@flag,2,c
  3982                           
  3983                           ;doprnt.c: 581: f++;
  3984  000814  4A08               	infsnz	i2printf@f,f,c
  3985  000816  2A09               	incf	i2printf@f+1,f,c
  3986  000818                     i2l1857:
  3987  000818  C008  FFF6         	movff	i2printf@f,tblptrl
  3988  00081C  C009  FFF7         	movff	i2printf@f+1,tblptrh
  3989  000820                     	if	0	;tblptru may be non-zero
  3990  000820                     	endif
  3991  000820                     	if	0	;tblptru may be non-zero
  3992  000820                     	endif
  3993  000820  0008               	tblrd		*
  3994  000822  50F5               	movf	tablat,w,c
  3995                           
  3996                           ; Switch size 1, requested type "space"
  3997                           ; Number of cases is 1, Range of values is 48 to 48
  3998                           ; switch strategies available:
  3999                           ; Name         Instructions Cycles
  4000                           ; simple_byte            4     3 (average)
  4001                           ;	Chosen strategy is simple_byte
  4002  000824  0A30               	xorlw	48	; case 48
  4003  000826  B4D8               	btfsc	status,2,c
  4004  000828  D7F4               	goto	i2l1853
  4005                           
  4006                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4007                           
  4008                           ;doprnt.c: 586: }
  4009                           
  4010                           ;doprnt.c: 585: break;
  4011  00082A  C008  FFF6         	movff	i2printf@f,tblptrl
  4012  00082E  C009  FFF7         	movff	i2printf@f+1,tblptrh
  4013  000832                     	if	0	;tblptru may be non-zero
  4014  000832                     	endif
  4015  000832                     	if	0	;tblptru may be non-zero
  4016  000832                     	endif
  4017  000832  0008               	tblrd		*
  4018  000834  50F5               	movf	tablat,w,c
  4019  000836  EC11  F007         	call	i2_isdigit
  4020  00083A  A0D8               	btfss	status,0,c
  4021  00083C  D032               	goto	i2l1873
  4022                           
  4023                           ;doprnt.c: 598: width = 0;
  4024  00083E  0E00               	movlw	0
  4025  000840  6E18               	movwf	i2printf@width+1,c
  4026  000842  0E00               	movlw	0
  4027  000844  6E17               	movwf	i2printf@width,c
  4028  000846                     i2l1863:
  4029                           
  4030                           ;doprnt.c: 600: width *= 10;
  4031  000846  C017  F001         	movff	i2printf@width,i2___wmul@multiplier
  4032  00084A  C018  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
  4033  00084E  0E00               	movlw	0
  4034  000850  6E04               	movwf	i2___wmul@multiplicand+1,c
  4035  000852  0E0A               	movlw	10
  4036  000854  6E03               	movwf	i2___wmul@multiplicand,c
  4037  000856  ECFE  F006         	call	i2___wmul	;wreg free
  4038  00085A  C001  F017         	movff	?i2___wmul,i2printf@width
  4039  00085E  C002  F018         	movff	?i2___wmul+1,i2printf@width+1
  4040                           
  4041                           ;doprnt.c: 601: width += *f++ - '0';
  4042  000862  0ED0               	movlw	208
  4043  000864  6E0C               	movwf	??i2_printf& (0+255),c
  4044  000866  0EFF               	movlw	255
  4045  000868  6E0D               	movwf	(??i2_printf+1)& (0+255),c
  4046  00086A  C008  FFF6         	movff	i2printf@f,tblptrl
  4047  00086E  C009  FFF7         	movff	i2printf@f+1,tblptrh
  4048  000872                     	if	0	;tblptru may be non-zero
  4049  000872                     	endif
  4050  000872                     	if	0	;tblptru may be non-zero
  4051  000872                     	endif
  4052  000872  0008               	tblrd		*
  4053  000874  50F5               	movf	tablat,w,c
  4054  000876  6E0E               	movwf	(??i2_printf+2)& (0+255),c
  4055  000878  6A0F               	clrf	(??i2_printf+3)& (0+255),c
  4056  00087A  500C               	movf	??i2_printf,w,c
  4057  00087C  260E               	addwf	??i2_printf+2,f,c
  4058  00087E  500D               	movf	??i2_printf+1,w,c
  4059  000880  220F               	addwfc	??i2_printf+3,f,c
  4060  000882  500E               	movf	??i2_printf+2,w,c
  4061  000884  2617               	addwf	i2printf@width,f,c
  4062  000886  500F               	movf	??i2_printf+3,w,c
  4063  000888  2218               	addwfc	i2printf@width+1,f,c
  4064  00088A  4A08               	infsnz	i2printf@f,f,c
  4065  00088C  2A09               	incf	i2printf@f+1,f,c
  4066                           
  4067                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4068  00088E  C008  FFF6         	movff	i2printf@f,tblptrl
  4069  000892  C009  FFF7         	movff	i2printf@f+1,tblptrh
  4070  000896                     	if	0	;tblptru may be non-zero
  4071  000896                     	endif
  4072  000896                     	if	0	;tblptru may be non-zero
  4073  000896                     	endif
  4074  000896  0008               	tblrd		*
  4075  000898  50F5               	movf	tablat,w,c
  4076  00089A  EC11  F007         	call	i2_isdigit
  4077  00089E  B0D8               	btfsc	status,0,c
  4078  0008A0  D7D2               	goto	i2l1863
  4079  0008A2                     i2l1873:
  4080  0008A2  C008  FFF6         	movff	i2printf@f,tblptrl
  4081  0008A6  C009  FFF7         	movff	i2printf@f+1,tblptrh
  4082  0008AA  4A08               	infsnz	i2printf@f,f,c
  4083  0008AC  2A09               	incf	i2printf@f+1,f,c
  4084  0008AE                     	if	0	;tblptru may be non-zero
  4085  0008AE                     	endif
  4086  0008AE                     	if	0	;tblptru may be non-zero
  4087  0008AE                     	endif
  4088  0008AE  0008               	tblrd		*
  4089  0008B0  CFF5 F019          	movff	tablat,i2printf@c
  4090  0008B4  5019               	movf	i2printf@c,w,c
  4091                           
  4092                           ; Switch size 1, requested type "space"
  4093                           ; Number of cases is 2, Range of values is 0 to 120
  4094                           ; switch strategies available:
  4095                           ; Name         Instructions Cycles
  4096                           ; simple_byte            7     4 (average)
  4097                           ;	Chosen strategy is simple_byte
  4098  0008B6  0A00               	xorlw	0	; case 0
  4099  0008B8  B4D8               	btfsc	status,2,c
  4100  0008BA  0012               	return	
  4101  0008BC  0A78               	xorlw	120	; case 120
  4102  0008BE  A4D8               	btfss	status,2,c
  4103  0008C0  D081               	goto	i2l1919
  4104                           
  4105                           ;doprnt.c: 1273: {
  4106                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4107  0008C2  C011  FFD9         	movff	i2printf@ap,fsr2l
  4108  0008C6  C012  FFDA         	movff	i2printf@ap+1,fsr2h
  4109  0008CA  CFDE F014          	movff	postinc2,i2printf@val
  4110  0008CE  CFDD F015          	movff	postdec2,i2printf@val+1
  4111  0008D2  0E02               	movlw	2
  4112  0008D4  2611               	addwf	i2printf@ap,f,c
  4113  0008D6  0E00               	movlw	0
  4114  0008D8  2212               	addwfc	i2printf@ap+1,f,c
  4115                           
  4116                           ;doprnt.c: 1287: }
  4117                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4118  0008DA  0E01               	movlw	1
  4119  0008DC  6E19               	movwf	i2printf@c,c
  4120  0008DE                     i2l1881:
  4121  0008DE  0E04               	movlw	4
  4122  0008E0  1819               	xorwf	i2printf@c,w,c
  4123  0008E2  B4D8               	btfsc	status,2,c
  4124  0008E4  D012               	goto	i2l1893
  4125                           
  4126                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4127  0008E6  5019               	movf	i2printf@c,w,c
  4128  0008E8  0D02               	mullw	2
  4129  0008EA  0E0E               	movlw	low _hexpowers
  4130  0008EC  24F3               	addwf	prodl,w,c
  4131  0008EE  6EF6               	movwf	tblptrl,c
  4132  0008F0  0EFF               	movlw	high _hexpowers
  4133  0008F2  20F4               	addwfc	prodh,w,c
  4134  0008F4  6EF7               	movwf	tblptrh,c
  4135  0008F6                     	if	0	;There are less than 3 active tblptr bytes
  4136  0008F6                     	endif
  4137  0008F6  0009               	tblrd		*+
  4138  0008F8  50F5               	movf	tablat,w,c
  4139  0008FA  5C14               	subwf	i2printf@val,w,c
  4140  0008FC  0009               	tblrd		*+
  4141  0008FE  50F5               	movf	tablat,w,c
  4142  000900  5815               	subwfb	i2printf@val+1,w,c
  4143  000902  A0D8               	btfss	status,0,c
  4144  000904  D002               	goto	i2l1893
  4145                           
  4146                           ;doprnt.c: 1318: break;
  4147  000906  2A19               	incf	i2printf@c,f,c
  4148  000908  D7EA               	goto	i2l1881
  4149  00090A                     i2l1893:
  4150                           
  4151                           ;doprnt.c: 1381: if(width > c)
  4152  00090A  0E80               	movlw	128
  4153  00090C  BE19               	btfsc	i2printf@c,7,c
  4154  00090E  0E7F               	movlw	127
  4155  000910  6E0C               	movwf	??i2_printf& (0+255),c
  4156  000912  5017               	movf	i2printf@width,w,c
  4157  000914  5C19               	subwf	i2printf@c,w,c
  4158  000916  5018               	movf	i2printf@width+1,w,c
  4159  000918  0A80               	xorlw	128
  4160  00091A  580C               	subwfb	??i2_printf& (0+255),w,c
  4161  00091C  B0D8               	btfsc	status,0,c
  4162  00091E  D007               	goto	i2l1897
  4163                           
  4164                           ;doprnt.c: 1382: width -= c;
  4165  000920  5019               	movf	i2printf@c,w,c
  4166  000922  5E17               	subwf	i2printf@width,f,c
  4167  000924  0E00               	movlw	0
  4168  000926  BE19               	btfsc	i2printf@c,7,c
  4169  000928  0EFF               	movlw	255
  4170  00092A  5A18               	subwfb	i2printf@width+1,f,c
  4171  00092C  D004               	goto	i2l1899
  4172  00092E                     i2l1897:
  4173                           
  4174                           ;doprnt.c: 1383: else
  4175                           ;doprnt.c: 1384: width = 0;
  4176  00092E  0E00               	movlw	0
  4177  000930  6E18               	movwf	i2printf@width+1,c
  4178  000932  0E00               	movlw	0
  4179  000934  6E17               	movwf	i2printf@width,c
  4180  000936                     i2l1899:
  4181                           
  4182                           ;doprnt.c: 1387: if(flag & 0x04) {
  4183  000936  A413               	btfss	i2printf@flag,2,c
  4184  000938  D00B               	goto	i2l1907
  4185  00093A                     
  4186                           ;doprnt.c: 1415: if(width)
  4187  00093A  5017               	movf	i2printf@width,w,c
  4188  00093C  1018               	iorwf	i2printf@width+1,w,c
  4189  00093E  B4D8               	btfsc	status,2,c
  4190  000940  D015               	goto	i2l248
  4191                           
  4192                           ;doprnt.c: 1417: (putch('0') );
  4193                           
  4194                           ;doprnt.c: 1416: do
  4195  000942  0E30               	movlw	48
  4196  000944  EC44  F007         	call	i2_putch
  4197                           
  4198                           ;doprnt.c: 1418: while(--width);
  4199  000948  0617               	decf	i2printf@width,f,c
  4200  00094A  A0D8               	btfss	status,0,c
  4201  00094C  0618               	decf	i2printf@width+1,f,c
  4202  00094E  D7F5               	goto	L2
  4203  000950                     i2l1907:
  4204                           
  4205                           ;doprnt.c: 1422: {
  4206                           ;doprnt.c: 1424: if(width
  4207                           ;doprnt.c: 1428: )
  4208  000950  5017               	movf	i2printf@width,w,c
  4209  000952  1018               	iorwf	i2printf@width+1,w,c
  4210  000954  B4D8               	btfsc	status,2,c
  4211  000956  D00A               	goto	i2l248
  4212  000958                     i2l1909:
  4213                           
  4214                           ;doprnt.c: 1430: (putch(' ') );
  4215  000958  0E20               	movlw	32
  4216  00095A  EC44  F007         	call	i2_putch
  4217                           
  4218                           ;doprnt.c: 1431: while(--width);
  4219  00095E  0617               	decf	i2printf@width,f,c
  4220  000960  A0D8               	btfss	status,0,c
  4221  000962  0618               	decf	i2printf@width+1,f,c
  4222  000964  5017               	movf	i2printf@width,w,c
  4223  000966  1018               	iorwf	i2printf@width+1,w,c
  4224  000968  A4D8               	btfss	status,2,c
  4225  00096A  D7F6               	goto	i2l1909
  4226  00096C                     i2l248:
  4227                           
  4228                           ;doprnt.c: 1469: }
  4229                           ;doprnt.c: 1472: prec = c;
  4230  00096C  C019  F016         	movff	i2printf@c,i2printf@prec
  4231                           
  4232                           ;doprnt.c: 1474: while(prec--) {
  4233  000970  D025               	goto	i2l252
  4234  000972                     i2l1913:
  4235                           
  4236                           ;doprnt.c: 1478: {
  4237                           ;doprnt.c: 1499: {
  4238                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4239  000972  C014  F001         	movff	i2printf@val,i2___lwdiv@dividend
  4240  000976  C015  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  4241  00097A  5016               	movf	i2printf@prec,w,c
  4242  00097C  0D02               	mullw	2
  4243  00097E  0E0E               	movlw	low _hexpowers
  4244  000980  24F3               	addwf	prodl,w,c
  4245  000982  6EF6               	movwf	tblptrl,c
  4246  000984  0EFF               	movlw	high _hexpowers
  4247  000986  20F4               	addwfc	prodh,w,c
  4248  000988  6EF7               	movwf	tblptrh,c
  4249  00098A                     	if	0	;There are less than 3 active tblptr bytes
  4250  00098A                     	endif
  4251  00098A  0009               	tblrd		*+
  4252  00098C  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  4253  000990  000A               	tblrd		*-
  4254  000992  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  4255  000996  EC46  F006         	call	i2___lwdiv	;wreg free
  4256  00099A  5001               	movf	?i2___lwdiv,w,c
  4257  00099C  0B0F               	andlw	15
  4258  00099E  6E10               	movwf	i2printf@idx,c
  4259                           
  4260                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4261  0009A0  5010               	movf	i2printf@idx,w,c
  4262  0009A2  0D01               	mullw	1
  4263  0009A4  0E42               	movlw	low STR_16
  4264  0009A6  24F3               	addwf	prodl,w,c
  4265  0009A8  6EF6               	movwf	tblptrl,c
  4266  0009AA  0EFF               	movlw	high STR_16
  4267  0009AC  20F4               	addwfc	prodh,w,c
  4268  0009AE  6EF7               	movwf	tblptrh,c
  4269  0009B0                     	if	0	;There are less than 3 active tblptr bytes
  4270  0009B0                     	endif
  4271  0009B0  0008               	tblrd		*
  4272  0009B2  CFF5 F019          	movff	tablat,i2printf@c
  4273                           
  4274                           ;doprnt.c: 1508: }
  4275                           ;doprnt.c: 1523: }
  4276                           ;doprnt.c: 1524: (putch(c) );
  4277  0009B6  5019               	movf	i2printf@c,w,c
  4278  0009B8  EC44  F007         	call	i2_putch
  4279  0009BC                     i2l252:
  4280  0009BC  0616               	decf	i2printf@prec,f,c
  4281  0009BE  2816               	incf	i2printf@prec,w,c
  4282  0009C0  A4D8               	btfss	status,2,c
  4283  0009C2  D7D7               	goto	i2l1913
  4284  0009C4                     i2l1919:
  4285  0009C4  C008  FFF6         	movff	i2printf@f,tblptrl
  4286  0009C8  C009  FFF7         	movff	i2printf@f+1,tblptrh
  4287  0009CC  4A08               	infsnz	i2printf@f,f,c
  4288  0009CE  2A09               	incf	i2printf@f+1,f,c
  4289  0009D0                     	if	0	;tblptru may be non-zero
  4290  0009D0                     	endif
  4291  0009D0                     	if	0	;tblptru may be non-zero
  4292  0009D0                     	endif
  4293  0009D0  0008               	tblrd		*
  4294  0009D2  CFF5 F019          	movff	tablat,i2printf@c
  4295  0009D6  5019               	movf	i2printf@c,w,c
  4296  0009D8  B4D8               	btfsc	status,2,c
  4297  0009DA  0012               	return	
  4298  0009DC  D70B               	goto	i2l1847
  4299  0009DE                     __end_ofi2_printf:
  4300                           	opt stack 0
  4301                           pclatu	equ	0xFFB
  4302                           pclath	equ	0xFFA
  4303                           tblptru	equ	0xFF8
  4304                           tblptrh	equ	0xFF7
  4305                           tblptrl	equ	0xFF6
  4306                           tablat	equ	0xFF5
  4307                           prodh	equ	0xFF4
  4308                           prodl	equ	0xFF3
  4309                           intcon	equ	0xFF2
  4310                           intcon3	equ	0xFF0
  4311                           fsr0h	equ	0xFEA
  4312                           fsr0l	equ	0xFE9
  4313                           wreg	equ	0xFE8
  4314                           fsr1h	equ	0xFE2
  4315                           fsr1l	equ	0xFE1
  4316                           indf2	equ	0xFDF
  4317                           postinc2	equ	0xFDE
  4318                           postdec2	equ	0xFDD
  4319                           fsr2h	equ	0xFDA
  4320                           fsr2l	equ	0xFD9
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function i2_putch *****************
  4324 ;; Defined at:
  4325 ;;		line 30 in file "lcd.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  data            1    wreg     unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  data            1    2[COMRAM] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  1    wreg      void 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0, cstack
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;Total ram usage:        1 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    1
  4346 ;; This function calls:
  4347 ;;		i2_lcdNibble
  4348 ;; This function is called by:
  4349 ;;		_keypressed
  4350 ;;		i2_printf
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text19
  4355  000E88                     __ptext19:
  4356                           	opt stack 0
  4357  000E88                     i2_putch:
  4358                           	opt stack 25
  4359                           
  4360                           ;incstack = 0
  4361                           ;i2putch@data stored from wreg
  4362  000E88  6E03               	movwf	i2putch@data,c
  4363                           
  4364                           ;lcd.c: 31: LATDbits.LATD2 = 1;
  4365  000E8A  848C               	bsf	3980,2,c	;volatile
  4366                           
  4367                           ;lcd.c: 32: lcdNibble(data);
  4368  000E8C  5003               	movf	i2putch@data,w,c
  4369  000E8E  EC1B  F006         	call	i2_lcdNibble
  4370  000E92  0012               	return		;funcret
  4371  000E94                     __end_ofi2_putch:
  4372                           	opt stack 0
  4373                           pclatu	equ	0xFFB
  4374                           pclath	equ	0xFFA
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           prodh	equ	0xFF4
  4380                           prodl	equ	0xFF3
  4381                           intcon	equ	0xFF2
  4382                           intcon3	equ	0xFF0
  4383                           fsr0h	equ	0xFEA
  4384                           fsr0l	equ	0xFE9
  4385                           wreg	equ	0xFE8
  4386                           fsr1h	equ	0xFE2
  4387                           fsr1l	equ	0xFE1
  4388                           indf2	equ	0xFDF
  4389                           postinc2	equ	0xFDE
  4390                           postdec2	equ	0xFDD
  4391                           fsr2h	equ	0xFDA
  4392                           fsr2l	equ	0xFD9
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function i2_isdigit *****************
  4396 ;; Defined at:
  4397 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/isdigit.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  c               1    wreg     unsigned char 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  c               1    2[COMRAM] unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;		None               void
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:        3 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		i2_printf
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text20
  4425  000E22                     __ptext20:
  4426                           	opt stack 0
  4427  000E22                     i2_isdigit:
  4428                           	opt stack 25
  4429                           
  4430                           ;incstack = 0
  4431                           ;i2isdigit@c stored from wreg
  4432  000E22  6E03               	movwf	i2isdigit@c,c
  4433  000E24  0E00               	movlw	0
  4434  000E26  6E02               	movwf	i2_isdigit$606,c
  4435  000E28  0E3A               	movlw	58
  4436  000E2A  6003               	cpfslt	i2isdigit@c,c
  4437  000E2C  D005               	goto	i2l1677
  4438  000E2E  0E2F               	movlw	47
  4439  000E30  6403               	cpfsgt	i2isdigit@c,c
  4440  000E32  D002               	goto	i2l1677
  4441  000E34  0E01               	movlw	1
  4442  000E36  6E02               	movwf	i2_isdigit$606,c
  4443  000E38                     i2l1677:
  4444  000E38  C002  F001         	movff	i2_isdigit$606,??i2_isdigit
  4445  000E3C  3001               	rrcf	??i2_isdigit,w,c
  4446  000E3E  0012               	return	
  4447  000E40                     __end_ofi2_isdigit:
  4448                           	opt stack 0
  4449                           pclatu	equ	0xFFB
  4450                           pclath	equ	0xFFA
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           prodh	equ	0xFF4
  4456                           prodl	equ	0xFF3
  4457                           intcon	equ	0xFF2
  4458                           intcon3	equ	0xFF0
  4459                           fsr0h	equ	0xFEA
  4460                           fsr0l	equ	0xFE9
  4461                           wreg	equ	0xFE8
  4462                           fsr1h	equ	0xFE2
  4463                           fsr1l	equ	0xFE1
  4464                           indf2	equ	0xFDF
  4465                           postinc2	equ	0xFDE
  4466                           postdec2	equ	0xFDD
  4467                           fsr2h	equ	0xFDA
  4468                           fsr2l	equ	0xFD9
  4469                           status	equ	0xFD8
  4470                           
  4471 ;; *************** function i2___wmul *****************
  4472 ;; Defined at:
  4473 ;;		line 15 in file "/Applications/microchip/xc8/v1.41/sources/common/Umul16.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  multiplier      2    0[COMRAM] unsigned int 
  4476 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  __wmul          2    4[COMRAM] unsigned int 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  2    0[COMRAM] unsigned int 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0, prodl, prodh
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:        6 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		i2_printf
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text21
  4502  000DFC                     __ptext21:
  4503                           	opt stack 0
  4504  000DFC                     i2___wmul:
  4505                           	opt stack 25
  4506                           
  4507                           ;incstack = 0
  4508  000DFC  5001               	movf	i2___wmul@multiplier,w,c
  4509  000DFE  0203               	mulwf	i2___wmul@multiplicand,c
  4510  000E00  CFF3 F005          	movff	prodl,i2___wmul@product
  4511  000E04  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4512  000E08  5001               	movf	i2___wmul@multiplier,w,c
  4513  000E0A  0204               	mulwf	i2___wmul@multiplicand+1,c
  4514  000E0C  50F3               	movf	prodl,w,c
  4515  000E0E  2606               	addwf	i2___wmul@product+1,f,c
  4516  000E10  5002               	movf	i2___wmul@multiplier+1,w,c
  4517  000E12  0203               	mulwf	i2___wmul@multiplicand,c
  4518  000E14  50F3               	movf	prodl,w,c
  4519  000E16  2606               	addwf	i2___wmul@product+1,f,c
  4520  000E18  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4521  000E1C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4522  000E20  0012               	return	
  4523  000E22                     __end_ofi2___wmul:
  4524                           	opt stack 0
  4525                           pclatu	equ	0xFFB
  4526                           pclath	equ	0xFFA
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           intcon	equ	0xFF2
  4534                           intcon3	equ	0xFF0
  4535                           fsr0h	equ	0xFEA
  4536                           fsr0l	equ	0xFE9
  4537                           wreg	equ	0xFE8
  4538                           fsr1h	equ	0xFE2
  4539                           fsr1l	equ	0xFE1
  4540                           indf2	equ	0xFDF
  4541                           postinc2	equ	0xFDE
  4542                           postdec2	equ	0xFDD
  4543                           fsr2h	equ	0xFDA
  4544                           fsr2l	equ	0xFD9
  4545                           status	equ	0xFD8
  4546                           
  4547 ;; *************** function i2___lwdiv *****************
  4548 ;; Defined at:
  4549 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lwdiv.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  dividend        2    0[COMRAM] unsigned int 
  4552 ;;  divisor         2    2[COMRAM] unsigned int 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  4555 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  2    0[COMRAM] unsigned int 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        7 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		i2_printf
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text22
  4579  000C8C                     __ptext22:
  4580                           	opt stack 0
  4581  000C8C                     i2___lwdiv:
  4582                           	opt stack 25
  4583                           
  4584                           ;incstack = 0
  4585  000C8C  0E00               	movlw	0
  4586  000C8E  6E06               	movwf	i2___lwdiv@quotient+1,c
  4587  000C90  0E00               	movlw	0
  4588  000C92  6E05               	movwf	i2___lwdiv@quotient,c
  4589  000C94  5003               	movf	i2___lwdiv@divisor,w,c
  4590  000C96  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  4591  000C98  B4D8               	btfsc	status,2,c
  4592  000C9A  D01C               	goto	i2l664
  4593  000C9C  0E01               	movlw	1
  4594  000C9E  6E07               	movwf	i2___lwdiv@counter,c
  4595  000CA0  D004               	goto	i2l1689
  4596  000CA2                     i2l1687:
  4597  000CA2  90D8               	bcf	status,0,c
  4598  000CA4  3603               	rlcf	i2___lwdiv@divisor,f,c
  4599  000CA6  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  4600  000CA8  2A07               	incf	i2___lwdiv@counter,f,c
  4601  000CAA                     i2l1689:
  4602  000CAA  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  4603  000CAC  D7FA               	goto	i2l1687
  4604  000CAE                     i2l1691:
  4605  000CAE  90D8               	bcf	status,0,c
  4606  000CB0  3605               	rlcf	i2___lwdiv@quotient,f,c
  4607  000CB2  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  4608  000CB4  5003               	movf	i2___lwdiv@divisor,w,c
  4609  000CB6  5C01               	subwf	i2___lwdiv@dividend,w,c
  4610  000CB8  5004               	movf	i2___lwdiv@divisor+1,w,c
  4611  000CBA  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  4612  000CBC  A0D8               	btfss	status,0,c
  4613  000CBE  D005               	goto	i2l1699
  4614  000CC0  5003               	movf	i2___lwdiv@divisor,w,c
  4615  000CC2  5E01               	subwf	i2___lwdiv@dividend,f,c
  4616  000CC4  5004               	movf	i2___lwdiv@divisor+1,w,c
  4617  000CC6  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  4618  000CC8  8005               	bsf	i2___lwdiv@quotient,0,c
  4619  000CCA                     i2l1699:
  4620  000CCA  90D8               	bcf	status,0,c
  4621  000CCC  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  4622  000CCE  3203               	rrcf	i2___lwdiv@divisor,f,c
  4623  000CD0  2E07               	decfsz	i2___lwdiv@counter,f,c
  4624  000CD2  D7ED               	goto	i2l1691
  4625  000CD4                     i2l664:
  4626  000CD4  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  4627  000CD8  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  4628  000CDC  0012               	return		;funcret
  4629  000CDE                     __end_ofi2___lwdiv:
  4630                           	opt stack 0
  4631                           pclatu	equ	0xFFB
  4632                           pclath	equ	0xFFA
  4633                           tblptru	equ	0xFF8
  4634                           tblptrh	equ	0xFF7
  4635                           tblptrl	equ	0xFF6
  4636                           tablat	equ	0xFF5
  4637                           prodh	equ	0xFF4
  4638                           prodl	equ	0xFF3
  4639                           intcon	equ	0xFF2
  4640                           intcon3	equ	0xFF0
  4641                           fsr0h	equ	0xFEA
  4642                           fsr0l	equ	0xFE9
  4643                           wreg	equ	0xFE8
  4644                           fsr1h	equ	0xFE2
  4645                           fsr1l	equ	0xFE1
  4646                           indf2	equ	0xFDF
  4647                           postinc2	equ	0xFDE
  4648                           postdec2	equ	0xFDD
  4649                           fsr2h	equ	0xFDA
  4650                           fsr2l	equ	0xFD9
  4651                           status	equ	0xFD8
  4652                           
  4653 ;; *************** function i2_initLCD *****************
  4654 ;; Defined at:
  4655 ;;		line 14 in file "lcd.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;Total ram usage:        1 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    2
  4676 ;; This function calls:
  4677 ;;		i2_lcdInst
  4678 ;; This function is called by:
  4679 ;;		_keypressed
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text23
  4684  000D28                     __ptext23:
  4685                           	opt stack 0
  4686  000D28                     i2_initLCD:
  4687                           	opt stack 24
  4688                           
  4689                           ;lcd.c: 15: _delay((unsigned long)((15)*(10000000/4000.0)));
  4690                           
  4691                           ;incstack = 0
  4692  000D28  0E31               	movlw	49
  4693  000D2A  6E04               	movwf	??i2_initLCD& (0+255),c
  4694  000D2C  0EB2               	movlw	178
  4695  000D2E                     i2u196_47:
  4696  000D2E  2EE8               	decfsz	wreg,f,c
  4697  000D30  D7FE               	bra	i2u196_47
  4698  000D32  2E04               	decfsz	??i2_initLCD& (0+255),f,c
  4699  000D34  D7FC               	bra	i2u196_47
  4700  000D36  D000               	nop2	
  4701                           
  4702                           ;lcd.c: 16: lcdInst(0b00110011);
  4703  000D38  0E33               	movlw	51
  4704  000D3A  EC4A  F007         	call	i2_lcdInst
  4705                           
  4706                           ;lcd.c: 17: lcdInst(0b00110010);
  4707  000D3E  0E32               	movlw	50
  4708  000D40  EC4A  F007         	call	i2_lcdInst
  4709                           
  4710                           ;lcd.c: 18: lcdInst(0b00101000);
  4711  000D44  0E28               	movlw	40
  4712  000D46  EC4A  F007         	call	i2_lcdInst
  4713                           
  4714                           ;lcd.c: 19: lcdInst(0b00001111);
  4715  000D4A  0E0F               	movlw	15
  4716  000D4C  EC4A  F007         	call	i2_lcdInst
  4717                           
  4718                           ;lcd.c: 20: lcdInst(0b00000110);
  4719  000D50  0E06               	movlw	6
  4720  000D52  EC4A  F007         	call	i2_lcdInst
  4721                           
  4722                           ;lcd.c: 21: lcdInst(0b00000001);
  4723  000D56  0E01               	movlw	1
  4724  000D58  EC4A  F007         	call	i2_lcdInst
  4725                           
  4726                           ;lcd.c: 22: _delay((unsigned long)((15)*(10000000/4000.0)));
  4727  000D5C  0E31               	movlw	49
  4728  000D5E  6E04               	movwf	??i2_initLCD& (0+255),c
  4729  000D60  0EB2               	movlw	178
  4730  000D62                     i2u197_47:
  4731  000D62  2EE8               	decfsz	wreg,f,c
  4732  000D64  D7FE               	bra	i2u197_47
  4733  000D66  2E04               	decfsz	??i2_initLCD& (0+255),f,c
  4734  000D68  D7FC               	bra	i2u197_47
  4735  000D6A  D000               	nop2	
  4736  000D6C  0012               	return		;funcret
  4737  000D6E                     __end_ofi2_initLCD:
  4738                           	opt stack 0
  4739                           pclatu	equ	0xFFB
  4740                           pclath	equ	0xFFA
  4741                           tblptru	equ	0xFF8
  4742                           tblptrh	equ	0xFF7
  4743                           tblptrl	equ	0xFF6
  4744                           tablat	equ	0xFF5
  4745                           prodh	equ	0xFF4
  4746                           prodl	equ	0xFF3
  4747                           intcon	equ	0xFF2
  4748                           intcon3	equ	0xFF0
  4749                           fsr0h	equ	0xFEA
  4750                           fsr0l	equ	0xFE9
  4751                           wreg	equ	0xFE8
  4752                           fsr1h	equ	0xFE2
  4753                           fsr1l	equ	0xFE1
  4754                           indf2	equ	0xFDF
  4755                           postinc2	equ	0xFDE
  4756                           postdec2	equ	0xFDD
  4757                           fsr2h	equ	0xFDA
  4758                           fsr2l	equ	0xFD9
  4759                           status	equ	0xFD8
  4760                           
  4761 ;; *************** function i2_lcdInst *****************
  4762 ;; Defined at:
  4763 ;;		line 25 in file "lcd.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  data            1    wreg     unsigned char 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  data            1    2[COMRAM] unsigned char 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;Total ram usage:        1 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    1
  4784 ;; This function calls:
  4785 ;;		i2_lcdNibble
  4786 ;; This function is called by:
  4787 ;;		_keypressed
  4788 ;;		i2_initLCD
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text24
  4793  000E94                     __ptext24:
  4794                           	opt stack 0
  4795  000E94                     i2_lcdInst:
  4796                           	opt stack 25
  4797                           
  4798                           ;incstack = 0
  4799                           ;i2lcdInst@data stored from wreg
  4800  000E94  6E03               	movwf	i2lcdInst@data,c
  4801                           
  4802                           ;lcd.c: 26: LATDbits.LATD2 = 0;
  4803  000E96  948C               	bcf	3980,2,c	;volatile
  4804                           
  4805                           ;lcd.c: 27: lcdNibble(data);
  4806  000E98  5003               	movf	i2lcdInst@data,w,c
  4807  000E9A  EC1B  F006         	call	i2_lcdNibble
  4808  000E9E  0012               	return		;funcret
  4809  000EA0                     __end_ofi2_lcdInst:
  4810                           	opt stack 0
  4811                           pclatu	equ	0xFFB
  4812                           pclath	equ	0xFFA
  4813                           tblptru	equ	0xFF8
  4814                           tblptrh	equ	0xFF7
  4815                           tblptrl	equ	0xFF6
  4816                           tablat	equ	0xFF5
  4817                           prodh	equ	0xFF4
  4818                           prodl	equ	0xFF3
  4819                           intcon	equ	0xFF2
  4820                           intcon3	equ	0xFF0
  4821                           fsr0h	equ	0xFEA
  4822                           fsr0l	equ	0xFE9
  4823                           wreg	equ	0xFE8
  4824                           fsr1h	equ	0xFE2
  4825                           fsr1l	equ	0xFE1
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function i2_lcdNibble *****************
  4834 ;; Defined at:
  4835 ;;		line 35 in file "lcd.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  data            1    wreg     unsigned char 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  data            1    1[COMRAM] unsigned char 
  4840 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;Total ram usage:        2 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		i2_lcdInst
  4860 ;;		i2_putch
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text25
  4865  000C36                     __ptext25:
  4866                           	opt stack 0
  4867  000C36                     i2_lcdNibble:
  4868                           	opt stack 25
  4869                           
  4870                           ;incstack = 0
  4871                           ;i2lcdNibble@data stored from wreg
  4872  000C36  6E02               	movwf	i2lcdNibble@data,c
  4873                           
  4874                           ;lcd.c: 37: char temp = data & 0xF0;
  4875  000C38  5002               	movf	i2lcdNibble@data,w,c
  4876  000C3A  0BF0               	andlw	240
  4877  000C3C  6E01               	movwf	i2lcdNibble@temp,c
  4878                           
  4879                           ;lcd.c: 38: LATD = LATD & 0x0F;
  4880  000C3E  508C               	movf	3980,w,c	;volatile
  4881  000C40  0B0F               	andlw	15
  4882  000C42  6E8C               	movwf	3980,c	;volatile
  4883                           
  4884                           ;lcd.c: 39: LATD = temp | LATD;
  4885  000C44  5001               	movf	i2lcdNibble@temp,w,c
  4886  000C46  108C               	iorwf	3980,w,c	;volatile
  4887  000C48  6E8C               	movwf	3980,c	;volatile
  4888                           
  4889                           ;lcd.c: 41: LATDbits.LATD3 = 0;
  4890  000C4A  968C               	bcf	3980,3,c	;volatile
  4891                           
  4892                           ;lcd.c: 42: _delay((unsigned long)((25)*(10000000/4000000.0)));
  4893  000C4C  0E14               	movlw	20
  4894  000C4E                     i2u198_47:
  4895  000C4E  2EE8               	decfsz	wreg,f,c
  4896  000C50  D7FE               	bra	i2u198_47
  4897  000C52  D000               	nop2	
  4898                           
  4899                           ;lcd.c: 43: LATDbits.LATD3 = 1;
  4900  000C54  868C               	bsf	3980,3,c	;volatile
  4901                           
  4902                           ;lcd.c: 44: _delay((unsigned long)((25)*(10000000/4000000.0)));
  4903  000C56  0E14               	movlw	20
  4904  000C58                     i2u199_47:
  4905  000C58  2EE8               	decfsz	wreg,f,c
  4906  000C5A  D7FE               	bra	i2u199_47
  4907  000C5C  D000               	nop2	
  4908                           
  4909                           ;lcd.c: 46: data = data << 4;
  4910  000C5E  3802               	swapf	i2lcdNibble@data,w,c
  4911  000C60  0BF0               	andlw	240
  4912  000C62  6E02               	movwf	i2lcdNibble@data,c
  4913                           
  4914                           ;lcd.c: 48: temp = data & 0xF0;
  4915  000C64  5002               	movf	i2lcdNibble@data,w,c
  4916  000C66  0BF0               	andlw	240
  4917  000C68  6E01               	movwf	i2lcdNibble@temp,c
  4918                           
  4919                           ;lcd.c: 49: LATD = LATD & 0x0F;
  4920  000C6A  508C               	movf	3980,w,c	;volatile
  4921  000C6C  0B0F               	andlw	15
  4922  000C6E  6E8C               	movwf	3980,c	;volatile
  4923                           
  4924                           ;lcd.c: 50: LATD = temp | LATD;
  4925  000C70  5001               	movf	i2lcdNibble@temp,w,c
  4926  000C72  108C               	iorwf	3980,w,c	;volatile
  4927  000C74  6E8C               	movwf	3980,c	;volatile
  4928                           
  4929                           ;lcd.c: 52: LATDbits.LATD3 = 0;
  4930  000C76  968C               	bcf	3980,3,c	;volatile
  4931                           
  4932                           ;lcd.c: 53: _delay((unsigned long)((25)*(10000000/4000000.0)));
  4933  000C78  0E14               	movlw	20
  4934  000C7A                     i2u200_47:
  4935  000C7A  2EE8               	decfsz	wreg,f,c
  4936  000C7C  D7FE               	bra	i2u200_47
  4937  000C7E  D000               	nop2	
  4938                           
  4939                           ;lcd.c: 54: LATDbits.LATD3 = 1;
  4940  000C80  868C               	bsf	3980,3,c	;volatile
  4941                           
  4942                           ;lcd.c: 55: _delay((unsigned long)((25)*(10000000/4000000.0)));
  4943  000C82  0E14               	movlw	20
  4944  000C84                     i2u201_47:
  4945  000C84  2EE8               	decfsz	wreg,f,c
  4946  000C86  D7FE               	bra	i2u201_47
  4947  000C88  D000               	nop2	
  4948  000C8A  0012               	return		;funcret
  4949  000C8C                     __end_ofi2_lcdNibble:
  4950                           	opt stack 0
  4951                           pclatu	equ	0xFFB
  4952                           pclath	equ	0xFFA
  4953                           tblptru	equ	0xFF8
  4954                           tblptrh	equ	0xFF7
  4955                           tblptrl	equ	0xFF6
  4956                           tablat	equ	0xFF5
  4957                           prodh	equ	0xFF4
  4958                           prodl	equ	0xFF3
  4959                           intcon	equ	0xFF2
  4960                           intcon3	equ	0xFF0
  4961                           fsr0h	equ	0xFEA
  4962                           fsr0l	equ	0xFE9
  4963                           wreg	equ	0xFE8
  4964                           fsr1h	equ	0xFE2
  4965                           fsr1l	equ	0xFE1
  4966                           indf2	equ	0xFDF
  4967                           postinc2	equ	0xFDE
  4968                           postdec2	equ	0xFDD
  4969                           fsr2h	equ	0xFDA
  4970                           fsr2l	equ	0xFD9
  4971                           status	equ	0xFD8
  4972                           pclatu	equ	0xFFB
  4973                           pclath	equ	0xFFA
  4974                           tblptru	equ	0xFF8
  4975                           tblptrh	equ	0xFF7
  4976                           tblptrl	equ	0xFF6
  4977                           tablat	equ	0xFF5
  4978                           prodh	equ	0xFF4
  4979                           prodl	equ	0xFF3
  4980                           intcon	equ	0xFF2
  4981                           intcon3	equ	0xFF0
  4982                           fsr0h	equ	0xFEA
  4983                           fsr0l	equ	0xFE9
  4984                           wreg	equ	0xFE8
  4985                           fsr1h	equ	0xFE2
  4986                           fsr1l	equ	0xFE1
  4987                           indf2	equ	0xFDF
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           fsr2h	equ	0xFDA
  4991                           fsr2l	equ	0xFD9
  4992                           status	equ	0xFD8
  4993                           
  4994                           	psect	rparam
  4995  0000                     pclatu	equ	0xFFB
  4996                           pclath	equ	0xFFA
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           prodh	equ	0xFF4
  5002                           prodl	equ	0xFF3
  5003                           intcon	equ	0xFF2
  5004                           intcon3	equ	0xFF0
  5005                           fsr0h	equ	0xFEA
  5006                           fsr0l	equ	0xFE9
  5007                           wreg	equ	0xFE8
  5008                           fsr1h	equ	0xFE2
  5009                           fsr1l	equ	0xFE1
  5010                           indf2	equ	0xFDF
  5011                           postinc2	equ	0xFDE
  5012                           postdec2	equ	0xFDD
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           status	equ	0xFD8
  5016                           
  5017                           	psect	temp
  5018  000042                     btemp:
  5019                           	opt stack 0
  5020  000042                     	ds	1
  5021  0000                     int$flags	set	btemp
  5022                           pclatu	equ	0xFFB
  5023                           pclath	equ	0xFFA
  5024                           tblptru	equ	0xFF8
  5025                           tblptrh	equ	0xFF7
  5026                           tblptrl	equ	0xFF6
  5027                           tablat	equ	0xFF5
  5028                           prodh	equ	0xFF4
  5029                           prodl	equ	0xFF3
  5030                           intcon	equ	0xFF2
  5031                           intcon3	equ	0xFF0
  5032                           fsr0h	equ	0xFEA
  5033                           fsr0l	equ	0xFE9
  5034                           wreg	equ	0xFE8
  5035                           fsr1h	equ	0xFE2
  5036                           fsr1l	equ	0xFE1
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           postdec2	equ	0xFDD
  5040                           fsr2h	equ	0xFDA
  5041                           fsr2l	equ	0xFD9
  5042                           status	equ	0xFD8


Data Sizes:
    Strings     226
    Constant    32
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     65      65
    BANK0           128     42      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_15(CODE[2]), STR_14(CODE[10]), STR_13(CODE[8]), STR_12(CODE[13]), 
		 -> STR_11(CODE[15]), STR_10(CODE[17]), STR_9(CODE[13]), STR_8(CODE[15]), 
		 -> STR_7(CODE[19]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[18]), 
		 -> STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _keypressed in COMRAM

    _keypressed->i2_printf
    i2_printf->i2___lwdiv
    i2_putch->i2_lcdNibble
    i2_initLCD->i2_lcdInst
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    _main->_printf
    _set_time->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _printf->___lwdiv
    _putch->_lcdNibble
    _initLCD->_lcdInst
    _lcdInst->_lcdNibble
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _keypressed in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _keypressed in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _keypressed in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _keypressed in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _keypressed in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _keypressed in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _keypressed in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _keypressed in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _keypressed in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _keypressed in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _keypressed in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _keypressed in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _keypressed in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _keypressed in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _keypressed in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _keypressed in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    4107
                                             29 BANK0     13    13      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _initLCD
                            _lcdInst
                             _printf
                           _set_time
 ---------------------------------------------------------------------------------
 (1) _set_time                                             1     1      0     474
                                              3 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     406
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    23      8    2144
                                              7 BANK0     22    14      8
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     289
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                              3 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0     135
                                              2 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0     113
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      45
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _keypressed                                          40    40      0    2723
                                             25 COMRAM    40    40      0
                          i2_initLCD
                          i2_lcdInst
                           i2_printf
                            i2_putch
 ---------------------------------------------------------------------------------
 (5) i2_printf                                            27    23      4    1496
                                              7 COMRAM    18    14      4
                          i2___lwdiv
                           i2___wmul
                          i2_isdigit
                            i2_putch
 ---------------------------------------------------------------------------------
 (5) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (6) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) i2_initLCD                                            1     1      0     135
                                              3 COMRAM     1     1      0
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (5) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (6) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___wmul
     _isdigit
     _putch
       _lcdNibble
   _set_time
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _keypressed (ROOT)
   i2_initLCD
     i2_lcdInst
       i2_lcdNibble
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___wmul
     i2_isdigit
     i2_putch
       i2_lcdNibble
   i2_putch
     i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2A      2C       5       34.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     41      41       1       51.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D      34        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Feb 28 22:30:23 2017

                       l95 0748                         l98 074C        ___wmul@multiplicand 0082  
       i2___lwdiv@dividend 0001                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000                        l100 079E                        l102 07E2  
                      l252 05AA                        l184 0E54                        l248 0550  
                      l611 0A88                        l664 0B08               __CFG_CPB$OFF 000000  
                      _PEN 007E2A               __CFG_CPD$OFF 000000                        _SEN 007E28  
                      prod 000FF3                        wreg 000FE8               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l2001 07C0                       l2005 07CA  
                     l1601 0DF2                       l1621 0A22                       l1617 0A0C  
                     l1641 0AC4                       l1619 0A1C                       l1651 0AFA  
                     l1643 0ACA                       l1803 04C6                       l1629 0A76  
                     l1733 0C0A                       l1639 0AB8                       l1823 0556  
                     l1807 04FE                       l1817 052A                       l1809 0508  
                     l1761 038A                       l1729 0C00                       l1819 0536  
                     l1763 039C                       l1739 0C30                       l1749 0DCA  
                     l1773 03D6                       l1757 0376                       l1829 05B6  
                     l1941 065E                       l1791 0490                       l1783 044C  
                     l1767 03A6                       l1951 0688                       l1945 0668  
                     l1937 0622                       l1965 0710                       l1973 0732  
                     l1991 0786                       l1969 071A                       l1987 077C  
                     STR_1 FFB5                       STR_2 FFC4                       STR_3 FF75  
                     STR_4 FF30                       STR_5 FF53                       STR_6 FF64  
                     STR_7 FF1D                       STR_8 FF97                       STR_9 FFE0  
                     u1045 0BAA                       u1070 0DC8                       _LATA 000F89  
                     _LATB 000F8A                       _LATC 000F8B                       _LATD 000F8C  
                     _LATE 000F8D                       u1807 0D1C                       u1817 0B32  
                     u1827 0B3C                       u1837 0B68                       u1847 0B72  
                     u1767 0722                       u1777 078E                       u1787 07D2  
                     u1797 0CE6                       _RCEN 007E2B                       _RSEN 007E29  
                     _main 05D4                       _keys FEFD                       fsr0h 000FEA  
                     fsr1h 000FE2         i2___lwdiv@quotient 0005                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0042                       prodh 000FF4  
                     prodl 000FF3                       start 000E              __CFG_IESO$OFF 000000  
          __end_ofi2_putch 0E94              __CFG_MCLRE$ON 000000               ___param_bank 000000  
              i2_lcdNibble 0C36           ?_I2C_Master_Init 008D           ?_I2C_Master_Read 0001  
          __end_of_RtcTime FF1D           ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001  
                    ?_main 0001                      _ACKEN 007E2C                      _ACKDT 007E2D  
                    STR_10 FF86                      STR_11 FFA6                      STR_12 FFD3  
                    STR_13 FFF7                      STR_14 FFED                      STR_15 FF40  
                    STR_16 FF42            __end_of___lldiv 0A9A            __end_of___lwdiv 0B12  
                    i2l150 032C                      i2l252 09BC                      i2l248 096C  
                    i2l664 0CD4                      _PORTB 000F81                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
          __end_of_lcdInst 0E88             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000               main@keypress 009E  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000            __end_of_initLCD 0D28             __CFG_EBTRB$OFF 000000  
               i2isdigit@c 0003            __end_of_isdigit 0DFC                      _putch 0E68  
                    main@i 00A9                      pclath 000FFA                      tablat 000FF5  
         __end_ofi2___wmul 0E22                      status 000FD8             __CFG_PBADEN$ON 000000  
            i2printf@width 0017           __end_ofi2_printf 09DE         __size_ofi2___lwdiv 0052  
          __initialization 0E40         __size_ofi2_lcdInst 000C               __end_of_main 07EA  
             __end_of_keys FF0E                 i2printf@ap 0011         __size_ofi2_initLCD 0046  
       __size_ofi2_isdigit 001E                     ??_main 009D              __activetblptr 000002  
        ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0081         ??_I2C_Master_Start 0081  
                   _ADCON0 000FC2                     _ADCON1 000FC1         ??_I2C_Master_Write 0083  
          i2lcdNibble@data 0002                     ?_putch 0001            i2lcdNibble@temp 0001  
                   _INT1IF 007F80                     i2l2101 0210                     i2l2031 00E8  
                   i2l2113 023C                     i2l2041 0108                     i2l2123 025C  
                   i2l2035 00FC                     i2l2027 00E0                     i2l2117 0250  
                   i2l2109 0234                     i2l2037 0100                     i2l2045 011C  
                   i2l2143 02A8                     i2l2135 028C                     i2l2119 0254  
                   i2l2127 0270                     i2l2063 0176                     i2l2055 015A  
                   i2l2153 02C8                     i2l2145 02AC                     i2l2065 017A  
                   i2l2073 0196                     i2l2163 02F4                     i2l2139 0294  
                   i2l2091 01F0                     i2l2083 01D4                     i2l2059 0162  
                   i2l2173 0310                     i2l2149 02B4                     i2l2093 01F4  
                   i2l2069 0182                     i2l2159 02E4                     i2l2087 01DC  
                   i2l2167 0304                     i2l2177 0318                     i2l2097 01FC  
                   i2l1913 0972                     i2l1691 0CAE                     i2l1907 0950  
                   i2l1851 0804                     i2l1677 0E38                     i2l1909 0958  
                   i2l1853 0812                     i2l1687 0CA2                     i2l1863 0846  
                   i2l1847 07F4                     i2l1919 09C4                     i2l1689 0CAA  
                   i2l1881 08DE                     i2l1873 08A2                     i2l1857 0818  
                   i2l1699 0CCA                     i2l1893 090A                     i2l1897 092E  
                   i2l1899 0936              keypressed@tot 0033                  ??i2_putch 0003  
                   _SSPADD 000FC8                     _TRISC3 007CA3                     _TRISC4 007CA4  
                   _SSPBUF 000FC9             __CFG_XINST$OFF 000000                     ___wmul 0D6E  
           __CFG_STVREN$ON 000000                  ??___lldiv 0088                  ??___lwdiv 0084  
                   _passed 00AA                  ??_lcdInst 0082                     _printf 0368  
                ??_initLCD 0083   keypressed@operation_time 0031                  ??_isdigit 0080  
         __end_of_set_time 0C36          __end_ofi2___lwdiv 0CDE               __mediumconst FEFC  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
        __end_ofi2_lcdInst 0EA0          __end_ofi2_initLCD 0D6E          __end_ofi2_isdigit 0E40  
               __accesstop 0080    __end_of__initialization 0E46              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_putch 0E78                i2printf@idx 0010  
              i2printf@val 0014                  ?i2___wmul 0001         __size_of_lcdNibble 0068  
              i2putch@data 0003                keypressed@i 0036                  ?i2_printf 0008  
                  ??_putch 0082                 __pbssBANK0 00AA               ?i2_lcdNibble 0001  
                  ?___wmul 0080    keypressed@keypress_temp 0041                    ?_printf 0087  
               ??i2___wmul 0005                 ??i2_printf 000C                    _SSPCON1 000FC6  
                  _SSPCON2 000FC5                    _SSPSTAT 000FC7                    i2_putch 0E88  
        __end_of_lcdNibble 0B7A                    __Hparam 0000                    __Lparam 0000  
                  _RtcTime FF16                  ?_set_time 0001                    ___lldiv 09DE  
          __size_of___wmul 0036      keypressed@pop_can_tab 002B                    ___lwdiv 0A9A  
                  __pcinit 0E40                    __ramtop 1000                    _lcdInst 0E78  
                  __ptext0 05D4                    __ptext1 0BDA                    __ptext2 0EA0  
                  __ptext3 0EAA                    __ptext4 0EB2                    __ptext5 0368  
                  __ptext6 0E68                    __ptext7 0DD2                    __ptext8 0D6E  
                  __ptext9 0A9A            __size_of_printf 026C                    _initLCD 0CDE  
        __end_of_hexpowers FF16              i2_isdigit$606 0002                    _isdigit 0DD2  
               _keypressed 0008   __size_of_I2C_Master_Init 0060   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 0014   __size_of_I2C_Master_Stop 0008             __pintcode_body 0012  
     end_of_initialization 0E46              __Lmediumconst FEFC                    int_func 0012  
      i2___wmul@multiplier 0001  __size_of_I2C_Master_Start 0008  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0084            ___lldiv@counter 008C                 ??_set_time 0083  
                  printf@c 009C                    printf@f 0087           I2C_Master_Init@c 008D  
         I2C_Master_Read@a 0081                    postdec2 000FDD                    postinc2 000FDE  
                _PORTBbits 000F81          i2___lwdiv@divisor 0003                  i2___lwdiv 0C8C  
        i2___lwdiv@counter 0007                  i2_lcdInst 0E94                printf@width 009A  
                i2_initLCD 0D28                  i2_isdigit 0E22             __end_of___wmul 0DA4  
     __size_ofi2_lcdNibble 0056              i2lcdInst@data 0003           i2___wmul@product 0005  
           __end_of_printf 05D4               i2printf@flag 0013               i2printf@prec 0016  
      start_initialization 0E40                ?_keypressed 0001          __size_ofi2___wmul 0026  
                i2printf@c 0019                  i2printf@f 0008                 ?i2___lwdiv 0001  
        __size_ofi2_printf 01F4          ??_I2C_Master_Init 0091          ??_I2C_Master_Read 0081  
        ??_I2C_Master_Wait 0080                 ?i2_lcdInst 0001          ??_I2C_Master_Stop 0081  
               ?i2_initLCD 0001                 ?i2_isdigit 0001                   ??___wmul 0084  
         __CFG_LPT1OSC$OFF 000000                   ??_printf 008F              __pcstackBANK0 0080  
                 ?i2_putch 0001           _I2C_Master_Start 0EB2           _I2C_Master_Write 0EA0  
         ___lwdiv@dividend 0080          __CFG_CCP2MX$PORTC 000000    keypressed@tin_can_label 002F  
      __size_of_keypressed 0360                  __pintcode 0008              __pmediumconst FEFC  
                _lcdNibble 0B12                   ?___lldiv 0080                   ?___lwdiv 0080  
        __size_of_set_time 005C                   ?_lcdInst 0001                   ?_initLCD 0001  
                 ?_isdigit 0001                  _hexpowers FF0E           ___lwdiv@quotient 0084  
              ??i2___lwdiv 0005             __size_of_putch 0010            keypressed@i_320 003B  
          keypressed@i_312 0037            keypressed@i_322 003C            keypressed@i_323 003D  
          keypressed@i_315 0038            keypressed@i_316 0039            keypressed@i_325 003E  
          keypressed@i_326 003F            keypressed@i_319 003A            keypressed@i_329 0040  
              ??i2_lcdInst 0003             ___wmul@product 0084                   _LATDbits 000F8C  
              ??i2_initLCD 0004                ??i2_isdigit 0001                   i2u200_47 0C7A  
                 i2u201_47 0C84                   i2u190_47 0202                   i2u191_47 0242  
                 i2u192_47 0262                   i2u193_47 029A                   i2u185_47 00EE  
                 i2u194_47 02BA                   i2u186_47 010E                   i2u195_47 031E  
                 i2u187_47 0168                   i2u196_47 0D2E                   i2u188_47 0188  
                 i2u197_47 0D62                   i2u189_47 01E2                   i2u198_47 0C4E  
                 i2u199_47 0C58           __CFG_WDTPS$32768 000000                 ?_lcdNibble 0001  
                main@i_282 00A6                  main@i_294 00A7                  main@i_296 00A8  
        ___wmul@multiplier 0080                   i2___wmul 0DFC              lcdNibble@data 0081  
               printf@flag 0096              lcdNibble@temp 0080                 printf@prec 0099  
                 i2_printf 07EA        I2C_Master_Read@temp 0082           __size_ofi2_putch 000C  
       keypressed@keypress 0035                   __Hrparam 0000                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000      i2___wmul@multiplicand 0003           __size_of___lldiv 00BC  
         __size_of___lwdiv 0078                _isdigit$606 0081           __size_of_lcdInst 0010  
          _I2C_Master_Init 0B7A            _I2C_Master_Read 0DA4           __size_of_initLCD 004A  
          _I2C_Master_Wait 0E54            _I2C_Master_Stop 0EAA               ??_keypressed 001A  
         __size_of_isdigit 002A            ___lwdiv@divisor 0082            ___lwdiv@counter 0086  
                 __ptext10 0CDE                   __ptext11 0E78                   __ptext20 0E22  
                 __ptext12 0B12                   __ptext21 0DFC                   __ptext13 0DA4  
                 __ptext22 0C8C                   __ptext14 0E54                   __ptext23 0D28  
                 __ptext15 0B7A                   __ptext24 0E94                   __ptext16 09DE  
                 __ptext25 0C36                   __ptext18 07EA                   __ptext19 0E88  
            __size_of_main 0216                  set_time@i 0083                   _set_time 0BDA  
            ??i2_lcdNibble 0001                ??_lcdNibble 0080         __end_of_keypressed 0368  
                 int$flags 0042                  printf@idx 0095                  printf@val 0097  
                 main@time 009F                  putch@data 0082   __end_of_I2C_Master_Start 0EBA  
 __end_of_I2C_Master_Write 0EAA                 _INTCONbits 000FF2          keypressed@pop_can 0029  
        keypressed@tin_can 002D                   isdigit@c 0082                   intlevel2 0000  
         ___lldiv@dividend 0080                   printf@ap 0093    __end_of_I2C_Master_Init 0BDA  
  __end_of_I2C_Master_Read 0DD2    __end_of_I2C_Master_Wait 0E68    __end_of_I2C_Master_Stop 0EB2  
              lcdInst@data 0082        __end_ofi2_lcdNibble 0C8C           ___lldiv@quotient 0088  
        I2C_Master_Write@d 0081  
