

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Feb 21 15:41:53 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.40
    26                           ; Generated 01/12/2016 GMT
    27                           ; 
    28                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119                           
   120                           	psect	nvBANK0
   121  0059                     __pnvBANK0:	
   122  0059                     _freq:	
   123  0059                     	ds	4
   124  0015                     _CCPR1L	set	21
   125  001B                     _CCPR2L	set	27
   126  00BA                     _CCP1M2	set	186
   127  00BB                     _CCP1M3	set	187
   128  00BD                     _CCP1X	set	189
   129  00BC                     _CCP1Y	set	188
   130  00EA                     _CCP2M2	set	234
   131  00EB                     _CCP2M3	set	235
   132  00ED                     _CCP2X	set	237
   133  00EC                     _CCP2Y	set	236
   134  0040                     _RD0	set	64
   135  0041                     _RD1	set	65
   136  0042                     _RD2	set	66
   137  0043                     _RD3	set	67
   138  0090                     _T2CKPS0	set	144
   139  0091                     _T2CKPS1	set	145
   140  0092                     _TMR2ON	set	146
   141  0092                     _PR2	set	146
   142  0086                     _TRISB	set	134
   143  0088                     _TRISD	set	136
   144  0439                     _TRISC1	set	1081
   145  043A                     _TRISC2	set	1082
   146                           
   147                           ; #config settings
   148  0000                     
   149                           	psect	cinit
   150  07FC                     start_initialization:	
   151  07FC                     __initialization:	
   152  07FC                     end_of_initialization:	
   153                           ;End of C runtime variable initialization code
   154                           
   155  07FC                     __end_of__initialization:	
   156  07FC  0183               	clrf	3
   157  07FD  120A  118A  2DC9   	ljmp	_main	;jump to C main() function
   158                           
   159                           	psect	cstackCOMMON
   160  0070                     __pcstackCOMMON:	
   161  0070                     ??_PWM1_Start:	
   162  0070                     ??_PWM2_Start:	
   163                           ; 1 bytes @ 0x0
   164                           
   165  0070                     ?_main:	
   166                           ; 1 bytes @ 0x0
   167                           
   168  0070                     ?_PWM1_Start:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0070                     ?_PWM2_Start:	
   172                           ; 2 bytes @ 0x0
   173                           
   174  0070                     ?___ftpack:	
   175                           ; 2 bytes @ 0x0
   176                           
   177  0070                     ?___aldiv:	
   178                           ; 3 bytes @ 0x0
   179                           
   180  0070                     ___ftpack@arg:	
   181                           ; 4 bytes @ 0x0
   182                           
   183  0070                     ___aldiv@divisor:	
   184                           ; 3 bytes @ 0x0
   185                           
   186                           
   187                           ; 4 bytes @ 0x0
   188  0070                     	ds	3
   189  0073                     ___ftpack@exp:	
   190                           
   191                           ; 1 bytes @ 0x3
   192  0073                     	ds	1
   193  0074                     ___ftpack@sign:	
   194  0074                     ___aldiv@dividend:	
   195                           ; 1 bytes @ 0x4
   196                           
   197                           
   198                           ; 4 bytes @ 0x4
   199  0074                     	ds	1
   200  0075                     ??___ftpack:	
   201                           
   202                           ; 1 bytes @ 0x5
   203  0075                     	ds	3
   204  0078                     ??___aldiv:	
   205  0078                     ?___lwtoft:	
   206                           ; 1 bytes @ 0x8
   207                           
   208  0078                     ___lwtoft@c:	
   209                           ; 3 bytes @ 0x8
   210                           
   211                           
   212                           ; 2 bytes @ 0x8
   213  0078                     	ds	1
   214  0079                     ??_PWM_Max_Duty:	
   215  0079                     ??_PWM1_Init:	
   216                           ; 1 bytes @ 0x9
   217                           
   218  0079                     ??_PWM2_Init:	
   219                           ; 1 bytes @ 0x9
   220                           
   221                           
   222                           ; 1 bytes @ 0x9
   223  0079                     	ds	2
   224  007B                     ??___lwtoft:	
   225                           
   226                           ; 1 bytes @ 0xB
   227  007B                     	ds	2
   228  007D                     ___awtoft@sign:	
   229                           
   230                           ; 1 bytes @ 0xD
   231  007D                     	ds	1
   232                           
   233                           	psect	cstackBANK0
   234  0020                     __pcstackBANK0:	
   235  0020                     ?___ftdiv:	
   236  0020                     ___aldiv@counter:	
   237                           ; 3 bytes @ 0x0
   238                           
   239  0020                     ___ftdiv@f2:	
   240                           ; 1 bytes @ 0x0
   241                           
   242                           
   243                           ; 3 bytes @ 0x0
   244  0020                     	ds	1
   245  0021                     ___aldiv@sign:	
   246                           
   247                           ; 1 bytes @ 0x1
   248  0021                     	ds	1
   249  0022                     ___aldiv@quotient:	
   250                           
   251                           ; 4 bytes @ 0x2
   252  0022                     	ds	1
   253  0023                     ___ftdiv@f1:	
   254                           
   255                           ; 3 bytes @ 0x3
   256  0023                     	ds	3
   257  0026                     ??___ftdiv:	
   258  0026                     ?_PWM_Max_Duty:	
   259                           ; 1 bytes @ 0x6
   260                           
   261  0026                     ?_PWM1_Init:	
   262                           ; 2 bytes @ 0x6
   263                           
   264  0026                     ?_PWM2_Init:	
   265                           ; 2 bytes @ 0x6
   266                           
   267  0026                     PWM1_Init@fre:	
   268                           ; 2 bytes @ 0x6
   269                           
   270  0026                     PWM2_Init@fre:	
   271                           ; 4 bytes @ 0x6
   272                           
   273                           
   274                           ; 4 bytes @ 0x6
   275  0026                     	ds	2
   276  0028                     ?___awtoft:	
   277  0028                     ___awtoft@c:	
   278                           ; 3 bytes @ 0x8
   279                           
   280                           
   281                           ; 2 bytes @ 0x8
   282  0028                     	ds	2
   283  002A                     ___ftdiv@cntr:	
   284                           
   285                           ; 1 bytes @ 0xA
   286  002A                     	ds	1
   287  002B                     ??___awtoft:	
   288  002B                     ___ftdiv@f3:	
   289                           ; 1 bytes @ 0xB
   290                           
   291                           
   292                           ; 3 bytes @ 0xB
   293  002B                     	ds	3
   294  002E                     ___ftdiv@exp:	
   295                           
   296                           ; 1 bytes @ 0xE
   297  002E                     	ds	1
   298  002F                     ___ftdiv@sign:	
   299                           
   300                           ; 1 bytes @ 0xF
   301  002F                     	ds	1
   302  0030                     ?___ftmul:	
   303  0030                     ___ftmul@f1:	
   304                           ; 3 bytes @ 0x10
   305                           
   306                           
   307                           ; 3 bytes @ 0x10
   308  0030                     	ds	3
   309  0033                     ___ftmul@f2:	
   310                           
   311                           ; 3 bytes @ 0x13
   312  0033                     	ds	3
   313  0036                     ??___ftmul:	
   314                           
   315                           ; 1 bytes @ 0x16
   316  0036                     	ds	4
   317  003A                     ___ftmul@exp:	
   318                           
   319                           ; 1 bytes @ 0x1A
   320  003A                     	ds	1
   321  003B                     ___ftmul@f3_as_product:	
   322                           
   323                           ; 3 bytes @ 0x1B
   324  003B                     	ds	3
   325  003E                     ___ftmul@cntr:	
   326                           
   327                           ; 1 bytes @ 0x1E
   328  003E                     	ds	1
   329  003F                     ___ftmul@sign:	
   330                           
   331                           ; 1 bytes @ 0x1F
   332  003F                     	ds	1
   333  0040                     ?___fttol:	
   334  0040                     ___fttol@f1:	
   335                           ; 4 bytes @ 0x20
   336                           
   337                           
   338                           ; 3 bytes @ 0x20
   339  0040                     	ds	4
   340  0044                     ??___fttol:	
   341                           
   342                           ; 1 bytes @ 0x24
   343  0044                     	ds	4
   344  0048                     ___fttol@sign1:	
   345                           
   346                           ; 1 bytes @ 0x28
   347  0048                     	ds	1
   348  0049                     ___fttol@lval:	
   349                           
   350                           ; 4 bytes @ 0x29
   351  0049                     	ds	4
   352  004D                     ___fttol@exp1:	
   353                           
   354                           ; 1 bytes @ 0x2D
   355  004D                     	ds	1
   356  004E                     ?_PWM1_Duty:	
   357  004E                     ?_PWM2_Duty:	
   358                           ; 2 bytes @ 0x2E
   359                           
   360  004E                     PWM1_Duty@duty:	
   361                           ; 2 bytes @ 0x2E
   362                           
   363  004E                     PWM2_Duty@duty:	
   364                           ; 2 bytes @ 0x2E
   365                           
   366                           
   367                           ; 2 bytes @ 0x2E
   368  004E                     	ds	2
   369  0050                     ??_PWM1_Duty:	
   370  0050                     ??_PWM2_Duty:	
   371                           ; 1 bytes @ 0x30
   372                           
   373                           
   374                           ; 1 bytes @ 0x30
   375  0050                     	ds	2
   376  0052                     ??_main:	
   377                           
   378                           ; 1 bytes @ 0x32
   379  0052                     	ds	3
   380  0055                     main@i:	
   381                           
   382                           ; 2 bytes @ 0x35
   383  0055                     	ds	2
   384  0057                     main@j:	
   385                           
   386                           ; 2 bytes @ 0x37
   387  0057                     	ds	2
   388                           
   389                           	psect	maintext
   390  05C9                     __pmaintext:	
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 106 in file "newmain.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  j               2   55[BANK0 ] unsigned int 
   401 ;;  i               2   53[BANK0 ] unsigned int 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : B00/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   411 ;;      Params:         0       0       0       0       0
   412 ;;      Locals:         0       4       0       0       0
   413 ;;      Temps:          0       3       0       0       0
   414 ;;      Totals:         0       7       0       0       0
   415 ;;Total ram usage:        7 bytes
   416 ;; Hardware stack levels required when called:    3
   417 ;; This function calls:
   418 ;;		_PWM1_Duty
   419 ;;		_PWM1_Init
   420 ;;		_PWM1_Start
   421 ;;		_PWM2_Duty
   422 ;;		_PWM2_Init
   423 ;;		_PWM2_Start
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           
   430                           ;psect for function _main
   431  05C9                     _main:	
   432                           
   433                           ;newmain.c: 108: unsigned int i=0,j=0;
   434                           
   435                           ;incstack = 0
   436                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   437  05C9  1283               	bcf	3,5	;RP0=0, select bank0
   438  05CA  1303               	bcf	3,6	;RP1=0, select bank0
   439  05CB  01D5               	clrf	main@i
   440  05CC  01D6               	clrf	main@i+1
   441  05CD  01D7               	clrf	main@j
   442  05CE  01D8               	clrf	main@j+1
   443                           
   444                           ;newmain.c: 109: PWM1_Init(5000);
   445  05CF  3000               	movlw	0
   446  05D0  00A9               	movwf	PWM1_Init@fre+3
   447  05D1  3000               	movlw	0
   448  05D2  00A8               	movwf	PWM1_Init@fre+2
   449  05D3  3013               	movlw	19
   450  05D4  00A7               	movwf	PWM1_Init@fre+1
   451  05D5  3088               	movlw	136
   452  05D6  00A6               	movwf	PWM1_Init@fre
   453  05D7  120A  118A  22DA  120A  118A  	fcall	_PWM1_Init
   454                           
   455                           ;newmain.c: 110: PWM2_Init(5000);
   456  05DC  3000               	movlw	0
   457  05DD  1283               	bcf	3,5	;RP0=0, select bank0
   458  05DE  1303               	bcf	3,6	;RP1=0, select bank0
   459  05DF  00A9               	movwf	PWM2_Init@fre+3
   460  05E0  3000               	movlw	0
   461  05E1  00A8               	movwf	PWM2_Init@fre+2
   462  05E2  3013               	movlw	19
   463  05E3  00A7               	movwf	PWM2_Init@fre+1
   464  05E4  3088               	movlw	136
   465  05E5  00A6               	movwf	PWM2_Init@fre
   466  05E6  120A  118A  2319  120A  118A  	fcall	_PWM2_Init
   467                           
   468                           ;newmain.c: 111: TRISD = 0xFF;
   469  05EB  30FF               	movlw	255
   470  05EC  1683               	bsf	3,5	;RP0=1, select bank1
   471  05ED  1303               	bcf	3,6	;RP1=0, select bank1
   472  05EE  0088               	movwf	8	;volatile
   473                           
   474                           ;newmain.c: 112: TRISB = 0;
   475  05EF  0186               	clrf	6	;volatile
   476                           
   477                           ;newmain.c: 113: PWM1_Duty(0);
   478  05F0  3000               	movlw	0
   479  05F1  1283               	bcf	3,5	;RP0=0, select bank0
   480  05F2  1303               	bcf	3,6	;RP1=0, select bank0
   481  05F3  00CE               	movwf	PWM1_Duty@duty
   482  05F4  00CF               	movwf	PWM1_Duty@duty+1
   483  05F5  120A  118A  23C4  120A  118A  	fcall	_PWM1_Duty
   484                           
   485                           ;newmain.c: 114: PWM2_Duty(0);
   486  05FA  3000               	movlw	0
   487  05FB  1283               	bcf	3,5	;RP0=0, select bank0
   488  05FC  1303               	bcf	3,6	;RP1=0, select bank0
   489  05FD  00CE               	movwf	PWM2_Duty@duty
   490  05FE  00CF               	movwf	PWM2_Duty@duty+1
   491  05FF  120A  118A  2438  120A  118A  	fcall	_PWM2_Duty
   492                           
   493                           ;newmain.c: 115: PWM1_Start();
   494  0604  120A  118A  2260  120A  118A  	fcall	_PWM1_Start
   495                           
   496                           ;newmain.c: 116: PWM2_Start();
   497  0609  120A  118A  2269  120A  118A  	fcall	_PWM2_Start
   498  060E                     l1132:	
   499                           ;newmain.c: 117: do
   500                           
   501                           
   502                           ;newmain.c: 118: {
   503                           ;newmain.c: 119: if(RD0 == 0 && i<1000)
   504  060E  1283               	bcf	3,5	;RP0=0, select bank0
   505  060F  1303               	bcf	3,6	;RP1=0, select bank0
   506  0610  1808               	btfsc	8,0	;volatile
   507  0611  2E21               	goto	l1138
   508  0612  3003               	movlw	3
   509  0613  0256               	subwf	main@i+1,w
   510  0614  30E8               	movlw	232
   511  0615  1903               	skipnz
   512  0616  0255               	subwf	main@i,w
   513  0617  1803               	skipnc
   514  0618  2E21               	goto	l1138
   515                           
   516                           ;newmain.c: 120: i=i+10;
   517  0619  0855               	movf	main@i,w
   518  061A  3E0A               	addlw	10
   519  061B  00D5               	movwf	main@i
   520  061C  0856               	movf	main@i+1,w
   521  061D  1803               	skipnc
   522  061E  3E01               	addlw	1
   523  061F  3E00               	addlw	0
   524  0620  00D6               	movwf	main@i+1
   525  0621                     l1138:	
   526                           
   527                           ;newmain.c: 121: if(RD1 == 0 && i>0)
   528  0621  1888               	btfsc	8,1	;volatile
   529  0622  2E2F               	goto	l1144
   530  0623  0855               	movf	main@i,w
   531  0624  0456               	iorwf	main@i+1,w
   532  0625  1903               	btfsc	3,2
   533  0626  2E2F               	goto	l1144
   534                           
   535                           ;newmain.c: 122: i=i-10;
   536  0627  0855               	movf	main@i,w
   537  0628  3EF6               	addlw	246
   538  0629  00D5               	movwf	main@i
   539  062A  0856               	movf	main@i+1,w
   540  062B  1803               	skipnc
   541  062C  3E01               	addlw	1
   542  062D  3EFF               	addlw	255
   543  062E  00D6               	movwf	main@i+1
   544  062F                     l1144:	
   545                           
   546                           ;newmain.c: 123: if(RD2 == 0 && j<1000)
   547  062F  1908               	btfsc	8,2	;volatile
   548  0630  2E40               	goto	l1150
   549  0631  3003               	movlw	3
   550  0632  0258               	subwf	main@j+1,w
   551  0633  30E8               	movlw	232
   552  0634  1903               	skipnz
   553  0635  0257               	subwf	main@j,w
   554  0636  1803               	skipnc
   555  0637  2E40               	goto	l1150
   556                           
   557                           ;newmain.c: 124: j=j+10;
   558  0638  0857               	movf	main@j,w
   559  0639  3E0A               	addlw	10
   560  063A  00D7               	movwf	main@j
   561  063B  0858               	movf	main@j+1,w
   562  063C  1803               	skipnc
   563  063D  3E01               	addlw	1
   564  063E  3E00               	addlw	0
   565  063F  00D8               	movwf	main@j+1
   566  0640                     l1150:	
   567                           
   568                           ;newmain.c: 125: if(RD3 == 0 && j>0)
   569  0640  1988               	btfsc	8,3	;volatile
   570  0641  2E4E               	goto	l1156
   571  0642  0857               	movf	main@j,w
   572  0643  0458               	iorwf	main@j+1,w
   573  0644  1903               	btfsc	3,2
   574  0645  2E4E               	goto	l1156
   575                           
   576                           ;newmain.c: 126: j=j-10;
   577  0646  0857               	movf	main@j,w
   578  0647  3EF6               	addlw	246
   579  0648  00D7               	movwf	main@j
   580  0649  0858               	movf	main@j+1,w
   581  064A  1803               	skipnc
   582  064B  3E01               	addlw	1
   583  064C  3EFF               	addlw	255
   584  064D  00D8               	movwf	main@j+1
   585  064E                     l1156:	
   586                           
   587                           ;newmain.c: 127: PWM1_Duty(i);
   588  064E  0856               	movf	main@i+1,w
   589  064F  00CF               	movwf	PWM1_Duty@duty+1
   590  0650  0855               	movf	main@i,w
   591  0651  00CE               	movwf	PWM1_Duty@duty
   592  0652  120A  118A  23C4  120A  118A  	fcall	_PWM1_Duty
   593                           
   594                           ;newmain.c: 128: PWM2_Duty(j);
   595  0657  1283               	bcf	3,5	;RP0=0, select bank0
   596  0658  1303               	bcf	3,6	;RP1=0, select bank0
   597  0659  0858               	movf	main@j+1,w
   598  065A  00CF               	movwf	PWM2_Duty@duty+1
   599  065B  0857               	movf	main@j,w
   600  065C  00CE               	movwf	PWM2_Duty@duty
   601  065D  120A  118A  2438  120A  118A  	fcall	_PWM2_Duty
   602                           
   603                           ;newmain.c: 130: _delay((unsigned long)((50)*(20000000/4000.0)));
   604  0662  3002               	movlw	2
   605  0663  1283               	bcf	3,5	;RP0=0, select bank0
   606  0664  1303               	bcf	3,6	;RP1=0, select bank0
   607  0665  00D4               	movwf	??_main+2
   608  0666  3045               	movlw	69
   609  0667  00D3               	movwf	??_main+1
   610  0668  30A9               	movlw	169
   611  0669  00D2               	movwf	??_main
   612  066A                     u1497:	
   613  066A  0BD2               	decfsz	??_main,f
   614  066B  2E6A               	goto	u1497
   615  066C  0BD3               	decfsz	??_main+1,f
   616  066D  2E6A               	goto	u1497
   617  066E  0BD4               	decfsz	??_main+2,f
   618  066F  2E6A               	goto	u1497
   619                           
   620                           ;newmain.c: 131: }while(1);
   621  0670  2E0E               	goto	l1132
   622  0671                     __end_of_main:	
   623                           
   624                           	psect	text1
   625  0269                     __ptext1:	
   626 ;; *************** function _PWM2_Start *****************
   627 ;; Defined at:
   628 ;;		line 82 in file "newmain.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  2   73[None  ] int 
   635 ;; Registers used:
   636 ;;		None
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _PWM2_Start
   657  0269                     _PWM2_Start:	
   658                           
   659                           ;newmain.c: 84: CCP2M3 = 1;
   660                           
   661                           ;incstack = 0
   662                           ; Regs used in _PWM2_Start: []
   663  0269  1283               	bcf	3,5	;RP0=0, select bank0
   664  026A  1303               	bcf	3,6	;RP1=0, select bank0
   665  026B  159D               	bsf	29,3	;volatile
   666                           
   667                           ;newmain.c: 85: CCP2M2 = 1;
   668  026C  151D               	bsf	29,2	;volatile
   669                           
   670                           ;newmain.c: 90: T2CKPS0 = 1;
   671  026D  1412               	bsf	18,0	;volatile
   672                           
   673                           ;newmain.c: 91: T2CKPS1 = 0;
   674  026E  1092               	bcf	18,1	;volatile
   675                           
   676                           ;newmain.c: 96: TMR2ON = 1;
   677  026F  1512               	bsf	18,2	;volatile
   678                           
   679                           ;newmain.c: 97: TRISC1 = 0;
   680  0270  1683               	bsf	3,5	;RP0=1, select bank1
   681  0271  1303               	bcf	3,6	;RP1=0, select bank1
   682  0272  1087               	bcf	7,1	;volatile
   683  0273  0008               	return
   684  0274                     __end_of_PWM2_Start:	
   685                           
   686                           	psect	text2
   687  0319                     __ptext2:	
   688 ;; *************** function _PWM2_Init *****************
   689 ;; Defined at:
   690 ;;		line 30 in file "newmain.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  fre             4    6[BANK0 ] long 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  2    6[BANK0 ] int 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, pclath, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       4       0       0       0
   705 ;;      Locals:         0       0       0       0       0
   706 ;;      Temps:          4       0       0       0       0
   707 ;;      Totals:         4       4       0       0       0
   708 ;;Total ram usage:        8 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    1
   711 ;; This function calls:
   712 ;;		___aldiv
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _PWM2_Init
   720  0319                     _PWM2_Init:	
   721                           
   722                           ;newmain.c: 32: PR2 = (20000000/(fre*4*4)) - 1;
   723                           
   724                           ;incstack = 0
   725                           ; Regs used in _PWM2_Init: [wreg+status,2+status,0+pclath+cstack]
   726  0319  1283               	bcf	3,5	;RP0=0, select bank0
   727  031A  1303               	bcf	3,6	;RP1=0, select bank0
   728  031B  0826               	movf	PWM2_Init@fre,w
   729  031C  00F9               	movwf	??_PWM2_Init
   730  031D  0827               	movf	PWM2_Init@fre+1,w
   731  031E  00FA               	movwf	??_PWM2_Init+1
   732  031F  0828               	movf	PWM2_Init@fre+2,w
   733  0320  00FB               	movwf	??_PWM2_Init+2
   734  0321  0829               	movf	PWM2_Init@fre+3,w
   735  0322  00FC               	movwf	??_PWM2_Init+3
   736  0323  3002               	movlw	2
   737  0324                     u1335:	
   738  0324  1003               	clrc
   739  0325  0DF9               	rlf	??_PWM2_Init,f
   740  0326  0DFA               	rlf	??_PWM2_Init+1,f
   741  0327  0DFB               	rlf	??_PWM2_Init+2,f
   742  0328  0DFC               	rlf	??_PWM2_Init+3,f
   743  0329  3EFF               	addlw	-1
   744  032A  1D03               	skipz
   745  032B  2B24               	goto	u1335
   746  032C  3002               	movlw	2
   747  032D                     u1345:	
   748  032D  1003               	clrc
   749  032E  0DF9               	rlf	??_PWM2_Init,f
   750  032F  0DFA               	rlf	??_PWM2_Init+1,f
   751  0330  0DFB               	rlf	??_PWM2_Init+2,f
   752  0331  0DFC               	rlf	??_PWM2_Init+3,f
   753  0332  3EFF               	addlw	-1
   754  0333  1D03               	skipz
   755  0334  2B2D               	goto	u1345
   756  0335  087C               	movf	??_PWM2_Init+3,w
   757  0336  00F3               	movwf	___aldiv@divisor+3
   758  0337  087B               	movf	??_PWM2_Init+2,w
   759  0338  00F2               	movwf	___aldiv@divisor+2
   760  0339  087A               	movf	??_PWM2_Init+1,w
   761  033A  00F1               	movwf	___aldiv@divisor+1
   762  033B  0879               	movf	??_PWM2_Init,w
   763  033C  00F0               	movwf	___aldiv@divisor
   764  033D  3001               	movlw	1
   765  033E  00F7               	movwf	___aldiv@dividend+3
   766  033F  3031               	movlw	49
   767  0340  00F6               	movwf	___aldiv@dividend+2
   768  0341  302D               	movlw	45
   769  0342  00F5               	movwf	___aldiv@dividend+1
   770  0343  3000               	movlw	0
   771  0344  00F4               	movwf	___aldiv@dividend
   772  0345  120A  118A  253A   	fcall	___aldiv
   773  0348  0870               	movf	?___aldiv,w
   774  0349  3EFF               	addlw	255
   775  034A  1683               	bsf	3,5	;RP0=1, select bank1
   776  034B  1303               	bcf	3,6	;RP1=0, select bank1
   777  034C  0092               	movwf	18	;volatile
   778                           
   779                           ;newmain.c: 33: freq = fre;
   780  034D  1283               	bcf	3,5	;RP0=0, select bank0
   781  034E  1303               	bcf	3,6	;RP1=0, select bank0
   782  034F  0829               	movf	PWM2_Init@fre+3,w
   783  0350  00DC               	movwf	_freq+3
   784  0351  0828               	movf	PWM2_Init@fre+2,w
   785  0352  00DB               	movwf	_freq+2
   786  0353  0827               	movf	PWM2_Init@fre+1,w
   787  0354  00DA               	movwf	_freq+1
   788  0355  0826               	movf	PWM2_Init@fre,w
   789  0356  00D9               	movwf	_freq
   790  0357  0008               	return
   791  0358                     __end_of_PWM2_Init:	
   792                           
   793                           	psect	text3
   794  0438                     __ptext3:	
   795 ;; *************** function _PWM2_Duty *****************
   796 ;; Defined at:
   797 ;;		line 47 in file "newmain.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  duty            2   46[BANK0 ] unsigned int 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2   46[BANK0 ] int 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0, pclath, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       2       0       0       0
   812 ;;      Locals:         0       0       0       0       0
   813 ;;      Temps:          0       2       0       0       0
   814 ;;      Totals:         0       4       0       0       0
   815 ;;Total ram usage:        4 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    2
   818 ;; This function calls:
   819 ;;		_PWM_Max_Duty
   820 ;;		___awtoft
   821 ;;		___ftdiv
   822 ;;		___ftmul
   823 ;;		___fttol
   824 ;;		___lwtoft
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _PWM2_Duty
   832  0438                     _PWM2_Duty:	
   833                           
   834                           ;newmain.c: 49: if(duty<1024)
   835                           
   836                           ;incstack = 0
   837                           ; Regs used in _PWM2_Duty: [wreg+status,2+status,0+pclath+cstack]
   838  0438  3004               	movlw	4
   839  0439  1283               	bcf	3,5	;RP0=0, select bank0
   840  043A  1303               	bcf	3,6	;RP1=0, select bank0
   841  043B  024F               	subwf	PWM2_Duty@duty+1,w
   842  043C  3000               	movlw	0
   843  043D  1903               	skipnz
   844  043E  024E               	subwf	PWM2_Duty@duty,w
   845  043F  1803               	skipnc
   846  0440  0008               	return
   847                           
   848                           ;newmain.c: 50: {
   849                           ;newmain.c: 51: duty = ((float)duty/1023)*PWM_Max_Duty();
   850  0441  084F               	movf	PWM2_Duty@duty+1,w
   851  0442  00F9               	movwf	___lwtoft@c+1
   852  0443  084E               	movf	PWM2_Duty@duty,w
   853  0444  00F8               	movwf	___lwtoft@c
   854  0445  120A  118A  2274  120A  118A  	fcall	___lwtoft
   855  044A  0878               	movf	?___lwtoft,w
   856  044B  1283               	bcf	3,5	;RP0=0, select bank0
   857  044C  1303               	bcf	3,6	;RP1=0, select bank0
   858  044D  00A3               	movwf	___ftdiv@f1
   859  044E  0879               	movf	?___lwtoft+1,w
   860  044F  00A4               	movwf	___ftdiv@f1+1
   861  0450  087A               	movf	?___lwtoft+2,w
   862  0451  00A5               	movwf	___ftdiv@f1+2
   863  0452  30C0               	movlw	192
   864  0453  00A0               	movwf	___ftdiv@f2
   865  0454  307F               	movlw	127
   866  0455  00A1               	movwf	___ftdiv@f2+1
   867  0456  3044               	movlw	68
   868  0457  00A2               	movwf	___ftdiv@f2+2
   869  0458  120A  118A  2671  120A  118A  	fcall	___ftdiv
   870  045D  1283               	bcf	3,5	;RP0=0, select bank0
   871  045E  1303               	bcf	3,6	;RP1=0, select bank0
   872  045F  0820               	movf	?___ftdiv,w
   873  0460  00B3               	movwf	___ftmul@f2
   874  0461  0821               	movf	?___ftdiv+1,w
   875  0462  00B4               	movwf	___ftmul@f2+1
   876  0463  0822               	movf	?___ftdiv+2,w
   877  0464  00B5               	movwf	___ftmul@f2+2
   878  0465  120A  118A  22AD  120A  118A  	fcall	_PWM_Max_Duty
   879  046A  1283               	bcf	3,5	;RP0=0, select bank0
   880  046B  1303               	bcf	3,6	;RP1=0, select bank0
   881  046C  0827               	movf	?_PWM_Max_Duty+1,w
   882  046D  00A9               	movwf	___awtoft@c+1
   883  046E  0826               	movf	?_PWM_Max_Duty,w
   884  046F  00A8               	movwf	___awtoft@c
   885  0470  120A  118A  2288  120A  118A  	fcall	___awtoft
   886  0475  1283               	bcf	3,5	;RP0=0, select bank0
   887  0476  1303               	bcf	3,6	;RP1=0, select bank0
   888  0477  0828               	movf	?___awtoft,w
   889  0478  00B0               	movwf	___ftmul@f1
   890  0479  0829               	movf	?___awtoft+1,w
   891  047A  00B1               	movwf	___ftmul@f1+1
   892  047B  082A               	movf	?___awtoft+2,w
   893  047C  00B2               	movwf	___ftmul@f1+2
   894  047D  120A  118A  2729  120A  118A  	fcall	___ftmul
   895  0482  1283               	bcf	3,5	;RP0=0, select bank0
   896  0483  1303               	bcf	3,6	;RP1=0, select bank0
   897  0484  0830               	movf	?___ftmul,w
   898  0485  00C0               	movwf	___fttol@f1
   899  0486  0831               	movf	?___ftmul+1,w
   900  0487  00C1               	movwf	___fttol@f1+1
   901  0488  0832               	movf	?___ftmul+2,w
   902  0489  00C2               	movwf	___fttol@f1+2
   903  048A  120A  118A  24AC  120A  118A  	fcall	___fttol
   904  048F  1283               	bcf	3,5	;RP0=0, select bank0
   905  0490  1303               	bcf	3,6	;RP1=0, select bank0
   906  0491  0841               	movf	?___fttol+1,w
   907  0492  00CF               	movwf	PWM2_Duty@duty+1
   908  0493  0840               	movf	?___fttol,w
   909  0494  00CE               	movwf	PWM2_Duty@duty
   910                           
   911                           ;newmain.c: 52: CCP2X = duty & 2;
   912  0495  129D               	bcf	29,5	;volatile
   913                           
   914                           ;newmain.c: 53: CCP2Y = duty & 1;
   915  0496  1C4E               	btfss	PWM2_Duty@duty,0
   916  0497  2C9C               	goto	u1390
   917  0498  1283               	bcf	3,5	;RP0=0, select bank0
   918  0499  1303               	bcf	3,6	;RP1=0, select bank0
   919  049A  161D               	bsf	29,4	;volatile
   920  049B  2C9F               	goto	l1108
   921  049C                     u1390:	
   922  049C  1283               	bcf	3,5	;RP0=0, select bank0
   923  049D  1303               	bcf	3,6	;RP1=0, select bank0
   924  049E  121D               	bcf	29,4	;volatile
   925  049F                     l1108:	
   926                           
   927                           ;newmain.c: 54: CCPR2L = duty>>2;
   928  049F  084F               	movf	PWM2_Duty@duty+1,w
   929  04A0  00D1               	movwf	??_PWM2_Duty+1
   930  04A1  084E               	movf	PWM2_Duty@duty,w
   931  04A2  00D0               	movwf	??_PWM2_Duty
   932  04A3  1003               	clrc
   933  04A4  0CD1               	rrf	??_PWM2_Duty+1,f
   934  04A5  0CD0               	rrf	??_PWM2_Duty,f
   935  04A6  1003               	clrc
   936  04A7  0CD1               	rrf	??_PWM2_Duty+1,f
   937  04A8  0CD0               	rrf	??_PWM2_Duty,f
   938  04A9  0850               	movf	??_PWM2_Duty,w
   939  04AA  009B               	movwf	27	;volatile
   940  04AB  0008               	return
   941  04AC                     __end_of_PWM2_Duty:	
   942                           
   943                           	psect	text4
   944  0260                     __ptext4:	
   945 ;; *************** function _PWM1_Start *****************
   946 ;; Defined at:
   947 ;;		line 58 in file "newmain.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  2   67[None  ] int 
   954 ;; Registers used:
   955 ;;		None
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _PWM1_Start
   976  0260                     _PWM1_Start:	
   977                           
   978                           ;newmain.c: 60: CCP1M3 = 1;
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _PWM1_Start: []
   982  0260  1283               	bcf	3,5	;RP0=0, select bank0
   983  0261  1303               	bcf	3,6	;RP1=0, select bank0
   984  0262  1597               	bsf	23,3	;volatile
   985                           
   986                           ;newmain.c: 61: CCP1M2 = 1;
   987  0263  1517               	bsf	23,2	;volatile
   988                           
   989                           ;newmain.c: 72: TMR2ON = 1;
   990  0264  1512               	bsf	18,2	;volatile
   991                           
   992                           ;newmain.c: 73: TRISC2 = 0;
   993  0265  1683               	bsf	3,5	;RP0=1, select bank1
   994  0266  1303               	bcf	3,6	;RP1=0, select bank1
   995  0267  1107               	bcf	7,2	;volatile
   996  0268  0008               	return
   997  0269                     __end_of_PWM1_Start:	
   998                           
   999                           	psect	text5
  1000  02DA                     __ptext5:	
  1001 ;; *************** function _PWM1_Init *****************
  1002 ;; Defined at:
  1003 ;;		line 24 in file "newmain.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  fre             4    6[BANK0 ] long 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  2    6[BANK0 ] int 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       4       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          4       0       0       0       0
  1020 ;;      Totals:         4       4       0       0       0
  1021 ;;Total ram usage:        8 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    1
  1024 ;; This function calls:
  1025 ;;		___aldiv
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _PWM1_Init
  1033  02DA                     _PWM1_Init:	
  1034                           
  1035                           ;newmain.c: 26: PR2 = (20000000/(fre*4*4)) - 1;
  1036                           
  1037                           ;incstack = 0
  1038                           ; Regs used in _PWM1_Init: [wreg+status,2+status,0+pclath+cstack]
  1039  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1040  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1041  02DC  0826               	movf	PWM1_Init@fre,w
  1042  02DD  00F9               	movwf	??_PWM1_Init
  1043  02DE  0827               	movf	PWM1_Init@fre+1,w
  1044  02DF  00FA               	movwf	??_PWM1_Init+1
  1045  02E0  0828               	movf	PWM1_Init@fre+2,w
  1046  02E1  00FB               	movwf	??_PWM1_Init+2
  1047  02E2  0829               	movf	PWM1_Init@fre+3,w
  1048  02E3  00FC               	movwf	??_PWM1_Init+3
  1049  02E4  3002               	movlw	2
  1050  02E5                     u1315:	
  1051  02E5  1003               	clrc
  1052  02E6  0DF9               	rlf	??_PWM1_Init,f
  1053  02E7  0DFA               	rlf	??_PWM1_Init+1,f
  1054  02E8  0DFB               	rlf	??_PWM1_Init+2,f
  1055  02E9  0DFC               	rlf	??_PWM1_Init+3,f
  1056  02EA  3EFF               	addlw	-1
  1057  02EB  1D03               	skipz
  1058  02EC  2AE5               	goto	u1315
  1059  02ED  3002               	movlw	2
  1060  02EE                     u1325:	
  1061  02EE  1003               	clrc
  1062  02EF  0DF9               	rlf	??_PWM1_Init,f
  1063  02F0  0DFA               	rlf	??_PWM1_Init+1,f
  1064  02F1  0DFB               	rlf	??_PWM1_Init+2,f
  1065  02F2  0DFC               	rlf	??_PWM1_Init+3,f
  1066  02F3  3EFF               	addlw	-1
  1067  02F4  1D03               	skipz
  1068  02F5  2AEE               	goto	u1325
  1069  02F6  087C               	movf	??_PWM1_Init+3,w
  1070  02F7  00F3               	movwf	___aldiv@divisor+3
  1071  02F8  087B               	movf	??_PWM1_Init+2,w
  1072  02F9  00F2               	movwf	___aldiv@divisor+2
  1073  02FA  087A               	movf	??_PWM1_Init+1,w
  1074  02FB  00F1               	movwf	___aldiv@divisor+1
  1075  02FC  0879               	movf	??_PWM1_Init,w
  1076  02FD  00F0               	movwf	___aldiv@divisor
  1077  02FE  3001               	movlw	1
  1078  02FF  00F7               	movwf	___aldiv@dividend+3
  1079  0300  3031               	movlw	49
  1080  0301  00F6               	movwf	___aldiv@dividend+2
  1081  0302  302D               	movlw	45
  1082  0303  00F5               	movwf	___aldiv@dividend+1
  1083  0304  3000               	movlw	0
  1084  0305  00F4               	movwf	___aldiv@dividend
  1085  0306  120A  118A  253A   	fcall	___aldiv
  1086  0309  0870               	movf	?___aldiv,w
  1087  030A  3EFF               	addlw	255
  1088  030B  1683               	bsf	3,5	;RP0=1, select bank1
  1089  030C  1303               	bcf	3,6	;RP1=0, select bank1
  1090  030D  0092               	movwf	18	;volatile
  1091                           
  1092                           ;newmain.c: 27: freq = fre;
  1093  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1094  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0310  0829               	movf	PWM1_Init@fre+3,w
  1096  0311  00DC               	movwf	_freq+3
  1097  0312  0828               	movf	PWM1_Init@fre+2,w
  1098  0313  00DB               	movwf	_freq+2
  1099  0314  0827               	movf	PWM1_Init@fre+1,w
  1100  0315  00DA               	movwf	_freq+1
  1101  0316  0826               	movf	PWM1_Init@fre,w
  1102  0317  00D9               	movwf	_freq
  1103  0318  0008               	return
  1104  0319                     __end_of_PWM1_Init:	
  1105                           
  1106                           	psect	text6
  1107  03C4                     __ptext6:	
  1108 ;; *************** function _PWM1_Duty *****************
  1109 ;; Defined at:
  1110 ;;		line 36 in file "newmain.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  duty            2   46[BANK0 ] unsigned int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  2   46[BANK0 ] int 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       2       0       0       0
  1125 ;;      Locals:         0       0       0       0       0
  1126 ;;      Temps:          0       2       0       0       0
  1127 ;;      Totals:         0       4       0       0       0
  1128 ;;Total ram usage:        4 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    2
  1131 ;; This function calls:
  1132 ;;		_PWM_Max_Duty
  1133 ;;		___awtoft
  1134 ;;		___ftdiv
  1135 ;;		___ftmul
  1136 ;;		___fttol
  1137 ;;		___lwtoft
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _PWM1_Duty
  1145  03C4                     _PWM1_Duty:	
  1146                           
  1147                           ;newmain.c: 38: if(duty<1024)
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _PWM1_Duty: [wreg+status,2+status,0+pclath+cstack]
  1151  03C4  3004               	movlw	4
  1152  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1153  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1154  03C7  024F               	subwf	PWM1_Duty@duty+1,w
  1155  03C8  3000               	movlw	0
  1156  03C9  1903               	skipnz
  1157  03CA  024E               	subwf	PWM1_Duty@duty,w
  1158  03CB  1803               	skipnc
  1159  03CC  0008               	return
  1160                           
  1161                           ;newmain.c: 39: {
  1162                           ;newmain.c: 40: duty = ((float)duty/1023)*PWM_Max_Duty();
  1163  03CD  084F               	movf	PWM1_Duty@duty+1,w
  1164  03CE  00F9               	movwf	___lwtoft@c+1
  1165  03CF  084E               	movf	PWM1_Duty@duty,w
  1166  03D0  00F8               	movwf	___lwtoft@c
  1167  03D1  120A  118A  2274  120A  118A  	fcall	___lwtoft
  1168  03D6  0878               	movf	?___lwtoft,w
  1169  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1170  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1171  03D9  00A3               	movwf	___ftdiv@f1
  1172  03DA  0879               	movf	?___lwtoft+1,w
  1173  03DB  00A4               	movwf	___ftdiv@f1+1
  1174  03DC  087A               	movf	?___lwtoft+2,w
  1175  03DD  00A5               	movwf	___ftdiv@f1+2
  1176  03DE  30C0               	movlw	192
  1177  03DF  00A0               	movwf	___ftdiv@f2
  1178  03E0  307F               	movlw	127
  1179  03E1  00A1               	movwf	___ftdiv@f2+1
  1180  03E2  3044               	movlw	68
  1181  03E3  00A2               	movwf	___ftdiv@f2+2
  1182  03E4  120A  118A  2671  120A  118A  	fcall	___ftdiv
  1183  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1184  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1185  03EB  0820               	movf	?___ftdiv,w
  1186  03EC  00B3               	movwf	___ftmul@f2
  1187  03ED  0821               	movf	?___ftdiv+1,w
  1188  03EE  00B4               	movwf	___ftmul@f2+1
  1189  03EF  0822               	movf	?___ftdiv+2,w
  1190  03F0  00B5               	movwf	___ftmul@f2+2
  1191  03F1  120A  118A  22AD  120A  118A  	fcall	_PWM_Max_Duty
  1192  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1193  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1194  03F8  0827               	movf	?_PWM_Max_Duty+1,w
  1195  03F9  00A9               	movwf	___awtoft@c+1
  1196  03FA  0826               	movf	?_PWM_Max_Duty,w
  1197  03FB  00A8               	movwf	___awtoft@c
  1198  03FC  120A  118A  2288  120A  118A  	fcall	___awtoft
  1199  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0403  0828               	movf	?___awtoft,w
  1202  0404  00B0               	movwf	___ftmul@f1
  1203  0405  0829               	movf	?___awtoft+1,w
  1204  0406  00B1               	movwf	___ftmul@f1+1
  1205  0407  082A               	movf	?___awtoft+2,w
  1206  0408  00B2               	movwf	___ftmul@f1+2
  1207  0409  120A  118A  2729  120A  118A  	fcall	___ftmul
  1208  040E  1283               	bcf	3,5	;RP0=0, select bank0
  1209  040F  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0410  0830               	movf	?___ftmul,w
  1211  0411  00C0               	movwf	___fttol@f1
  1212  0412  0831               	movf	?___ftmul+1,w
  1213  0413  00C1               	movwf	___fttol@f1+1
  1214  0414  0832               	movf	?___ftmul+2,w
  1215  0415  00C2               	movwf	___fttol@f1+2
  1216  0416  120A  118A  24AC  120A  118A  	fcall	___fttol
  1217  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1218  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1219  041D  0841               	movf	?___fttol+1,w
  1220  041E  00CF               	movwf	PWM1_Duty@duty+1
  1221  041F  0840               	movf	?___fttol,w
  1222  0420  00CE               	movwf	PWM1_Duty@duty
  1223                           
  1224                           ;newmain.c: 41: CCP1X = duty & 2;
  1225  0421  1297               	bcf	23,5	;volatile
  1226                           
  1227                           ;newmain.c: 42: CCP1Y = duty & 1;
  1228  0422  1C4E               	btfss	PWM1_Duty@duty,0
  1229  0423  2C28               	goto	u1360
  1230  0424  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0425  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0426  1617               	bsf	23,4	;volatile
  1233  0427  2C2B               	goto	l1098
  1234  0428                     u1360:	
  1235  0428  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0429  1303               	bcf	3,6	;RP1=0, select bank0
  1237  042A  1217               	bcf	23,4	;volatile
  1238  042B                     l1098:	
  1239                           
  1240                           ;newmain.c: 43: CCPR1L = duty>>2;
  1241  042B  084F               	movf	PWM1_Duty@duty+1,w
  1242  042C  00D1               	movwf	??_PWM1_Duty+1
  1243  042D  084E               	movf	PWM1_Duty@duty,w
  1244  042E  00D0               	movwf	??_PWM1_Duty
  1245  042F  1003               	clrc
  1246  0430  0CD1               	rrf	??_PWM1_Duty+1,f
  1247  0431  0CD0               	rrf	??_PWM1_Duty,f
  1248  0432  1003               	clrc
  1249  0433  0CD1               	rrf	??_PWM1_Duty+1,f
  1250  0434  0CD0               	rrf	??_PWM1_Duty,f
  1251  0435  0850               	movf	??_PWM1_Duty,w
  1252  0436  0095               	movwf	21	;volatile
  1253  0437  0008               	return
  1254  0438                     __end_of_PWM1_Duty:	
  1255                           
  1256                           	psect	text7
  1257  0274                     __ptext7:	
  1258 ;; *************** function ___lwtoft *****************
  1259 ;; Defined at:
  1260 ;;		line 28 in file "/Applications/microchip/xc8/v1.40/sources/common/lwtoft.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  c               2    8[COMMON] unsigned int 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  3    8[COMMON] float 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, pclath, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         3       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0
  1276 ;;      Temps:          1       0       0       0       0
  1277 ;;      Totals:         4       0       0       0       0
  1278 ;;Total ram usage:        4 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    1
  1281 ;; This function calls:
  1282 ;;		___ftpack
  1283 ;; This function is called by:
  1284 ;;		_PWM1_Duty
  1285 ;;		_PWM2_Duty
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function ___lwtoft
  1291  0274                     ___lwtoft:	
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1295  0274  0878               	movf	___lwtoft@c,w
  1296  0275  00F0               	movwf	___ftpack@arg
  1297  0276  0879               	movf	___lwtoft@c+1,w
  1298  0277  00F1               	movwf	___ftpack@arg+1
  1299  0278  01F2               	clrf	___ftpack@arg+2
  1300  0279  308E               	movlw	142
  1301  027A  00FB               	movwf	??___lwtoft
  1302  027B  087B               	movf	??___lwtoft,w
  1303  027C  00F3               	movwf	___ftpack@exp
  1304  027D  01F4               	clrf	___ftpack@sign
  1305  027E  120A  118A  2358   	fcall	___ftpack
  1306  0281  0870               	movf	?___ftpack,w
  1307  0282  00F8               	movwf	?___lwtoft
  1308  0283  0871               	movf	?___ftpack+1,w
  1309  0284  00F9               	movwf	?___lwtoft+1
  1310  0285  0872               	movf	?___ftpack+2,w
  1311  0286  00FA               	movwf	?___lwtoft+2
  1312  0287  0008               	return
  1313  0288                     __end_of___lwtoft:	
  1314                           
  1315                           	psect	text8
  1316  04AC                     __ptext8:	
  1317 ;; *************** function ___fttol *****************
  1318 ;; Defined at:
  1319 ;;		line 44 in file "/Applications/microchip/xc8/v1.40/sources/common/fttol.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  f1              3   32[BANK0 ] float 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  lval            4   41[BANK0 ] unsigned long 
  1324 ;;  exp1            1   45[BANK0 ] unsigned char 
  1325 ;;  sign1           1   40[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  4   32[BANK0 ] long 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       4       0       0       0
  1336 ;;      Locals:         0       6       0       0       0
  1337 ;;      Temps:          0       4       0       0       0
  1338 ;;      Totals:         0      14       0       0       0
  1339 ;;Total ram usage:       14 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_PWM1_Duty
  1345 ;;		_PWM2_Duty
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function ___fttol
  1351  04AC                     ___fttol:	
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1355  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1356  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1357  04AE  0840               	movf	___fttol@f1,w
  1358  04AF  00C4               	movwf	??___fttol
  1359  04B0  0841               	movf	___fttol@f1+1,w
  1360  04B1  00C5               	movwf	??___fttol+1
  1361  04B2  0842               	movf	___fttol@f1+2,w
  1362  04B3  00C6               	movwf	??___fttol+2
  1363  04B4  1003               	clrc
  1364  04B5  0D45               	rlf	??___fttol+1,w
  1365  04B6  0D46               	rlf	??___fttol+2,w
  1366  04B7  00C7               	movwf	??___fttol+3
  1367  04B8  0847               	movf	??___fttol+3,w
  1368  04B9  00CD               	movwf	___fttol@exp1
  1369  04BA  084D               	movf	___fttol@exp1,w
  1370  04BB  1D03               	btfss	3,2
  1371  04BC  2CC6               	goto	l1042
  1372  04BD  3000               	movlw	0
  1373  04BE  00C3               	movwf	?___fttol+3
  1374  04BF  3000               	movlw	0
  1375  04C0  00C2               	movwf	?___fttol+2
  1376  04C1  3000               	movlw	0
  1377  04C2  00C1               	movwf	?___fttol+1
  1378  04C3  3000               	movlw	0
  1379  04C4  00C0               	movwf	?___fttol
  1380  04C5  0008               	return
  1381  04C6                     l1042:	
  1382  04C6  0840               	movf	___fttol@f1,w
  1383  04C7  00C4               	movwf	??___fttol
  1384  04C8  0841               	movf	___fttol@f1+1,w
  1385  04C9  00C5               	movwf	??___fttol+1
  1386  04CA  0842               	movf	___fttol@f1+2,w
  1387  04CB  00C6               	movwf	??___fttol+2
  1388  04CC  3017               	movlw	23
  1389  04CD                     u1225:	
  1390  04CD  1003               	clrc
  1391  04CE  0CC6               	rrf	??___fttol+2,f
  1392  04CF  0CC5               	rrf	??___fttol+1,f
  1393  04D0  0CC4               	rrf	??___fttol,f
  1394  04D1  3EFF               	addlw	-1
  1395  04D2  1D03               	skipz
  1396  04D3  2CCD               	goto	u1225
  1397  04D4  0844               	movf	??___fttol,w
  1398  04D5  00C7               	movwf	??___fttol+3
  1399  04D6  0847               	movf	??___fttol+3,w
  1400  04D7  00C8               	movwf	___fttol@sign1
  1401  04D8  17C1               	bsf	___fttol@f1+1,7
  1402  04D9  30FF               	movlw	255
  1403  04DA  05C0               	andwf	___fttol@f1,f
  1404  04DB  30FF               	movlw	255
  1405  04DC  05C1               	andwf	___fttol@f1+1,f
  1406  04DD  3000               	movlw	0
  1407  04DE  05C2               	andwf	___fttol@f1+2,f
  1408  04DF  0840               	movf	___fttol@f1,w
  1409  04E0  00C9               	movwf	___fttol@lval
  1410  04E1  0841               	movf	___fttol@f1+1,w
  1411  04E2  00CA               	movwf	___fttol@lval+1
  1412  04E3  0842               	movf	___fttol@f1+2,w
  1413  04E4  00CB               	movwf	___fttol@lval+2
  1414  04E5  01CC               	clrf	___fttol@lval+3
  1415  04E6  308E               	movlw	142
  1416  04E7  02CD               	subwf	___fttol@exp1,f
  1417  04E8  1FCD               	btfss	___fttol@exp1,7
  1418  04E9  2D08               	goto	l1062
  1419  04EA  084D               	movf	___fttol@exp1,w
  1420  04EB  3A80               	xorlw	128
  1421  04EC  3E8F               	addlw	143
  1422  04ED  1803               	skipnc
  1423  04EE  2CF8               	goto	l1060
  1424  04EF  3000               	movlw	0
  1425  04F0  00C3               	movwf	?___fttol+3
  1426  04F1  3000               	movlw	0
  1427  04F2  00C2               	movwf	?___fttol+2
  1428  04F3  3000               	movlw	0
  1429  04F4  00C1               	movwf	?___fttol+1
  1430  04F5  3000               	movlw	0
  1431  04F6  00C0               	movwf	?___fttol
  1432  04F7  0008               	return
  1433  04F8                     l1060:	
  1434  04F8  3001               	movlw	1
  1435  04F9                     u1255:	
  1436  04F9  1003               	clrc
  1437  04FA  0CCC               	rrf	___fttol@lval+3,f
  1438  04FB  0CCB               	rrf	___fttol@lval+2,f
  1439  04FC  0CCA               	rrf	___fttol@lval+1,f
  1440  04FD  0CC9               	rrf	___fttol@lval,f
  1441  04FE  3EFF               	addlw	-1
  1442  04FF  1D03               	skipz
  1443  0500  2CF9               	goto	u1255
  1444  0501  3001               	movlw	1
  1445  0502  00C4               	movwf	??___fttol
  1446  0503  0844               	movf	??___fttol,w
  1447  0504  07CD               	addwf	___fttol@exp1,f
  1448  0505  1903               	btfsc	3,2
  1449  0506  2D23               	goto	l1070
  1450  0507  2CF8               	goto	l1060
  1451  0508                     l1062:	
  1452  0508  3018               	movlw	24
  1453  0509  024D               	subwf	___fttol@exp1,w
  1454  050A  1C03               	skipc
  1455  050B  2D20               	goto	l422
  1456  050C  3000               	movlw	0
  1457  050D  00C3               	movwf	?___fttol+3
  1458  050E  3000               	movlw	0
  1459  050F  00C2               	movwf	?___fttol+2
  1460  0510  3000               	movlw	0
  1461  0511  00C1               	movwf	?___fttol+1
  1462  0512  3000               	movlw	0
  1463  0513  00C0               	movwf	?___fttol
  1464  0514  0008               	return
  1465  0515                     l1068:	
  1466  0515  3001               	movlw	1
  1467  0516  00C4               	movwf	??___fttol
  1468  0517                     u1285:	
  1469  0517  1003               	clrc
  1470  0518  0DC9               	rlf	___fttol@lval,f
  1471  0519  0DCA               	rlf	___fttol@lval+1,f
  1472  051A  0DCB               	rlf	___fttol@lval+2,f
  1473  051B  0DCC               	rlf	___fttol@lval+3,f
  1474  051C  0BC4               	decfsz	??___fttol,f
  1475  051D  2D17               	goto	u1285
  1476  051E  3001               	movlw	1
  1477  051F  02CD               	subwf	___fttol@exp1,f
  1478  0520                     l422:	
  1479  0520  084D               	movf	___fttol@exp1,w
  1480  0521  1D03               	btfss	3,2
  1481  0522  2D15               	goto	l1068
  1482  0523                     l1070:	
  1483  0523  0848               	movf	___fttol@sign1,w
  1484  0524  1903               	btfsc	3,2
  1485  0525  2D31               	goto	l1074
  1486  0526  09C9               	comf	___fttol@lval,f
  1487  0527  09CA               	comf	___fttol@lval+1,f
  1488  0528  09CB               	comf	___fttol@lval+2,f
  1489  0529  09CC               	comf	___fttol@lval+3,f
  1490  052A  0AC9               	incf	___fttol@lval,f
  1491  052B  1903               	skipnz
  1492  052C  0ACA               	incf	___fttol@lval+1,f
  1493  052D  1903               	skipnz
  1494  052E  0ACB               	incf	___fttol@lval+2,f
  1495  052F  1903               	skipnz
  1496  0530  0ACC               	incf	___fttol@lval+3,f
  1497  0531                     l1074:	
  1498  0531  084C               	movf	___fttol@lval+3,w
  1499  0532  00C3               	movwf	?___fttol+3
  1500  0533  084B               	movf	___fttol@lval+2,w
  1501  0534  00C2               	movwf	?___fttol+2
  1502  0535  084A               	movf	___fttol@lval+1,w
  1503  0536  00C1               	movwf	?___fttol+1
  1504  0537  0849               	movf	___fttol@lval,w
  1505  0538  00C0               	movwf	?___fttol
  1506  0539  0008               	return
  1507  053A                     __end_of___fttol:	
  1508                           
  1509                           	psect	text9
  1510  0729                     __ptext9:	
  1511 ;; *************** function ___ftmul *****************
  1512 ;; Defined at:
  1513 ;;		line 62 in file "/Applications/microchip/xc8/v1.40/sources/common/ftmul.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  f1              3   16[BANK0 ] float 
  1516 ;;  f2              3   19[BANK0 ] float 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  1519 ;;  sign            1   31[BANK0 ] unsigned char 
  1520 ;;  cntr            1   30[BANK0 ] unsigned char 
  1521 ;;  exp             1   26[BANK0 ] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  3   16[BANK0 ] float 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         0       6       0       0       0
  1532 ;;      Locals:         0       6       0       0       0
  1533 ;;      Temps:          0       4       0       0       0
  1534 ;;      Totals:         0      16       0       0       0
  1535 ;;Total ram usage:       16 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    1
  1538 ;; This function calls:
  1539 ;;		___ftpack
  1540 ;; This function is called by:
  1541 ;;		_PWM1_Duty
  1542 ;;		_PWM2_Duty
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function ___ftmul
  1548  0729                     ___ftmul:	
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1552  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1553  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1554  072B  0830               	movf	___ftmul@f1,w
  1555  072C  00B6               	movwf	??___ftmul
  1556  072D  0831               	movf	___ftmul@f1+1,w
  1557  072E  00B7               	movwf	??___ftmul+1
  1558  072F  0832               	movf	___ftmul@f1+2,w
  1559  0730  00B8               	movwf	??___ftmul+2
  1560  0731  1003               	clrc
  1561  0732  0D37               	rlf	??___ftmul+1,w
  1562  0733  0D38               	rlf	??___ftmul+2,w
  1563  0734  00B9               	movwf	??___ftmul+3
  1564  0735  0839               	movf	??___ftmul+3,w
  1565  0736  00BA               	movwf	___ftmul@exp
  1566  0737  083A               	movf	___ftmul@exp,w
  1567  0738  1D03               	btfss	3,2
  1568  0739  2F41               	goto	l992
  1569  073A  3000               	movlw	0
  1570  073B  00B0               	movwf	?___ftmul
  1571  073C  3000               	movlw	0
  1572  073D  00B1               	movwf	?___ftmul+1
  1573  073E  3000               	movlw	0
  1574  073F  00B2               	movwf	?___ftmul+2
  1575  0740  0008               	return
  1576  0741                     l992:	
  1577  0741  0833               	movf	___ftmul@f2,w
  1578  0742  00B6               	movwf	??___ftmul
  1579  0743  0834               	movf	___ftmul@f2+1,w
  1580  0744  00B7               	movwf	??___ftmul+1
  1581  0745  0835               	movf	___ftmul@f2+2,w
  1582  0746  00B8               	movwf	??___ftmul+2
  1583  0747  1003               	clrc
  1584  0748  0D37               	rlf	??___ftmul+1,w
  1585  0749  0D38               	rlf	??___ftmul+2,w
  1586  074A  00B9               	movwf	??___ftmul+3
  1587  074B  0839               	movf	??___ftmul+3,w
  1588  074C  00BF               	movwf	___ftmul@sign
  1589  074D  083F               	movf	___ftmul@sign,w
  1590  074E  1D03               	btfss	3,2
  1591  074F  2F57               	goto	l998
  1592  0750  3000               	movlw	0
  1593  0751  00B0               	movwf	?___ftmul
  1594  0752  3000               	movlw	0
  1595  0753  00B1               	movwf	?___ftmul+1
  1596  0754  3000               	movlw	0
  1597  0755  00B2               	movwf	?___ftmul+2
  1598  0756  0008               	return
  1599  0757                     l998:	
  1600  0757  083F               	movf	___ftmul@sign,w
  1601  0758  3E7B               	addlw	123
  1602  0759  00B6               	movwf	??___ftmul
  1603  075A  0836               	movf	??___ftmul,w
  1604  075B  07BA               	addwf	___ftmul@exp,f
  1605  075C  0830               	movf	___ftmul@f1,w
  1606  075D  00B6               	movwf	??___ftmul
  1607  075E  0831               	movf	___ftmul@f1+1,w
  1608  075F  00B7               	movwf	??___ftmul+1
  1609  0760  0832               	movf	___ftmul@f1+2,w
  1610  0761  00B8               	movwf	??___ftmul+2
  1611  0762  3010               	movlw	16
  1612  0763                     u1095:	
  1613  0763  1003               	clrc
  1614  0764  0CB8               	rrf	??___ftmul+2,f
  1615  0765  0CB7               	rrf	??___ftmul+1,f
  1616  0766  0CB6               	rrf	??___ftmul,f
  1617  0767  3EFF               	addlw	-1
  1618  0768  1D03               	skipz
  1619  0769  2F63               	goto	u1095
  1620  076A  0836               	movf	??___ftmul,w
  1621  076B  00B9               	movwf	??___ftmul+3
  1622  076C  0839               	movf	??___ftmul+3,w
  1623  076D  00BF               	movwf	___ftmul@sign
  1624  076E  0833               	movf	___ftmul@f2,w
  1625  076F  00B6               	movwf	??___ftmul
  1626  0770  0834               	movf	___ftmul@f2+1,w
  1627  0771  00B7               	movwf	??___ftmul+1
  1628  0772  0835               	movf	___ftmul@f2+2,w
  1629  0773  00B8               	movwf	??___ftmul+2
  1630  0774  3010               	movlw	16
  1631  0775                     u1105:	
  1632  0775  1003               	clrc
  1633  0776  0CB8               	rrf	??___ftmul+2,f
  1634  0777  0CB7               	rrf	??___ftmul+1,f
  1635  0778  0CB6               	rrf	??___ftmul,f
  1636  0779  3EFF               	addlw	-1
  1637  077A  1D03               	skipz
  1638  077B  2F75               	goto	u1105
  1639  077C  0836               	movf	??___ftmul,w
  1640  077D  00B9               	movwf	??___ftmul+3
  1641  077E  0839               	movf	??___ftmul+3,w
  1642  077F  06BF               	xorwf	___ftmul@sign,f
  1643  0780  3080               	movlw	128
  1644  0781  00B6               	movwf	??___ftmul
  1645  0782  0836               	movf	??___ftmul,w
  1646  0783  05BF               	andwf	___ftmul@sign,f
  1647  0784  17B1               	bsf	___ftmul@f1+1,7
  1648  0785  17B4               	bsf	___ftmul@f2+1,7
  1649  0786  30FF               	movlw	255
  1650  0787  05B3               	andwf	___ftmul@f2,f
  1651  0788  30FF               	movlw	255
  1652  0789  05B4               	andwf	___ftmul@f2+1,f
  1653  078A  3000               	movlw	0
  1654  078B  05B5               	andwf	___ftmul@f2+2,f
  1655  078C  3000               	movlw	0
  1656  078D  00BB               	movwf	___ftmul@f3_as_product
  1657  078E  3000               	movlw	0
  1658  078F  00BC               	movwf	___ftmul@f3_as_product+1
  1659  0790  3000               	movlw	0
  1660  0791  00BD               	movwf	___ftmul@f3_as_product+2
  1661  0792  3007               	movlw	7
  1662  0793  00B6               	movwf	??___ftmul
  1663  0794  0836               	movf	??___ftmul,w
  1664  0795  00BE               	movwf	___ftmul@cntr
  1665  0796                     l1010:	
  1666  0796  1C30               	btfss	___ftmul@f1,0
  1667  0797  2FA6               	goto	l1014
  1668  0798  0833               	movf	___ftmul@f2,w
  1669  0799  07BB               	addwf	___ftmul@f3_as_product,f
  1670  079A  0834               	movf	___ftmul@f2+1,w
  1671  079B  1103               	clrz
  1672  079C  1803               	skipnc
  1673  079D  0A34               	incf	___ftmul@f2+1,w
  1674  079E  1D03               	btfss	3,2
  1675  079F  07BC               	addwf	___ftmul@f3_as_product+1,f
  1676  07A0  0835               	movf	___ftmul@f2+2,w
  1677  07A1  1103               	clrz
  1678  07A2  1803               	skipnc
  1679  07A3  0A35               	incf	___ftmul@f2+2,w
  1680  07A4  1D03               	btfss	3,2
  1681  07A5  07BD               	addwf	___ftmul@f3_as_product+2,f
  1682  07A6                     l1014:	
  1683  07A6  3001               	movlw	1
  1684  07A7                     u1135:	
  1685  07A7  1003               	clrc
  1686  07A8  0CB2               	rrf	___ftmul@f1+2,f
  1687  07A9  0CB1               	rrf	___ftmul@f1+1,f
  1688  07AA  0CB0               	rrf	___ftmul@f1,f
  1689  07AB  3EFF               	addlw	-1
  1690  07AC  1D03               	skipz
  1691  07AD  2FA7               	goto	u1135
  1692  07AE  3001               	movlw	1
  1693  07AF                     u1145:	
  1694  07AF  1003               	clrc
  1695  07B0  0DB3               	rlf	___ftmul@f2,f
  1696  07B1  0DB4               	rlf	___ftmul@f2+1,f
  1697  07B2  0DB5               	rlf	___ftmul@f2+2,f
  1698  07B3  3EFF               	addlw	-1
  1699  07B4  1D03               	skipz
  1700  07B5  2FAF               	goto	u1145
  1701  07B6  3001               	movlw	1
  1702  07B7  02BE               	subwf	___ftmul@cntr,f
  1703  07B8  1D03               	btfss	3,2
  1704  07B9  2F96               	goto	l1010
  1705  07BA  3009               	movlw	9
  1706  07BB  00B6               	movwf	??___ftmul
  1707  07BC  0836               	movf	??___ftmul,w
  1708  07BD  00BE               	movwf	___ftmul@cntr
  1709  07BE                     l1022:	
  1710  07BE  1C30               	btfss	___ftmul@f1,0
  1711  07BF  2FCE               	goto	l1026
  1712  07C0  0833               	movf	___ftmul@f2,w
  1713  07C1  07BB               	addwf	___ftmul@f3_as_product,f
  1714  07C2  0834               	movf	___ftmul@f2+1,w
  1715  07C3  1103               	clrz
  1716  07C4  1803               	skipnc
  1717  07C5  0A34               	incf	___ftmul@f2+1,w
  1718  07C6  1D03               	btfss	3,2
  1719  07C7  07BC               	addwf	___ftmul@f3_as_product+1,f
  1720  07C8  0835               	movf	___ftmul@f2+2,w
  1721  07C9  1103               	clrz
  1722  07CA  1803               	skipnc
  1723  07CB  0A35               	incf	___ftmul@f2+2,w
  1724  07CC  1D03               	btfss	3,2
  1725  07CD  07BD               	addwf	___ftmul@f3_as_product+2,f
  1726  07CE                     l1026:	
  1727  07CE  3001               	movlw	1
  1728  07CF                     u1185:	
  1729  07CF  1003               	clrc
  1730  07D0  0CB2               	rrf	___ftmul@f1+2,f
  1731  07D1  0CB1               	rrf	___ftmul@f1+1,f
  1732  07D2  0CB0               	rrf	___ftmul@f1,f
  1733  07D3  3EFF               	addlw	-1
  1734  07D4  1D03               	skipz
  1735  07D5  2FCF               	goto	u1185
  1736  07D6  3001               	movlw	1
  1737  07D7                     u1195:	
  1738  07D7  1003               	clrc
  1739  07D8  0CBD               	rrf	___ftmul@f3_as_product+2,f
  1740  07D9  0CBC               	rrf	___ftmul@f3_as_product+1,f
  1741  07DA  0CBB               	rrf	___ftmul@f3_as_product,f
  1742  07DB  3EFF               	addlw	-1
  1743  07DC  1D03               	skipz
  1744  07DD  2FD7               	goto	u1195
  1745  07DE  3001               	movlw	1
  1746  07DF  02BE               	subwf	___ftmul@cntr,f
  1747  07E0  1D03               	btfss	3,2
  1748  07E1  2FBE               	goto	l1022
  1749  07E2  083B               	movf	___ftmul@f3_as_product,w
  1750  07E3  00F0               	movwf	___ftpack@arg
  1751  07E4  083C               	movf	___ftmul@f3_as_product+1,w
  1752  07E5  00F1               	movwf	___ftpack@arg+1
  1753  07E6  083D               	movf	___ftmul@f3_as_product+2,w
  1754  07E7  00F2               	movwf	___ftpack@arg+2
  1755  07E8  083A               	movf	___ftmul@exp,w
  1756  07E9  00B6               	movwf	??___ftmul
  1757  07EA  0836               	movf	??___ftmul,w
  1758  07EB  00F3               	movwf	___ftpack@exp
  1759  07EC  083F               	movf	___ftmul@sign,w
  1760  07ED  00B7               	movwf	??___ftmul+1
  1761  07EE  0837               	movf	??___ftmul+1,w
  1762  07EF  00F4               	movwf	___ftpack@sign
  1763  07F0  120A  118A  2358   	fcall	___ftpack
  1764  07F3  0870               	movf	?___ftpack,w
  1765  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  1766  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  1767  07F6  00B0               	movwf	?___ftmul
  1768  07F7  0871               	movf	?___ftpack+1,w
  1769  07F8  00B1               	movwf	?___ftmul+1
  1770  07F9  0872               	movf	?___ftpack+2,w
  1771  07FA  00B2               	movwf	?___ftmul+2
  1772  07FB  0008               	return
  1773  07FC                     __end_of___ftmul:	
  1774                           
  1775                           	psect	text10
  1776  0671                     __ptext10:	
  1777 ;; *************** function ___ftdiv *****************
  1778 ;; Defined at:
  1779 ;;		line 56 in file "/Applications/microchip/xc8/v1.40/sources/common/ftdiv.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  f2              3    0[BANK0 ] float 
  1782 ;;  f1              3    3[BANK0 ] float 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  f3              3   11[BANK0 ] float 
  1785 ;;  sign            1   15[BANK0 ] unsigned char 
  1786 ;;  exp             1   14[BANK0 ] unsigned char 
  1787 ;;  cntr            1   10[BANK0 ] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  3    0[BANK0 ] float 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       6       0       0       0
  1798 ;;      Locals:         0       6       0       0       0
  1799 ;;      Temps:          0       4       0       0       0
  1800 ;;      Totals:         0      16       0       0       0
  1801 ;;Total ram usage:       16 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    1
  1804 ;; This function calls:
  1805 ;;		___ftpack
  1806 ;; This function is called by:
  1807 ;;		_PWM1_Duty
  1808 ;;		_PWM2_Duty
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function ___ftdiv
  1814  0671                     ___ftdiv:	
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1818  0671  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0672  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0673  0823               	movf	___ftdiv@f1,w
  1821  0674  00A6               	movwf	??___ftdiv
  1822  0675  0824               	movf	___ftdiv@f1+1,w
  1823  0676  00A7               	movwf	??___ftdiv+1
  1824  0677  0825               	movf	___ftdiv@f1+2,w
  1825  0678  00A8               	movwf	??___ftdiv+2
  1826  0679  1003               	clrc
  1827  067A  0D27               	rlf	??___ftdiv+1,w
  1828  067B  0D28               	rlf	??___ftdiv+2,w
  1829  067C  00A9               	movwf	??___ftdiv+3
  1830  067D  0829               	movf	??___ftdiv+3,w
  1831  067E  00AE               	movwf	___ftdiv@exp
  1832  067F  082E               	movf	___ftdiv@exp,w
  1833  0680  1D03               	btfss	3,2
  1834  0681  2E89               	goto	l950
  1835  0682  3000               	movlw	0
  1836  0683  00A0               	movwf	?___ftdiv
  1837  0684  3000               	movlw	0
  1838  0685  00A1               	movwf	?___ftdiv+1
  1839  0686  3000               	movlw	0
  1840  0687  00A2               	movwf	?___ftdiv+2
  1841  0688  0008               	return
  1842  0689                     l950:	
  1843  0689  0820               	movf	___ftdiv@f2,w
  1844  068A  00A6               	movwf	??___ftdiv
  1845  068B  0821               	movf	___ftdiv@f2+1,w
  1846  068C  00A7               	movwf	??___ftdiv+1
  1847  068D  0822               	movf	___ftdiv@f2+2,w
  1848  068E  00A8               	movwf	??___ftdiv+2
  1849  068F  1003               	clrc
  1850  0690  0D27               	rlf	??___ftdiv+1,w
  1851  0691  0D28               	rlf	??___ftdiv+2,w
  1852  0692  00A9               	movwf	??___ftdiv+3
  1853  0693  0829               	movf	??___ftdiv+3,w
  1854  0694  00AF               	movwf	___ftdiv@sign
  1855  0695  082F               	movf	___ftdiv@sign,w
  1856  0696  1D03               	btfss	3,2
  1857  0697  2E9F               	goto	l956
  1858  0698  3000               	movlw	0
  1859  0699  00A0               	movwf	?___ftdiv
  1860  069A  3000               	movlw	0
  1861  069B  00A1               	movwf	?___ftdiv+1
  1862  069C  3000               	movlw	0
  1863  069D  00A2               	movwf	?___ftdiv+2
  1864  069E  0008               	return
  1865  069F                     l956:	
  1866  069F  3000               	movlw	0
  1867  06A0  00AB               	movwf	___ftdiv@f3
  1868  06A1  3000               	movlw	0
  1869  06A2  00AC               	movwf	___ftdiv@f3+1
  1870  06A3  3000               	movlw	0
  1871  06A4  00AD               	movwf	___ftdiv@f3+2
  1872  06A5  3089               	movlw	137
  1873  06A6  072F               	addwf	___ftdiv@sign,w
  1874  06A7  00A6               	movwf	??___ftdiv
  1875  06A8  0826               	movf	??___ftdiv,w
  1876  06A9  02AE               	subwf	___ftdiv@exp,f
  1877  06AA  0823               	movf	___ftdiv@f1,w
  1878  06AB  00A6               	movwf	??___ftdiv
  1879  06AC  0824               	movf	___ftdiv@f1+1,w
  1880  06AD  00A7               	movwf	??___ftdiv+1
  1881  06AE  0825               	movf	___ftdiv@f1+2,w
  1882  06AF  00A8               	movwf	??___ftdiv+2
  1883  06B0  3010               	movlw	16
  1884  06B1                     u1015:	
  1885  06B1  1003               	clrc
  1886  06B2  0CA8               	rrf	??___ftdiv+2,f
  1887  06B3  0CA7               	rrf	??___ftdiv+1,f
  1888  06B4  0CA6               	rrf	??___ftdiv,f
  1889  06B5  3EFF               	addlw	-1
  1890  06B6  1D03               	skipz
  1891  06B7  2EB1               	goto	u1015
  1892  06B8  0826               	movf	??___ftdiv,w
  1893  06B9  00A9               	movwf	??___ftdiv+3
  1894  06BA  0829               	movf	??___ftdiv+3,w
  1895  06BB  00AF               	movwf	___ftdiv@sign
  1896  06BC  0820               	movf	___ftdiv@f2,w
  1897  06BD  00A6               	movwf	??___ftdiv
  1898  06BE  0821               	movf	___ftdiv@f2+1,w
  1899  06BF  00A7               	movwf	??___ftdiv+1
  1900  06C0  0822               	movf	___ftdiv@f2+2,w
  1901  06C1  00A8               	movwf	??___ftdiv+2
  1902  06C2  3010               	movlw	16
  1903  06C3                     u1025:	
  1904  06C3  1003               	clrc
  1905  06C4  0CA8               	rrf	??___ftdiv+2,f
  1906  06C5  0CA7               	rrf	??___ftdiv+1,f
  1907  06C6  0CA6               	rrf	??___ftdiv,f
  1908  06C7  3EFF               	addlw	-1
  1909  06C8  1D03               	skipz
  1910  06C9  2EC3               	goto	u1025
  1911  06CA  0826               	movf	??___ftdiv,w
  1912  06CB  00A9               	movwf	??___ftdiv+3
  1913  06CC  0829               	movf	??___ftdiv+3,w
  1914  06CD  06AF               	xorwf	___ftdiv@sign,f
  1915  06CE  3080               	movlw	128
  1916  06CF  00A6               	movwf	??___ftdiv
  1917  06D0  0826               	movf	??___ftdiv,w
  1918  06D1  05AF               	andwf	___ftdiv@sign,f
  1919  06D2  17A4               	bsf	___ftdiv@f1+1,7
  1920  06D3  30FF               	movlw	255
  1921  06D4  05A3               	andwf	___ftdiv@f1,f
  1922  06D5  30FF               	movlw	255
  1923  06D6  05A4               	andwf	___ftdiv@f1+1,f
  1924  06D7  3000               	movlw	0
  1925  06D8  05A5               	andwf	___ftdiv@f1+2,f
  1926  06D9  17A1               	bsf	___ftdiv@f2+1,7
  1927  06DA  30FF               	movlw	255
  1928  06DB  05A0               	andwf	___ftdiv@f2,f
  1929  06DC  30FF               	movlw	255
  1930  06DD  05A1               	andwf	___ftdiv@f2+1,f
  1931  06DE  3000               	movlw	0
  1932  06DF  05A2               	andwf	___ftdiv@f2+2,f
  1933  06E0  3018               	movlw	24
  1934  06E1  00A6               	movwf	??___ftdiv
  1935  06E2  0826               	movf	??___ftdiv,w
  1936  06E3  00AA               	movwf	___ftdiv@cntr
  1937  06E4                     l970:	
  1938  06E4  3001               	movlw	1
  1939  06E5                     u1035:	
  1940  06E5  1003               	clrc
  1941  06E6  0DAB               	rlf	___ftdiv@f3,f
  1942  06E7  0DAC               	rlf	___ftdiv@f3+1,f
  1943  06E8  0DAD               	rlf	___ftdiv@f3+2,f
  1944  06E9  3EFF               	addlw	-1
  1945  06EA  1D03               	skipz
  1946  06EB  2EE5               	goto	u1035
  1947  06EC  0822               	movf	___ftdiv@f2+2,w
  1948  06ED  0225               	subwf	___ftdiv@f1+2,w
  1949  06EE  1D03               	skipz
  1950  06EF  2EF6               	goto	u1045
  1951  06F0  0821               	movf	___ftdiv@f2+1,w
  1952  06F1  0224               	subwf	___ftdiv@f1+1,w
  1953  06F2  1D03               	skipz
  1954  06F3  2EF6               	goto	u1045
  1955  06F4  0820               	movf	___ftdiv@f2,w
  1956  06F5  0223               	subwf	___ftdiv@f1,w
  1957  06F6                     u1045:	
  1958  06F6  1C03               	skipc
  1959  06F7  2F03               	goto	l978
  1960  06F8  0820               	movf	___ftdiv@f2,w
  1961  06F9  02A3               	subwf	___ftdiv@f1,f
  1962  06FA  0821               	movf	___ftdiv@f2+1,w
  1963  06FB  1C03               	skipc
  1964  06FC  0F21               	incfsz	___ftdiv@f2+1,w
  1965  06FD  02A4               	subwf	___ftdiv@f1+1,f
  1966  06FE  0822               	movf	___ftdiv@f2+2,w
  1967  06FF  1C03               	skipc
  1968  0700  0A22               	incf	___ftdiv@f2+2,w
  1969  0701  02A5               	subwf	___ftdiv@f1+2,f
  1970  0702  142B               	bsf	___ftdiv@f3,0
  1971  0703                     l978:	
  1972  0703  3001               	movlw	1
  1973  0704                     u1055:	
  1974  0704  1003               	clrc
  1975  0705  0DA3               	rlf	___ftdiv@f1,f
  1976  0706  0DA4               	rlf	___ftdiv@f1+1,f
  1977  0707  0DA5               	rlf	___ftdiv@f1+2,f
  1978  0708  3EFF               	addlw	-1
  1979  0709  1D03               	skipz
  1980  070A  2F04               	goto	u1055
  1981  070B  3001               	movlw	1
  1982  070C  02AA               	subwf	___ftdiv@cntr,f
  1983  070D  1D03               	btfss	3,2
  1984  070E  2EE4               	goto	l970
  1985  070F  082B               	movf	___ftdiv@f3,w
  1986  0710  00F0               	movwf	___ftpack@arg
  1987  0711  082C               	movf	___ftdiv@f3+1,w
  1988  0712  00F1               	movwf	___ftpack@arg+1
  1989  0713  082D               	movf	___ftdiv@f3+2,w
  1990  0714  00F2               	movwf	___ftpack@arg+2
  1991  0715  082E               	movf	___ftdiv@exp,w
  1992  0716  00A6               	movwf	??___ftdiv
  1993  0717  0826               	movf	??___ftdiv,w
  1994  0718  00F3               	movwf	___ftpack@exp
  1995  0719  082F               	movf	___ftdiv@sign,w
  1996  071A  00A7               	movwf	??___ftdiv+1
  1997  071B  0827               	movf	??___ftdiv+1,w
  1998  071C  00F4               	movwf	___ftpack@sign
  1999  071D  120A  118A  2358   	fcall	___ftpack
  2000  0720  0870               	movf	?___ftpack,w
  2001  0721  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0722  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0723  00A0               	movwf	?___ftdiv
  2004  0724  0871               	movf	?___ftpack+1,w
  2005  0725  00A1               	movwf	?___ftdiv+1
  2006  0726  0872               	movf	?___ftpack+2,w
  2007  0727  00A2               	movwf	?___ftdiv+2
  2008  0728  0008               	return
  2009  0729                     __end_of___ftdiv:	
  2010                           
  2011                           	psect	text11
  2012  0288                     __ptext11:	
  2013 ;; *************** function ___awtoft *****************
  2014 ;; Defined at:
  2015 ;;		line 32 in file "/Applications/microchip/xc8/v1.40/sources/common/awtoft.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  c               2    8[BANK0 ] int 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  sign            1   13[COMMON] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  3    8[BANK0 ] float 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2029 ;;      Params:         0       3       0       0       0
  2030 ;;      Locals:         1       0       0       0       0
  2031 ;;      Temps:          0       2       0       0       0
  2032 ;;      Totals:         1       5       0       0       0
  2033 ;;Total ram usage:        6 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    1
  2036 ;; This function calls:
  2037 ;;		___ftpack
  2038 ;; This function is called by:
  2039 ;;		_PWM1_Duty
  2040 ;;		_PWM2_Duty
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function ___awtoft
  2046  0288                     ___awtoft:	
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2050  0288  01FD               	clrf	___awtoft@sign
  2051  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2052  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2053  028B  1FA9               	btfss	___awtoft@c+1,7
  2054  028C  2A94               	goto	l940
  2055  028D  09A8               	comf	___awtoft@c,f
  2056  028E  09A9               	comf	___awtoft@c+1,f
  2057  028F  0AA8               	incf	___awtoft@c,f
  2058  0290  1903               	skipnz
  2059  0291  0AA9               	incf	___awtoft@c+1,f
  2060  0292  01FD               	clrf	___awtoft@sign
  2061  0293  0AFD               	incf	___awtoft@sign,f
  2062  0294                     l940:	
  2063  0294  0828               	movf	___awtoft@c,w
  2064  0295  00F0               	movwf	___ftpack@arg
  2065  0296  0829               	movf	___awtoft@c+1,w
  2066  0297  00F1               	movwf	___ftpack@arg+1
  2067  0298  01F2               	clrf	___ftpack@arg+2
  2068  0299  308E               	movlw	142
  2069  029A  00AB               	movwf	??___awtoft
  2070  029B  082B               	movf	??___awtoft,w
  2071  029C  00F3               	movwf	___ftpack@exp
  2072  029D  087D               	movf	___awtoft@sign,w
  2073  029E  00AC               	movwf	??___awtoft+1
  2074  029F  082C               	movf	??___awtoft+1,w
  2075  02A0  00F4               	movwf	___ftpack@sign
  2076  02A1  120A  118A  2358   	fcall	___ftpack
  2077  02A4  0870               	movf	?___ftpack,w
  2078  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2079  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2080  02A7  00A8               	movwf	?___awtoft
  2081  02A8  0871               	movf	?___ftpack+1,w
  2082  02A9  00A9               	movwf	?___awtoft+1
  2083  02AA  0872               	movf	?___ftpack+2,w
  2084  02AB  00AA               	movwf	?___awtoft+2
  2085  02AC  0008               	return
  2086  02AD                     __end_of___awtoft:	
  2087                           
  2088                           	psect	text12
  2089  0358                     __ptext12:	
  2090 ;; *************** function ___ftpack *****************
  2091 ;; Defined at:
  2092 ;;		line 62 in file "/Applications/microchip/xc8/v1.40/sources/common/float.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  arg             3    0[COMMON] unsigned um
  2095 ;;  exp             1    3[COMMON] unsigned char 
  2096 ;;  sign            1    4[COMMON] unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  3    0[COMMON] float 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         5       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0
  2110 ;;      Temps:          3       0       0       0       0
  2111 ;;      Totals:         8       0       0       0       0
  2112 ;;Total ram usage:        8 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		___awtoft
  2118 ;;		___ftdiv
  2119 ;;		___ftmul
  2120 ;;		___lwtoft
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function ___ftpack
  2126  0358                     ___ftpack:	
  2127                           
  2128                           ;incstack = 0
  2129                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2130  0358  0873               	movf	___ftpack@exp,w
  2131  0359  1903               	btfsc	3,2
  2132  035A  2B60               	goto	l860
  2133  035B  0872               	movf	___ftpack@arg+2,w
  2134  035C  0471               	iorwf	___ftpack@arg+1,w
  2135  035D  0470               	iorwf	___ftpack@arg,w
  2136  035E  1D03               	skipz
  2137  035F  2B73               	goto	l866
  2138  0360                     l860:	
  2139  0360  3000               	movlw	0
  2140  0361  00F0               	movwf	?___ftpack
  2141  0362  3000               	movlw	0
  2142  0363  00F1               	movwf	?___ftpack+1
  2143  0364  3000               	movlw	0
  2144  0365  00F2               	movwf	?___ftpack+2
  2145  0366  0008               	return
  2146  0367                     l864:	
  2147  0367  3001               	movlw	1
  2148  0368  00F5               	movwf	??___ftpack
  2149  0369  0875               	movf	??___ftpack,w
  2150  036A  07F3               	addwf	___ftpack@exp,f
  2151  036B  3001               	movlw	1
  2152  036C                     u775:	
  2153  036C  1003               	clrc
  2154  036D  0CF2               	rrf	___ftpack@arg+2,f
  2155  036E  0CF1               	rrf	___ftpack@arg+1,f
  2156  036F  0CF0               	rrf	___ftpack@arg,f
  2157  0370  3EFF               	addlw	-1
  2158  0371  1D03               	skipz
  2159  0372  2B6C               	goto	u775
  2160  0373                     l866:	
  2161  0373  30FE               	movlw	254
  2162  0374  0572               	andwf	___ftpack@arg+2,w
  2163  0375  1903               	btfsc	3,2
  2164  0376  2B8E               	goto	l331
  2165  0377  2B67               	goto	l864
  2166  0378                     l868:	
  2167  0378  3001               	movlw	1
  2168  0379  00F5               	movwf	??___ftpack
  2169  037A  0875               	movf	??___ftpack,w
  2170  037B  07F3               	addwf	___ftpack@exp,f
  2171  037C  3001               	movlw	1
  2172  037D  07F0               	addwf	___ftpack@arg,f
  2173  037E  3000               	movlw	0
  2174  037F  1803               	skipnc
  2175  0380  3001               	movlw	1
  2176  0381  07F1               	addwf	___ftpack@arg+1,f
  2177  0382  3000               	movlw	0
  2178  0383  1803               	skipnc
  2179  0384  3001               	movlw	1
  2180  0385  07F2               	addwf	___ftpack@arg+2,f
  2181  0386  3001               	movlw	1
  2182  0387                     u795:	
  2183  0387  1003               	clrc
  2184  0388  0CF2               	rrf	___ftpack@arg+2,f
  2185  0389  0CF1               	rrf	___ftpack@arg+1,f
  2186  038A  0CF0               	rrf	___ftpack@arg,f
  2187  038B  3EFF               	addlw	-1
  2188  038C  1D03               	skipz
  2189  038D  2B87               	goto	u795
  2190  038E                     l331:	
  2191  038E  30FF               	movlw	255
  2192  038F  0572               	andwf	___ftpack@arg+2,w
  2193  0390  1903               	btfsc	3,2
  2194  0391  2B9D               	goto	l876
  2195  0392  2B78               	goto	l868
  2196  0393                     l874:	
  2197  0393  3001               	movlw	1
  2198  0394  02F3               	subwf	___ftpack@exp,f
  2199  0395  3001               	movlw	1
  2200  0396                     u815:	
  2201  0396  1003               	clrc
  2202  0397  0DF0               	rlf	___ftpack@arg,f
  2203  0398  0DF1               	rlf	___ftpack@arg+1,f
  2204  0399  0DF2               	rlf	___ftpack@arg+2,f
  2205  039A  3EFF               	addlw	-1
  2206  039B  1D03               	skipz
  2207  039C  2B96               	goto	u815
  2208  039D                     l876:	
  2209  039D  1BF1               	btfsc	___ftpack@arg+1,7
  2210  039E  2BA3               	goto	l338
  2211  039F  3002               	movlw	2
  2212  03A0  0273               	subwf	___ftpack@exp,w
  2213  03A1  1803               	skipnc
  2214  03A2  2B93               	goto	l874
  2215  03A3                     l338:	
  2216  03A3  1873               	btfsc	___ftpack@exp,0
  2217  03A4  2BAB               	goto	l339
  2218  03A5  30FF               	movlw	255
  2219  03A6  05F0               	andwf	___ftpack@arg,f
  2220  03A7  307F               	movlw	127
  2221  03A8  05F1               	andwf	___ftpack@arg+1,f
  2222  03A9  30FF               	movlw	255
  2223  03AA  05F2               	andwf	___ftpack@arg+2,f
  2224  03AB                     l339:	
  2225  03AB  1003               	clrc
  2226  03AC  0CF3               	rrf	___ftpack@exp,f
  2227  03AD  0873               	movf	___ftpack@exp,w
  2228  03AE  00F5               	movwf	??___ftpack
  2229  03AF  01F6               	clrf	??___ftpack+1
  2230  03B0  01F7               	clrf	??___ftpack+2
  2231  03B1  3010               	movlw	16
  2232  03B2                     u855:	
  2233  03B2  1003               	clrc
  2234  03B3  0DF5               	rlf	??___ftpack,f
  2235  03B4  0DF6               	rlf	??___ftpack+1,f
  2236  03B5  0DF7               	rlf	??___ftpack+2,f
  2237  03B6  3EFF               	addlw	-1
  2238  03B7  1D03               	skipz
  2239  03B8  2BB2               	goto	u855
  2240  03B9  0875               	movf	??___ftpack,w
  2241  03BA  04F0               	iorwf	___ftpack@arg,f
  2242  03BB  0876               	movf	??___ftpack+1,w
  2243  03BC  04F1               	iorwf	___ftpack@arg+1,f
  2244  03BD  0877               	movf	??___ftpack+2,w
  2245  03BE  04F2               	iorwf	___ftpack@arg+2,f
  2246  03BF  0874               	movf	___ftpack@sign,w
  2247  03C0  1903               	btfsc	3,2
  2248  03C1  0008               	return
  2249  03C2  17F2               	bsf	___ftpack@arg+2,7
  2250  03C3  0008               	return
  2251  03C4                     __end_of___ftpack:	
  2252                           
  2253                           	psect	text13
  2254  02AD                     __ptext13:	
  2255 ;; *************** function _PWM_Max_Duty *****************
  2256 ;; Defined at:
  2257 ;;		line 19 in file "newmain.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  2    6[BANK0 ] int 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, pclath, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       2       0       0       0
  2272 ;;      Locals:         0       0       0       0       0
  2273 ;;      Temps:          4       0       0       0       0
  2274 ;;      Totals:         4       2       0       0       0
  2275 ;;Total ram usage:        6 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    1
  2278 ;; This function calls:
  2279 ;;		___aldiv
  2280 ;; This function is called by:
  2281 ;;		_PWM1_Duty
  2282 ;;		_PWM2_Duty
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _PWM_Max_Duty
  2288  02AD                     _PWM_Max_Duty:	
  2289                           
  2290                           ;newmain.c: 21: return(20000000/(freq*4);
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _PWM_Max_Duty: [wreg+status,2+status,0+pclath+cstack]
  2294  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2295  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2296  02AF  0859               	movf	_freq,w
  2297  02B0  00F9               	movwf	??_PWM_Max_Duty
  2298  02B1  085A               	movf	_freq+1,w
  2299  02B2  00FA               	movwf	??_PWM_Max_Duty+1
  2300  02B3  085B               	movf	_freq+2,w
  2301  02B4  00FB               	movwf	??_PWM_Max_Duty+2
  2302  02B5  085C               	movf	_freq+3,w
  2303  02B6  00FC               	movwf	??_PWM_Max_Duty+3
  2304  02B7  3002               	movlw	2
  2305  02B8                     u975:	
  2306  02B8  1003               	clrc
  2307  02B9  0DF9               	rlf	??_PWM_Max_Duty,f
  2308  02BA  0DFA               	rlf	??_PWM_Max_Duty+1,f
  2309  02BB  0DFB               	rlf	??_PWM_Max_Duty+2,f
  2310  02BC  0DFC               	rlf	??_PWM_Max_Duty+3,f
  2311  02BD  3EFF               	addlw	-1
  2312  02BE  1D03               	skipz
  2313  02BF  2AB8               	goto	u975
  2314  02C0  087C               	movf	??_PWM_Max_Duty+3,w
  2315  02C1  00F3               	movwf	___aldiv@divisor+3
  2316  02C2  087B               	movf	??_PWM_Max_Duty+2,w
  2317  02C3  00F2               	movwf	___aldiv@divisor+2
  2318  02C4  087A               	movf	??_PWM_Max_Duty+1,w
  2319  02C5  00F1               	movwf	___aldiv@divisor+1
  2320  02C6  0879               	movf	??_PWM_Max_Duty,w
  2321  02C7  00F0               	movwf	___aldiv@divisor
  2322  02C8  3001               	movlw	1
  2323  02C9  00F7               	movwf	___aldiv@dividend+3
  2324  02CA  3031               	movlw	49
  2325  02CB  00F6               	movwf	___aldiv@dividend+2
  2326  02CC  302D               	movlw	45
  2327  02CD  00F5               	movwf	___aldiv@dividend+1
  2328  02CE  3000               	movlw	0
  2329  02CF  00F4               	movwf	___aldiv@dividend
  2330  02D0  120A  118A  253A   	fcall	___aldiv
  2331  02D3  0871               	movf	?___aldiv+1,w
  2332  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2333  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2334  02D6  00A7               	movwf	?_PWM_Max_Duty+1
  2335  02D7  0870               	movf	?___aldiv,w
  2336  02D8  00A6               	movwf	?_PWM_Max_Duty
  2337  02D9  0008               	return
  2338  02DA                     __end_of_PWM_Max_Duty:	
  2339                           
  2340                           	psect	text14
  2341  053A                     __ptext14:	
  2342 ;; *************** function ___aldiv *****************
  2343 ;; Defined at:
  2344 ;;		line 6 in file "/Applications/microchip/xc8/v1.40/sources/common/aldiv.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  divisor         4    0[COMMON] long 
  2347 ;;  dividend        4    4[COMMON] long 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  quotient        4    2[BANK0 ] long 
  2350 ;;  sign            1    1[BANK0 ] unsigned char 
  2351 ;;  counter         1    0[BANK0 ] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  4    0[COMMON] long 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         8       0       0       0       0
  2362 ;;      Locals:         0       6       0       0       0
  2363 ;;      Temps:          1       0       0       0       0
  2364 ;;      Totals:         9       6       0       0       0
  2365 ;;Total ram usage:       15 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_PWM_Max_Duty
  2371 ;;		_PWM1_Init
  2372 ;;		_PWM2_Init
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function ___aldiv
  2378  053A                     ___aldiv:	
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2382  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2383  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2384  053C  01A1               	clrf	___aldiv@sign
  2385  053D  1FF3               	btfss	___aldiv@divisor+3,7
  2386  053E  2D4C               	goto	l225
  2387  053F  09F0               	comf	___aldiv@divisor,f
  2388  0540  09F1               	comf	___aldiv@divisor+1,f
  2389  0541  09F2               	comf	___aldiv@divisor+2,f
  2390  0542  09F3               	comf	___aldiv@divisor+3,f
  2391  0543  0AF0               	incf	___aldiv@divisor,f
  2392  0544  1903               	skipnz
  2393  0545  0AF1               	incf	___aldiv@divisor+1,f
  2394  0546  1903               	skipnz
  2395  0547  0AF2               	incf	___aldiv@divisor+2,f
  2396  0548  1903               	skipnz
  2397  0549  0AF3               	incf	___aldiv@divisor+3,f
  2398  054A  01A1               	clrf	___aldiv@sign
  2399  054B  0AA1               	incf	___aldiv@sign,f
  2400  054C                     l225:	
  2401  054C  1FF7               	btfss	___aldiv@dividend+3,7
  2402  054D  2D5D               	goto	l898
  2403  054E  09F4               	comf	___aldiv@dividend,f
  2404  054F  09F5               	comf	___aldiv@dividend+1,f
  2405  0550  09F6               	comf	___aldiv@dividend+2,f
  2406  0551  09F7               	comf	___aldiv@dividend+3,f
  2407  0552  0AF4               	incf	___aldiv@dividend,f
  2408  0553  1903               	skipnz
  2409  0554  0AF5               	incf	___aldiv@dividend+1,f
  2410  0555  1903               	skipnz
  2411  0556  0AF6               	incf	___aldiv@dividend+2,f
  2412  0557  1903               	skipnz
  2413  0558  0AF7               	incf	___aldiv@dividend+3,f
  2414  0559  3001               	movlw	1
  2415  055A  00F8               	movwf	??___aldiv
  2416  055B  0878               	movf	??___aldiv,w
  2417  055C  06A1               	xorwf	___aldiv@sign,f
  2418  055D                     l898:	
  2419  055D  3000               	movlw	0
  2420  055E  00A5               	movwf	___aldiv@quotient+3
  2421  055F  3000               	movlw	0
  2422  0560  00A4               	movwf	___aldiv@quotient+2
  2423  0561  3000               	movlw	0
  2424  0562  00A3               	movwf	___aldiv@quotient+1
  2425  0563  3000               	movlw	0
  2426  0564  00A2               	movwf	___aldiv@quotient
  2427  0565  0873               	movf	___aldiv@divisor+3,w
  2428  0566  0472               	iorwf	___aldiv@divisor+2,w
  2429  0567  0471               	iorwf	___aldiv@divisor+1,w
  2430  0568  0470               	iorwf	___aldiv@divisor,w
  2431  0569  1903               	skipnz
  2432  056A  2DB2               	goto	l920
  2433  056B  01A0               	clrf	___aldiv@counter
  2434  056C  0AA0               	incf	___aldiv@counter,f
  2435  056D                     l906:	
  2436  056D  1BF3               	btfsc	___aldiv@divisor+3,7
  2437  056E  2D7D               	goto	l908
  2438  056F  3001               	movlw	1
  2439  0570  00F8               	movwf	??___aldiv
  2440  0571                     u905:	
  2441  0571  1003               	clrc
  2442  0572  0DF0               	rlf	___aldiv@divisor,f
  2443  0573  0DF1               	rlf	___aldiv@divisor+1,f
  2444  0574  0DF2               	rlf	___aldiv@divisor+2,f
  2445  0575  0DF3               	rlf	___aldiv@divisor+3,f
  2446  0576  0BF8               	decfsz	??___aldiv,f
  2447  0577  2D71               	goto	u905
  2448  0578  3001               	movlw	1
  2449  0579  00F8               	movwf	??___aldiv
  2450  057A  0878               	movf	??___aldiv,w
  2451  057B  07A0               	addwf	___aldiv@counter,f
  2452  057C  2D6D               	goto	l906
  2453  057D                     l908:	
  2454  057D  3001               	movlw	1
  2455  057E  00F8               	movwf	??___aldiv
  2456  057F                     u925:	
  2457  057F  1003               	clrc
  2458  0580  0DA2               	rlf	___aldiv@quotient,f
  2459  0581  0DA3               	rlf	___aldiv@quotient+1,f
  2460  0582  0DA4               	rlf	___aldiv@quotient+2,f
  2461  0583  0DA5               	rlf	___aldiv@quotient+3,f
  2462  0584  0BF8               	decfsz	??___aldiv,f
  2463  0585  2D7F               	goto	u925
  2464  0586  0873               	movf	___aldiv@divisor+3,w
  2465  0587  0277               	subwf	___aldiv@dividend+3,w
  2466  0588  1D03               	skipz
  2467  0589  2D94               	goto	u935
  2468  058A  0872               	movf	___aldiv@divisor+2,w
  2469  058B  0276               	subwf	___aldiv@dividend+2,w
  2470  058C  1D03               	skipz
  2471  058D  2D94               	goto	u935
  2472  058E  0871               	movf	___aldiv@divisor+1,w
  2473  058F  0275               	subwf	___aldiv@dividend+1,w
  2474  0590  1D03               	skipz
  2475  0591  2D94               	goto	u935
  2476  0592  0870               	movf	___aldiv@divisor,w
  2477  0593  0274               	subwf	___aldiv@dividend,w
  2478  0594                     u935:	
  2479  0594  1C03               	skipc
  2480  0595  2DA5               	goto	l916
  2481  0596  0870               	movf	___aldiv@divisor,w
  2482  0597  02F4               	subwf	___aldiv@dividend,f
  2483  0598  0871               	movf	___aldiv@divisor+1,w
  2484  0599  1C03               	skipc
  2485  059A  0F71               	incfsz	___aldiv@divisor+1,w
  2486  059B  02F5               	subwf	___aldiv@dividend+1,f
  2487  059C  0872               	movf	___aldiv@divisor+2,w
  2488  059D  1C03               	skipc
  2489  059E  0F72               	incfsz	___aldiv@divisor+2,w
  2490  059F  02F6               	subwf	___aldiv@dividend+2,f
  2491  05A0  0873               	movf	___aldiv@divisor+3,w
  2492  05A1  1C03               	skipc
  2493  05A2  0F73               	incfsz	___aldiv@divisor+3,w
  2494  05A3  02F7               	subwf	___aldiv@dividend+3,f
  2495  05A4  1422               	bsf	___aldiv@quotient,0
  2496  05A5                     l916:	
  2497  05A5  3001               	movlw	1
  2498  05A6                     u945:	
  2499  05A6  1003               	clrc
  2500  05A7  0CF3               	rrf	___aldiv@divisor+3,f
  2501  05A8  0CF2               	rrf	___aldiv@divisor+2,f
  2502  05A9  0CF1               	rrf	___aldiv@divisor+1,f
  2503  05AA  0CF0               	rrf	___aldiv@divisor,f
  2504  05AB  3EFF               	addlw	-1
  2505  05AC  1D03               	skipz
  2506  05AD  2DA6               	goto	u945
  2507  05AE  3001               	movlw	1
  2508  05AF  02A0               	subwf	___aldiv@counter,f
  2509  05B0  1D03               	btfss	3,2
  2510  05B1  2D7D               	goto	l908
  2511  05B2                     l920:	
  2512  05B2  0821               	movf	___aldiv@sign,w
  2513  05B3  1903               	btfsc	3,2
  2514  05B4  2DC0               	goto	l924
  2515  05B5  09A2               	comf	___aldiv@quotient,f
  2516  05B6  09A3               	comf	___aldiv@quotient+1,f
  2517  05B7  09A4               	comf	___aldiv@quotient+2,f
  2518  05B8  09A5               	comf	___aldiv@quotient+3,f
  2519  05B9  0AA2               	incf	___aldiv@quotient,f
  2520  05BA  1903               	skipnz
  2521  05BB  0AA3               	incf	___aldiv@quotient+1,f
  2522  05BC  1903               	skipnz
  2523  05BD  0AA4               	incf	___aldiv@quotient+2,f
  2524  05BE  1903               	skipnz
  2525  05BF  0AA5               	incf	___aldiv@quotient+3,f
  2526  05C0                     l924:	
  2527  05C0  0825               	movf	___aldiv@quotient+3,w
  2528  05C1  00F3               	movwf	?___aldiv+3
  2529  05C2  0824               	movf	___aldiv@quotient+2,w
  2530  05C3  00F2               	movwf	?___aldiv+2
  2531  05C4  0823               	movf	___aldiv@quotient+1,w
  2532  05C5  00F1               	movwf	?___aldiv+1
  2533  05C6  0822               	movf	___aldiv@quotient,w
  2534  05C7  00F0               	movwf	?___aldiv
  2535  05C8  0008               	return
  2536  05C9                     __end_of___aldiv:	
  2537  007E                     btemp	set	126	;btemp
  2538  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _PWM2_Init->___aldiv
    _PWM2_Duty->___awtoft
    _PWM1_Init->___aldiv
    _PWM1_Duty->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___lwtoft
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK0

    _main->_PWM1_Duty
    _main->_PWM2_Duty
    _PWM2_Init->___aldiv
    _PWM2_Duty->___fttol
    _PWM1_Init->___aldiv
    _PWM1_Duty->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   20364
                                             50 BANK0      7     7      0
                          _PWM1_Duty
                          _PWM1_Init
                         _PWM1_Start
                          _PWM2_Duty
                          _PWM2_Init
                         _PWM2_Start
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Init                                            8     4      4     715
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM2_Duty                                            4     2      2    9354
                                             46 BANK0      4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     4      4     715
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM1_Duty                                            4     2      2    9354
                                             46 BANK0      4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1835
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             32 BANK0     14    10      4
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2245
                                             16 BANK0     16    10      6
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2199
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1904
                                             13 COMMON     1     1      0
                                              8 BANK0      5     2      3
                       _PWM_Max_Duty (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PWM_Max_Duty                                         6     4      2     618
                                              9 COMMON     4     4      0
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     618
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM1_Init
     ___aldiv
   _PWM1_Start
   _PWM2_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM2_Init
     ___aldiv
   _PWM2_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      3D       5       76.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4B      12        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Feb 21 15:41:53 2017

            __CFG_CP$OFF 0000                      l225 054C                      l331 038E  
                    l422 0520                      l338 03A3                      l339 03AB  
                    l920 05B2                      l906 056D                      l924 05C0  
                    l916 05A5                      l908 057D                      l860 0360  
                    l940 0294                      l950 0689                      l864 0367  
                    l874 0393                      l866 0373                      l970 06E4  
                    l876 039D                      l868 0378                      l956 069F  
                    l992 0741                      l898 055D                      l978 0703  
                    l998 0757                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _PR2 0092  
           __CFG_CPD$OFF 0000                      u815 0396                      u905 0571  
                    u925 057F                      u935 0594                      u855 03B2  
                    u775 036C                      u945 05A6                      u795 0387  
                    u975 02B8             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
           ___ftdiv@cntr 002A             ___ftdiv@sign 002F                     l1010 0796  
                   l1022 07BE                     l1014 07A6                     l1026 07CE  
                   l1042 04C6                     l1060 04F8                     l1108 049F  
                   l1132 060E                     l1070 0523                     l1062 0508  
                   l1150 0640                     l1144 062F                     l1074 0531  
                   l1138 0621                     l1068 0515                     l1156 064E  
                   l1098 042B                     u1015 06B1                     u1025 06C3  
                   u1105 0775                     u1035 06E5                     u1045 06F6  
                   u1055 0704                     u1135 07A7                     u1145 07AF  
                   u1225 04CD                     u1315 02E5                     u1325 02EE  
                   u1095 0763                     u1255 04F9                     u1335 0324  
                   u1360 0428                     u1185 07CF                     u1345 032D  
                   u1195 07D7                     u1285 0517                     u1390 049C  
                   u1497 066A             _PWM_Max_Duty 02AD             __CFG_WRT$OFF 0000  
                   _main 05C9                     _freq 0059             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0000             ___ftmul@cntr 003E             ___ftmul@sign 003F  
           ___fttol@exp1 004D             ___fttol@lval 0049          __end_of___aldiv 05C9  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
                  _CCP2X 00ED                    _CCP2Y 00EC            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 0729          __end_of___ftmul 07FC          __end_of___fttol 053A  
                  _TRISB 0086                    _TRISD 0088       __size_of_PWM1_Init 003F  
     __size_of_PWM1_Duty 0074              ?_PWM1_Start 0070       __size_of_PWM2_Init 003F  
     __size_of_PWM2_Duty 0074              ?_PWM2_Start 0070            ___awtoft@sign 007D  
          ___ftpack@sign 0074                    main@i 0055                    main@j 0057  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0671                   ??_main 0052            ___fttol@sign1 0048  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _CCPR1L 0015                   _CCPR2L 001B  
       __end_of___awtoft 02AD         __end_of___ftpack 03C4         __end_of___lwtoft 0288  
                 _TMR2ON 0092                   _TRISC1 0439                   _TRISC2 043A  
         __CFG_PWRTE$OFF 0000        __end_of_PWM1_Init 0319        __end_of_PWM1_Duty 0438  
      __end_of_PWM2_Init 0358        __end_of_PWM2_Duty 04AC                ??___aldiv 0078  
    __size_of_PWM1_Start 0009                ??___ftdiv 0026      __size_of_PWM2_Start 000B  
              ??___ftmul 0036                ??___fttol 0044    ___ftmul@f3_as_product 003B  
__end_of__initialization 07FC               ___ftdiv@f1 0023               ___ftdiv@f2 0020  
             ___ftdiv@f3 002B               ___awtoft@c 0028               ___ftmul@f1 0030  
             ___ftmul@f2 0033               ___fttol@f1 0040           __pcstackCOMMON 0070  
             ___lwtoft@c 0078               __pmaintext 05C9                ?___awtoft 0028  
              ?___ftpack 0070                  _T2CKPS0 0090                  _T2CKPS1 0091  
              ?___lwtoft 0078             ??_PWM1_Start 0070             ??_PWM2_Start 0070  
                ___aldiv 053A                  ___ftdiv 0671                  ___ftmul 0729  
                ___fttol 04AC       __end_of_PWM1_Start 0269       __end_of_PWM2_Start 0274  
             ??___awtoft 002B               ??___ftpack 0075                  __ptext1 0269  
                __ptext2 0319                  __ptext3 0438                  __ptext4 0260  
                __ptext5 02DA                  __ptext6 03C4                  __ptext7 0274  
                __ptext8 04AC                  __ptext9 0729               ??___lwtoft 007B  
       ___aldiv@dividend 0074     end_of_initialization 07FC         ___aldiv@quotient 0022  
              _PWM1_Init 02DA                _PWM1_Duty 03C4                _PWM2_Init 0319  
              _PWM2_Duty 0438              ___ftdiv@exp 002E              ___ftmul@exp 003A  
             ?_PWM1_Init 0026               ?_PWM1_Duty 004E               ?_PWM2_Init 0026  
             ?_PWM2_Duty 004E      start_initialization 07FC            ?_PWM_Max_Duty 0026  
      __size_of___awtoft 0025        __size_of___ftpack 006C                ___latbits 0002  
      __size_of___lwtoft 0014            __pcstackBANK0 0020           ??_PWM_Max_Duty 0079  
              __pnvBANK0 0059                 ?___aldiv 0070                 ?___ftdiv 0020  
               ?___ftmul 0030                 ?___fttol 0040              ??_PWM1_Init 0079  
            ??_PWM1_Duty 0050              ??_PWM2_Init 0079              ??_PWM2_Duty 0050  
        ___aldiv@divisor 0070          ___aldiv@counter 0020            PWM1_Duty@duty 004E  
          PWM2_Duty@duty 004E         __size_of___aldiv 008F     __end_of_PWM_Max_Duty 02DA  
       __size_of___ftdiv 00B8         __size_of___ftmul 00D3         __size_of___fttol 008E  
               ___awtoft 0288                 ___ftpack 0358                 ___lwtoft 0274  
               __ptext10 0671                 __ptext11 0288                 __ptext12 0358  
               __ptext13 02AD                 __ptext14 053A            __size_of_main 00A8  
           PWM1_Init@fre 0026             PWM2_Init@fre 0026             ___aldiv@sign 0021  
             _PWM1_Start 0260               _PWM2_Start 0269    __size_of_PWM_Max_Duty 002D  
