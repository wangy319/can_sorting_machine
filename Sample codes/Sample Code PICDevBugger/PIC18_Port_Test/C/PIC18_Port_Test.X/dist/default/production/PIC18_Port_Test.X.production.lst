

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Feb 21 14:58:47 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 1.40
    14                           ; Generated 01/12/2016 GMT
    15                           ; 
    16                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4620 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	nvCOMRAM
    49  000001                     __pnvCOMRAM:
    50                           	opt stack 0
    51  000001                     _i:
    52                           	opt stack 0
    53  000001                     	ds	2
    54  000003                     _tmp:
    55                           	opt stack 0
    56  000003                     	ds	1
    57  0000                     _INTCON	set	4082
    58  0000                     _LATA	set	3977
    59  0000                     _LATB	set	3978
    60  0000                     _LATC	set	3979
    61  0000                     _LATD	set	3980
    62  0000                     _LATE	set	3981
    63  0000                     _TRISA	set	3986
    64  0000                     _TRISB	set	3987
    65  0000                     _TRISC	set	3988
    66  0000                     _TRISD	set	3989
    67  0000                     _TRISE	set	3990
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  00FEAA                     __pcinit:
    73                           	opt stack 0
    74  00FEAA                     start_initialization:
    75                           	opt stack 0
    76  00FEAA                     __initialization:
    77                           	opt stack 0
    78  00FEAA                     end_of_initialization:
    79                           	opt stack 0
    80  00FEAA                     __end_of__initialization:
    81                           	opt stack 0
    82  00FEAA  0100               	movlb	0
    83  00FEAC  EF67  F07F         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	cstackCOMRAM
    86  000004                     __pcstackCOMRAM:
    87                           	opt stack 0
    88  000004                     ??_delay_10ms:
    89  000004                     
    90                           ; 1 bytes @ 0x0
    91  000004                     	ds	1
    92  000005                     delay_10ms@n:
    93                           	opt stack 0
    94                           
    95                           ; 1 bytes @ 0x1
    96  000005                     	ds	1
    97  000006                     
    98                           ; 1 bytes @ 0x2
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 25 in file "main.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, status,0, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   122 ;;Total ram usage:        0 bytes
   123 ;; Hardware stack levels required when called:    1
   124 ;; This function calls:
   125 ;;		_delay_10ms
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  00FECE                     __ptext0:
   133                           	opt stack 0
   134  00FECE                     _main:
   135                           	opt stack 30
   136                           
   137                           ;main.c: 29: INTCON = 0x00;
   138                           
   139                           ;incstack = 0
   140  00FECE  0E00               	movlw	0
   141  00FED0  6EF2               	movwf	intcon,c	;volatile
   142                           
   143                           ;main.c: 32: TRISA = 0x00;
   144  00FED2  0E00               	movlw	0
   145  00FED4  6E92               	movwf	3986,c	;volatile
   146                           
   147                           ;main.c: 33: TRISB = 0x00;
   148  00FED6  0E00               	movlw	0
   149  00FED8  6E93               	movwf	3987,c	;volatile
   150                           
   151                           ;main.c: 34: TRISC = 0x00;
   152  00FEDA  0E00               	movlw	0
   153  00FEDC  6E94               	movwf	3988,c	;volatile
   154                           
   155                           ;main.c: 35: TRISD = 0x00;
   156  00FEDE  0E00               	movlw	0
   157  00FEE0  6E95               	movwf	3989,c	;volatile
   158                           
   159                           ;main.c: 36: TRISE = 0x00;
   160  00FEE2  0E00               	movlw	0
   161  00FEE4  6E96               	movwf	3990,c	;volatile
   162                           
   163                           ;main.c: 39: LATA = 0x00;
   164  00FEE6  0E00               	movlw	0
   165  00FEE8  6E89               	movwf	3977,c	;volatile
   166                           
   167                           ;main.c: 40: LATB = 0x00;
   168  00FEEA  0E00               	movlw	0
   169  00FEEC  6E8A               	movwf	3978,c	;volatile
   170                           
   171                           ;main.c: 41: LATC = 0x00;
   172  00FEEE  0E00               	movlw	0
   173  00FEF0  6E8B               	movwf	3979,c	;volatile
   174                           
   175                           ;main.c: 42: LATD = 0x00;
   176  00FEF2  0E00               	movlw	0
   177  00FEF4  6E8C               	movwf	3980,c	;volatile
   178                           
   179                           ;main.c: 43: LATE = 0x00;
   180  00FEF6  0E00               	movlw	0
   181  00FEF8  6E8D               	movwf	3981,c	;volatile
   182  00FEFA                     l37:
   183                           
   184                           ;main.c: 49: tmp = 0x02;
   185  00FEFA  0E02               	movlw	2
   186  00FEFC  6E03               	movwf	_tmp,c
   187                           
   188                           ;main.c: 50: for (i = 0; i<=1; i++){
   189  00FEFE  0E00               	movlw	0
   190  00FF00  6E02               	movwf	_i+1,c
   191  00FF02  0E00               	movlw	0
   192  00FF04  6E01               	movwf	_i,c
   193  00FF06                     l656:
   194  00FF06  BE02               	btfsc	_i+1,7,c
   195  00FF08  D006               	goto	l38
   196  00FF0A  5002               	movf	_i+1,w,c
   197  00FF0C  E10E               	bnz	l668
   198  00FF0E  0E02               	movlw	2
   199  00FF10  5C01               	subwf	_i,w,c
   200  00FF12  B0D8               	btfsc	status,0,c
   201  00FF14  D00A               	goto	l668
   202  00FF16                     l38:
   203                           
   204                           ;main.c: 51: LATE = tmp;
   205  00FF16  C003  FF8D         	movff	_tmp,3981	;volatile
   206                           
   207                           ;main.c: 52: tmp >>= 1;
   208  00FF1A  90D8               	bcf	status,0,c
   209  00FF1C  3203               	rrcf	_tmp,f,c
   210                           
   211                           ;main.c: 53: delay_10ms(10);
   212  00FF1E  0E0A               	movlw	10
   213  00FF20  EC58  F07F         	call	_delay_10ms
   214  00FF24  4A01               	infsnz	_i,f,c
   215  00FF26  2A02               	incf	_i+1,f,c
   216  00FF28  D7EE               	goto	l656
   217  00FF2A                     l668:
   218                           
   219                           ;main.c: 54: }
   220                           ;main.c: 55: LATE = 0x00;
   221  00FF2A  0E00               	movlw	0
   222  00FF2C  6E8D               	movwf	3981,c	;volatile
   223                           
   224                           ;main.c: 57: tmp = 0x80;
   225  00FF2E  0E80               	movlw	128
   226  00FF30  6E03               	movwf	_tmp,c
   227                           
   228                           ;main.c: 58: for (i = 0; i<=8; i++){
   229  00FF32  0E00               	movlw	0
   230  00FF34  6E02               	movwf	_i+1,c
   231  00FF36  0E00               	movlw	0
   232  00FF38  6E01               	movwf	_i,c
   233  00FF3A                     l670:
   234  00FF3A  BE02               	btfsc	_i+1,7,c
   235  00FF3C  D006               	goto	l40
   236  00FF3E  5002               	movf	_i+1,w,c
   237  00FF40  E10E               	bnz	l682
   238  00FF42  0E09               	movlw	9
   239  00FF44  5C01               	subwf	_i,w,c
   240  00FF46  B0D8               	btfsc	status,0,c
   241  00FF48  D00A               	goto	l682
   242  00FF4A                     l40:
   243                           
   244                           ;main.c: 59: LATA = tmp;
   245  00FF4A  C003  FF89         	movff	_tmp,3977	;volatile
   246                           
   247                           ;main.c: 60: tmp >>= 1;
   248  00FF4E  90D8               	bcf	status,0,c
   249  00FF50  3203               	rrcf	_tmp,f,c
   250                           
   251                           ;main.c: 61: delay_10ms(10);
   252  00FF52  0E0A               	movlw	10
   253  00FF54  EC58  F07F         	call	_delay_10ms
   254  00FF58  4A01               	infsnz	_i,f,c
   255  00FF5A  2A02               	incf	_i+1,f,c
   256  00FF5C  D7EE               	goto	l670
   257  00FF5E                     l682:
   258                           
   259                           ;main.c: 62: }
   260                           ;main.c: 64: LATA = 0x00;
   261  00FF5E  0E00               	movlw	0
   262  00FF60  6E89               	movwf	3977,c	;volatile
   263                           
   264                           ;main.c: 65: tmp = 0x80;
   265  00FF62  0E80               	movlw	128
   266  00FF64  6E03               	movwf	_tmp,c
   267                           
   268                           ;main.c: 66: for (i = 0; i<=8; i++){
   269  00FF66  0E00               	movlw	0
   270  00FF68  6E02               	movwf	_i+1,c
   271  00FF6A  0E00               	movlw	0
   272  00FF6C  6E01               	movwf	_i,c
   273  00FF6E                     l684:
   274  00FF6E  BE02               	btfsc	_i+1,7,c
   275  00FF70  D006               	goto	l42
   276  00FF72  5002               	movf	_i+1,w,c
   277  00FF74  E10E               	bnz	l696
   278  00FF76  0E09               	movlw	9
   279  00FF78  5C01               	subwf	_i,w,c
   280  00FF7A  B0D8               	btfsc	status,0,c
   281  00FF7C  D00A               	goto	l696
   282  00FF7E                     l42:
   283                           
   284                           ;main.c: 67: LATB = tmp;
   285  00FF7E  C003  FF8A         	movff	_tmp,3978	;volatile
   286                           
   287                           ;main.c: 68: tmp >>= 1;
   288  00FF82  90D8               	bcf	status,0,c
   289  00FF84  3203               	rrcf	_tmp,f,c
   290                           
   291                           ;main.c: 69: delay_10ms(10);
   292  00FF86  0E0A               	movlw	10
   293  00FF88  EC58  F07F         	call	_delay_10ms
   294  00FF8C  4A01               	infsnz	_i,f,c
   295  00FF8E  2A02               	incf	_i+1,f,c
   296  00FF90  D7EE               	goto	l684
   297  00FF92                     l696:
   298                           
   299                           ;main.c: 70: }
   300                           ;main.c: 71: LATB = 0x00;
   301  00FF92  0E00               	movlw	0
   302  00FF94  6E8A               	movwf	3978,c	;volatile
   303                           
   304                           ;main.c: 73: tmp = 0x80;
   305  00FF96  0E80               	movlw	128
   306  00FF98  6E03               	movwf	_tmp,c
   307                           
   308                           ;main.c: 74: for (i = 0; i<=8; i++){
   309  00FF9A  0E00               	movlw	0
   310  00FF9C  6E02               	movwf	_i+1,c
   311  00FF9E  0E00               	movlw	0
   312  00FFA0  6E01               	movwf	_i,c
   313  00FFA2                     l698:
   314  00FFA2  BE02               	btfsc	_i+1,7,c
   315  00FFA4  D006               	goto	l44
   316  00FFA6  5002               	movf	_i+1,w,c
   317  00FFA8  E10E               	bnz	l710
   318  00FFAA  0E09               	movlw	9
   319  00FFAC  5C01               	subwf	_i,w,c
   320  00FFAE  B0D8               	btfsc	status,0,c
   321  00FFB0  D00A               	goto	l710
   322  00FFB2                     l44:
   323                           
   324                           ;main.c: 75: LATC = tmp;
   325  00FFB2  C003  FF8B         	movff	_tmp,3979	;volatile
   326                           
   327                           ;main.c: 76: tmp >>= 1;
   328  00FFB6  90D8               	bcf	status,0,c
   329  00FFB8  3203               	rrcf	_tmp,f,c
   330                           
   331                           ;main.c: 77: delay_10ms(10);
   332  00FFBA  0E0A               	movlw	10
   333  00FFBC  EC58  F07F         	call	_delay_10ms
   334  00FFC0  4A01               	infsnz	_i,f,c
   335  00FFC2  2A02               	incf	_i+1,f,c
   336  00FFC4  D7EE               	goto	l698
   337  00FFC6                     l710:
   338                           
   339                           ;main.c: 78: }
   340                           ;main.c: 79: LATC = 0x00;
   341  00FFC6  0E00               	movlw	0
   342  00FFC8  6E8B               	movwf	3979,c	;volatile
   343                           
   344                           ;main.c: 81: tmp = 0x80;
   345  00FFCA  0E80               	movlw	128
   346  00FFCC  6E03               	movwf	_tmp,c
   347                           
   348                           ;main.c: 82: for (i = 0; i<=8; i++){
   349  00FFCE  0E00               	movlw	0
   350  00FFD0  6E02               	movwf	_i+1,c
   351  00FFD2  0E00               	movlw	0
   352  00FFD4  6E01               	movwf	_i,c
   353  00FFD6                     l712:
   354  00FFD6  BE02               	btfsc	_i+1,7,c
   355  00FFD8  D006               	goto	l46
   356  00FFDA  5002               	movf	_i+1,w,c
   357  00FFDC  E10E               	bnz	l724
   358  00FFDE  0E09               	movlw	9
   359  00FFE0  5C01               	subwf	_i,w,c
   360  00FFE2  B0D8               	btfsc	status,0,c
   361  00FFE4  D00A               	goto	l724
   362  00FFE6                     l46:
   363                           
   364                           ;main.c: 83: LATD = tmp;
   365  00FFE6  C003  FF8C         	movff	_tmp,3980	;volatile
   366                           
   367                           ;main.c: 84: tmp >>= 1;
   368  00FFEA  90D8               	bcf	status,0,c
   369  00FFEC  3203               	rrcf	_tmp,f,c
   370                           
   371                           ;main.c: 85: delay_10ms(10);
   372  00FFEE  0E0A               	movlw	10
   373  00FFF0  EC58  F07F         	call	_delay_10ms
   374  00FFF4  4A01               	infsnz	_i,f,c
   375  00FFF6  2A02               	incf	_i+1,f,c
   376  00FFF8  D7EE               	goto	l712
   377  00FFFA                     l724:
   378                           
   379                           ;main.c: 86: }
   380                           ;main.c: 87: LATD = 0x00;
   381  00FFFA  0E00               	movlw	0
   382  00FFFC  6E8C               	movwf	3980,c	;volatile
   383  00FFFE  D77D               	goto	l37
   384  010000                     __end_of_main:
   385                           	opt stack 0
   386                           intcon	equ	0xFF2
   387                           status	equ	0xFD8
   388                           
   389 ;; *************** function _delay_10ms *****************
   390 ;; Defined at:
   391 ;;		line 17 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  n               1    wreg     unsigned char 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  n               1    1[COMRAM] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;Total ram usage:        2 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text1
   419  00FEB0                     __ptext1:
   420                           	opt stack 0
   421  00FEB0                     _delay_10ms:
   422                           	opt stack 30
   423                           
   424                           ;incstack = 0
   425                           ;delay_10ms@n stored from wreg
   426  00FEB0  6E05               	movwf	delay_10ms@n,c
   427                           
   428                           ;main.c: 18: while (n-- != 0) {
   429  00FEB2  D008               	goto	l652
   430  00FEB4                     l650:
   431                           
   432                           ;main.c: 19: _delay((unsigned long)((10)*(10000000/4000.0)));
   433  00FEB4  0E21               	movlw	33
   434  00FEB6  6E04               	movwf	??_delay_10ms& (0+255),c
   435  00FEB8  0E76               	movlw	118
   436  00FEBA                     u127:
   437  00FEBA  2EE8               	decfsz	wreg,f,c
   438  00FEBC  D7FE               	bra	u127
   439  00FEBE  2E04               	decfsz	??_delay_10ms& (0+255),f,c
   440  00FEC0  D7FC               	bra	u127
   441  00FEC2  D000               	nop2	
   442  00FEC4                     l652:
   443  00FEC4  0605               	decf	delay_10ms@n,f,c
   444  00FEC6  2805               	incf	delay_10ms@n,w,c
   445  00FEC8  B4D8               	btfsc	status,2,c
   446  00FECA  0012               	return	
   447  00FECC  D7F3               	goto	l650
   448  00FECE                     __end_of_delay_10ms:
   449                           	opt stack 0
   450  0000                     intcon	equ	0xFF2
   451                           wreg	equ	0xFE8
   452                           status	equ	0xFD8
   453                           intcon	equ	0xFF2
   454                           wreg	equ	0xFE8
   455                           status	equ	0xFD8
   456                           
   457                           	psect	rparam
   458  0000                     intcon	equ	0xFF2
   459                           wreg	equ	0xFE8
   460                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       5
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay_10ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                         _delay_10ms
 ---------------------------------------------------------------------------------
 (1) _delay_10ms                                           2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      2       5       1        3.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       5       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       5      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Feb 21 14:58:47 2017

                      _i 0001                       l40 FF4A                       l42 FF7E  
                     l44 FFB2                       l37 FEFA                       l46 FFE6  
                     l38 FF16              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l710 FFC6                      l712 FFD6  
                    l650 FEB4                      l652 FEC4                      l724 FFFA  
                    l670 FF3A                      l656 FF06                      l682 FF5E  
                    l684 FF6E                      l668 FF2A                      l696 FF92  
                    l698 FFA2             __CFG_CPB$OFF 000000                      u127 FEBA  
           __CFG_CPD$OFF 000000                      _tmp 0003                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   _LATE 000F8D                     _main FECE                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0004                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_PBADEN$ON 000000          __initialization FEAA             __end_of_main 0000  
                 ??_main 0006            __activetblptr 000000                   _INTCON 000FF2  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000               __accesstop 0080  
__end_of__initialization FEAA            ___rparam_used 000001           __pcstackCOMRAM 0004  
             _delay_10ms FEB0               __pnvCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit FEAA                  __ramtop 1000  
                __ptext0 FECE                  __ptext1 FEB0     end_of_initialization FEAA  
            ?_delay_10ms 0004      __size_of_delay_10ms 001E      start_initialization FEAA  
       __CFG_LPT1OSC$OFF 000000        __CFG_CCP2MX$PORTC 000000             ??_delay_10ms 0004  
       __CFG_WDTPS$32768 000000       __end_of_delay_10ms FECE                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000              delay_10ms@n 0005  
          __size_of_main 0132  
