

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Dec 20 13:08:17 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     _ADCON1	set	4033
    15  0000                     _INTCONbits	set	4082
    16  0000                     _LATA	set	3977
    17  0000                     _LATAbits	set	3977
    18  0000                     _LATB	set	3978
    19  0000                     _PORTAbits	set	3968
    20  0000                     _PORTB	set	3969
    21  0000                     _PORTBbits	set	3969
    22  0000                     _RCONbits	set	4048
    23  0000                     _TRISA	set	3986
    24  0000                     _TRISB	set	3987
    25                           
    26                           ; #config settings
    27  0000                     
    28                           	psect	cinit
    29  007D7C                     __pcinit:
    30                           	opt stack 0
    31  007D7C                     start_initialization:
    32                           	opt stack 0
    33  007D7C                     __initialization:
    34                           	opt stack 0
    35                           
    36                           ; Clear objects allocated to COMRAM (8 bytes)
    37  007D7C  EE00  F00A         	lfsr	0,__pbssCOMRAM
    38  007D80  0E08               	movlw	8
    39  007D82                     clear_0:
    40  007D82  6AEE               	clrf	postinc0,c
    41  007D84  06E8               	decf	wreg,f,c
    42  007D86  E1FD               	bnz	clear_0
    43  007D88                     end_of_initialization:
    44                           	opt stack 0
    45  007D88                     __end_of__initialization:
    46                           	opt stack 0
    47  007D88  0100               	movlb	0
    48  007D8A  EFD2  F03E         	goto	_main	;jump to C main() function
    49                           postinc0	equ	0xFEE
    50                           wreg	equ	0xFE8
    51                           
    52                           	psect	bssCOMRAM
    53  00000A                     __pbssCOMRAM:
    54                           	opt stack 0
    55  00000A                     _columnPressed:
    56                           	opt stack 0
    57  00000A                     	ds	2
    58  00000C                     _dataOut:
    59                           	opt stack 0
    60  00000C                     	ds	2
    61  00000E                     _i:
    62                           	opt stack 0
    63  00000E                     	ds	2
    64  000010                     _rowPressed:
    65                           	opt stack 0
    66  000010                     	ds	2
    67                           postinc0	equ	0xFEE
    68                           wreg	equ	0xFE8
    69                           
    70                           	psect	cstackCOMRAM
    71  000001                     __pcstackCOMRAM:
    72                           	opt stack 0
    73  000001                     delay_5ms@n:
    74                           	opt stack 0
    75  000001                     findKey@b:
    76                           	opt stack 0
    77                           
    78                           ; 2 bytes @ 0x0
    79  000001                     	ds	2
    80  000003                     findKey@a:
    81                           	opt stack 0
    82                           
    83                           ; 2 bytes @ 0x2
    84  000003                     	ds	2
    85  000005                     ?_readKeyboard:
    86                           	opt stack 0
    87                           
    88                           ; 2 bytes @ 0x4
    89  000005                     	ds	2
    90  000007                     ??_readKeyboard:
    91                           
    92                           ; 1 bytes @ 0x6
    93  000007                     	ds	1
    94  000008                     readKeyboard@i:
    95                           	opt stack 0
    96                           
    97                           ; 2 bytes @ 0x7
    98  000008                     	ds	2
    99  00000A                     postinc0	equ	0xFEE
   100                           wreg	equ	0xFE8
   101                           
   102                           ; 1 bytes @ 0x9
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 167 in file "Keypad.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, status,0, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   122 ;;      Params:         0       0       0       0       0       0       0       0       0
   123 ;;      Locals:         0       0       0       0       0       0       0       0       0
   124 ;;      Temps:          0       0       0       0       0       0       0       0       0
   125 ;;      Totals:         0       0       0       0       0       0       0       0       0
   126 ;;Total ram usage:        0 bytes
   127 ;; Hardware stack levels required when called:    2
   128 ;; This function calls:
   129 ;;		_delay_5ms
   130 ;;		_readKeyboard
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  007DA4                     __ptext0:
   138                           	opt stack 0
   139  007DA4                     _main:
   140                           	opt stack 29
   141                           
   142                           ;Keypad.c: 169: INTCONbits.GIE = 0;
   143                           
   144                           ;incstack = 0
   145  007DA4  9EF2               	bcf	intcon,7,c	;volatile
   146                           
   147                           ;Keypad.c: 170: RCONbits.IPEN = 0;
   148  007DA6  9ED0               	bcf	4048,7,c	;volatile
   149                           
   150                           ;Keypad.c: 174: TRISB = 0b00001111;
   151  007DA8  0E0F               	movlw	15
   152  007DAA  6E93               	movwf	3987,c	;volatile
   153                           
   154                           ;Keypad.c: 177: LATB = 0xFF;
   155  007DAC  688A               	setf	3978,c	;volatile
   156                           
   157                           ;Keypad.c: 180: ADCON1 = 0x0F;
   158  007DAE  0E0F               	movlw	15
   159  007DB0  6EC1               	movwf	4033,c	;volatile
   160                           
   161                           ;Keypad.c: 183: TRISA = 0b11011111;
   162  007DB2  0EDF               	movlw	223
   163  007DB4  6E92               	movwf	3986,c	;volatile
   164  007DB6                     l1095:
   165                           
   166                           ;Keypad.c: 188: if (PORTAbits.RA4){
   167  007DB6  A880               	btfss	3968,4,c	;volatile
   168  007DB8  D002               	goto	l1099
   169                           
   170                           ;Keypad.c: 190: TRISA = 0xFF;
   171  007DBA  6892               	setf	3986,c	;volatile
   172                           
   173                           ;Keypad.c: 191: } else {
   174  007DBC  D7FC               	goto	l1095
   175  007DBE                     l1099:
   176                           
   177                           ;Keypad.c: 192: TRISA = 0b11011111;
   178  007DBE  0EDF               	movlw	223
   179  007DC0  6E92               	movwf	3986,c	;volatile
   180                           
   181                           ;Keypad.c: 193: dataOut = readKeyboard();
   182  007DC2  EC12  F03F         	call	_readKeyboard	;wreg free
   183  007DC6  C005  F00C         	movff	?_readKeyboard,_dataOut
   184  007DCA  C006  F00D         	movff	?_readKeyboard+1,_dataOut+1
   185                           
   186                           ;Keypad.c: 196: if (dataOut != 0xF0){
   187  007DCE  0EF0               	movlw	240
   188  007DD0  180C               	xorwf	_dataOut,w,c
   189  007DD2  100D               	iorwf	_dataOut+1,w,c
   190  007DD4  B4D8               	btfsc	status,2,c
   191  007DD6  D01F               	goto	l98
   192                           
   193                           ;Keypad.c: 198: delay_5ms(4);
   194  007DD8  0E04               	movlw	4
   195  007DDA  ECC7  F03E         	call	_delay_5ms
   196                           
   197                           ;Keypad.c: 199: if (dataOut == readKeyboard()){
   198  007DDE  EC12  F03F         	call	_readKeyboard	;wreg free
   199  007DE2  500C               	movf	_dataOut,w,c
   200  007DE4  1805               	xorwf	?_readKeyboard,w,c
   201  007DE6  E117               	bnz	l98
   202  007DE8  500D               	movf	_dataOut+1,w,c
   203  007DEA  1806               	xorwf	?_readKeyboard+1,w,c
   204  007DEC  A4D8               	btfss	status,2,c
   205  007DEE  D013               	goto	l98
   206                           
   207                           ;Keypad.c: 201: LATA = dataOut & 0b00001111;
   208  007DF0  500C               	movf	_dataOut,w,c
   209  007DF2  0B0F               	andlw	15
   210  007DF4  6E89               	movwf	3977,c	;volatile
   211                           
   212                           ;Keypad.c: 202: TRISA = 0b11010000;
   213  007DF6  0ED0               	movlw	208
   214  007DF8  6E92               	movwf	3986,c	;volatile
   215                           
   216                           ;Keypad.c: 203: while (dataOut == readKeyboard()){
   217  007DFA  D004               	goto	l100
   218  007DFC                     l101:
   219                           
   220                           ;Keypad.c: 205: LATAbits.LATA5 = 1;
   221  007DFC  8A89               	bsf	3977,5,c	;volatile
   222                           
   223                           ;Keypad.c: 206: delay_5ms(2);
   224  007DFE  0E02               	movlw	2
   225  007E00  ECC7  F03E         	call	_delay_5ms
   226  007E04                     l100:
   227  007E04  EC12  F03F         	call	_readKeyboard	;wreg free
   228  007E08  500C               	movf	_dataOut,w,c
   229  007E0A  1805               	xorwf	?_readKeyboard,w,c
   230  007E0C  E104               	bnz	l98
   231  007E0E  500D               	movf	_dataOut+1,w,c
   232  007E10  1806               	xorwf	?_readKeyboard+1,w,c
   233  007E12  B4D8               	btfsc	status,2,c
   234  007E14  D7F3               	goto	l101
   235  007E16                     l98:
   236                           
   237                           ;Keypad.c: 207: }
   238                           ;Keypad.c: 208: }
   239                           ;Keypad.c: 209: }
   240                           ;Keypad.c: 211: LATAbits.LATA5 = 0;
   241  007E16  9A89               	bcf	3977,5,c	;volatile
   242                           
   243                           ;Keypad.c: 212: TRISA = 0b11011111;
   244  007E18  0EDF               	movlw	223
   245  007E1A  6E92               	movwf	3986,c	;volatile
   246                           
   247                           ;Keypad.c: 213: delay_5ms(4);
   248  007E1C  0E04               	movlw	4
   249  007E1E  ECC7  F03E         	call	_delay_5ms
   250  007E22  D7C9               	goto	l1095
   251  007E24                     __end_of_main:
   252                           	opt stack 0
   253                           intcon	equ	0xFF2
   254                           postinc0	equ	0xFEE
   255                           wreg	equ	0xFE8
   256                           status	equ	0xFD8
   257                           
   258 ;; *************** function _readKeyboard *****************
   259 ;; Defined at:
   260 ;;		line 141 in file "Keypad.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  i               2    7[COMRAM] unsigned int 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  2    4[COMRAM] unsigned int 
   267 ;; Registers used:
   268 ;;		wreg, status,2, status,0, cstack
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   274 ;;      Params:         2       0       0       0       0       0       0       0       0
   275 ;;      Locals:         2       0       0       0       0       0       0       0       0
   276 ;;      Temps:          1       0       0       0       0       0       0       0       0
   277 ;;      Totals:         5       0       0       0       0       0       0       0       0
   278 ;;Total ram usage:        5 bytes
   279 ;; Hardware stack levels used:    1
   280 ;; Hardware stack levels required when called:    1
   281 ;; This function calls:
   282 ;;		_findKey
   283 ;; This function is called by:
   284 ;;		_main
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	text1
   289  007E24                     __ptext1:
   290                           	opt stack 0
   291  007E24                     _readKeyboard:
   292                           	opt stack 29
   293                           
   294                           ;Keypad.c: 143: unsigned int i = 0;
   295                           
   296                           ;incstack = 0
   297  007E24  0E00               	movlw	0
   298  007E26  6E09               	movwf	readKeyboard@i+1,c
   299  007E28  0E00               	movlw	0
   300  007E2A  6E08               	movwf	readKeyboard@i,c
   301                           
   302                           ;Keypad.c: 144: for(i=0;i<4;i++)
   303  007E2C  0E00               	movlw	0
   304  007E2E  6E09               	movwf	readKeyboard@i+1,c
   305  007E30  0E00               	movlw	0
   306  007E32  6E08               	movwf	readKeyboard@i,c
   307  007E34                     l1043:
   308  007E34  5009               	movf	readKeyboard@i+1,w,c
   309  007E36  E165               	bnz	l1085
   310  007E38  0E04               	movlw	4
   311  007E3A  5C08               	subwf	readKeyboard@i,w,c
   312  007E3C  B0D8               	btfsc	status,0,c
   313  007E3E  D061               	goto	l1085
   314                           
   315                           ;Keypad.c: 145: {
   316                           ;Keypad.c: 146: if(i == 0)
   317  007E40  5008               	movf	readKeyboard@i,w,c
   318  007E42  1009               	iorwf	readKeyboard@i+1,w,c
   319  007E44  A4D8               	btfss	status,2,c
   320  007E46  D002               	goto	l1051
   321                           
   322                           ;Keypad.c: 147: PORTB = 0x10;
   323  007E48  0E10               	movlw	16
   324  007E4A  D013               	goto	L3
   325  007E4C                     l1051:
   326                           
   327                           ;Keypad.c: 148: else if(i == 1)
   328  007E4C  0408               	decf	readKeyboard@i,w,c
   329  007E4E  1009               	iorwf	readKeyboard@i+1,w,c
   330  007E50  A4D8               	btfss	status,2,c
   331  007E52  D002               	goto	l1055
   332                           
   333                           ;Keypad.c: 149: PORTB = 0x20;
   334  007E54  0E20               	movlw	32
   335  007E56  D00D               	goto	L3
   336  007E58                     l1055:
   337                           
   338                           ;Keypad.c: 150: else if(i == 2)
   339  007E58  0E02               	movlw	2
   340  007E5A  1808               	xorwf	readKeyboard@i,w,c
   341  007E5C  1009               	iorwf	readKeyboard@i+1,w,c
   342  007E5E  A4D8               	btfss	status,2,c
   343  007E60  D002               	goto	l1059
   344                           
   345                           ;Keypad.c: 151: PORTB = 0x40;
   346  007E62  0E40               	movlw	64
   347  007E64  D006               	goto	L3
   348  007E66                     l1059:
   349                           
   350                           ;Keypad.c: 152: else if(i == 3)
   351  007E66  0E03               	movlw	3
   352  007E68  1808               	xorwf	readKeyboard@i,w,c
   353  007E6A  1009               	iorwf	readKeyboard@i+1,w,c
   354  007E6C  A4D8               	btfss	status,2,c
   355  007E6E  D002               	goto	l1063
   356                           
   357                           ;Keypad.c: 153: PORTB = 0x80;
   358  007E70  0E80               	movlw	128
   359  007E72                     L3:
   360  007E72  6E81               	movwf	3969,c	;volatile
   361  007E74                     l1063:
   362                           
   363                           ;Keypad.c: 155: if(PORTBbits.RB0)
   364  007E74  A081               	btfss	3969,0,c	;volatile
   365  007E76  D00F               	goto	l88
   366                           
   367                           ;Keypad.c: 156: return findKey(i,0);
   368  007E78  C008  F001         	movff	readKeyboard@i,findKey@b
   369  007E7C  C009  F002         	movff	readKeyboard@i+1,findKey@b+1
   370  007E80  0E00               	movlw	0
   371  007E82  6E04               	movwf	findKey@a+1,c
   372  007E84  0E00               	movlw	0
   373  007E86  6E03               	movwf	findKey@a,c
   374  007E88  EC86  F03F         	call	_findKey	;wreg free
   375  007E8C  6E07               	movwf	??_readKeyboard& (0+255),c
   376  007E8E  5007               	movf	??_readKeyboard,w,c
   377  007E90  6E05               	movwf	?_readKeyboard,c
   378  007E92  6A06               	clrf	?_readKeyboard+1,c
   379  007E94  0012               	return	
   380  007E96                     l88:
   381                           
   382                           ;Keypad.c: 157: if(PORTBbits.RB1)
   383  007E96  A281               	btfss	3969,1,c	;volatile
   384  007E98  D00F               	goto	l90
   385                           
   386                           ;Keypad.c: 158: return findKey(i,1);
   387  007E9A  C008  F001         	movff	readKeyboard@i,findKey@b
   388  007E9E  C009  F002         	movff	readKeyboard@i+1,findKey@b+1
   389  007EA2  0E00               	movlw	0
   390  007EA4  6E04               	movwf	findKey@a+1,c
   391  007EA6  0E01               	movlw	1
   392  007EA8  6E03               	movwf	findKey@a,c
   393  007EAA  EC86  F03F         	call	_findKey	;wreg free
   394  007EAE  6E07               	movwf	??_readKeyboard& (0+255),c
   395  007EB0  5007               	movf	??_readKeyboard,w,c
   396  007EB2  6E05               	movwf	?_readKeyboard,c
   397  007EB4  6A06               	clrf	?_readKeyboard+1,c
   398  007EB6  0012               	return	
   399  007EB8                     l90:
   400                           
   401                           ;Keypad.c: 159: if(PORTBbits.RB2)
   402  007EB8  A481               	btfss	3969,2,c	;volatile
   403  007EBA  D00F               	goto	l91
   404                           
   405                           ;Keypad.c: 160: return findKey(i,2);
   406  007EBC  C008  F001         	movff	readKeyboard@i,findKey@b
   407  007EC0  C009  F002         	movff	readKeyboard@i+1,findKey@b+1
   408  007EC4  0E00               	movlw	0
   409  007EC6  6E04               	movwf	findKey@a+1,c
   410  007EC8  0E02               	movlw	2
   411  007ECA  6E03               	movwf	findKey@a,c
   412  007ECC  EC86  F03F         	call	_findKey	;wreg free
   413  007ED0  6E07               	movwf	??_readKeyboard& (0+255),c
   414  007ED2  5007               	movf	??_readKeyboard,w,c
   415  007ED4  6E05               	movwf	?_readKeyboard,c
   416  007ED6  6A06               	clrf	?_readKeyboard+1,c
   417  007ED8  0012               	return	
   418  007EDA                     l91:
   419                           
   420                           ;Keypad.c: 161: if(PORTBbits.RB3)
   421  007EDA  A681               	btfss	3969,3,c	;volatile
   422  007EDC  D00F               	goto	l1081
   423                           
   424                           ;Keypad.c: 162: return findKey(i,3);
   425  007EDE  C008  F001         	movff	readKeyboard@i,findKey@b
   426  007EE2  C009  F002         	movff	readKeyboard@i+1,findKey@b+1
   427  007EE6  0E00               	movlw	0
   428  007EE8  6E04               	movwf	findKey@a+1,c
   429  007EEA  0E03               	movlw	3
   430  007EEC  6E03               	movwf	findKey@a,c
   431  007EEE  EC86  F03F         	call	_findKey	;wreg free
   432  007EF2  6E07               	movwf	??_readKeyboard& (0+255),c
   433  007EF4  5007               	movf	??_readKeyboard,w,c
   434  007EF6  6E05               	movwf	?_readKeyboard,c
   435  007EF8  6A06               	clrf	?_readKeyboard+1,c
   436  007EFA  0012               	return	
   437  007EFC                     l1081:
   438  007EFC  4A08               	infsnz	readKeyboard@i,f,c
   439  007EFE  2A09               	incf	readKeyboard@i+1,f,c
   440  007F00  D799               	goto	l1043
   441  007F02                     l1085:
   442                           
   443                           ;Keypad.c: 163: }
   444                           ;Keypad.c: 164: return 0xF0;
   445  007F02  0E00               	movlw	0
   446  007F04  6E06               	movwf	?_readKeyboard+1,c
   447  007F06  0EF0               	movlw	240
   448  007F08  6E05               	movwf	?_readKeyboard,c
   449  007F0A  0012               	return	
   450  007F0C                     __end_of_readKeyboard:
   451                           	opt stack 0
   452                           intcon	equ	0xFF2
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           status	equ	0xFD8
   456                           
   457 ;; *************** function _findKey *****************
   458 ;; Defined at:
   459 ;;		line 92 in file "Keypad.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  b               2    0[COMRAM] unsigned short 
   462 ;;  a               2    2[COMRAM] unsigned short 
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      unsigned char 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   474 ;;      Params:         4       0       0       0       0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0
   477 ;;      Totals:         4       0       0       0       0       0       0       0       0
   478 ;;Total ram usage:        4 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_readKeyboard
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text2
   488  007F0C                     __ptext2:
   489                           	opt stack 0
   490  007F0C                     _findKey:
   491                           	opt stack 29
   492                           
   493                           ;Keypad.c: 94: if(b == 0)
   494                           
   495                           ;incstack = 0
   496  007F0C  5001               	movf	findKey@b,w,c
   497  007F0E  1002               	iorwf	findKey@b+1,w,c
   498  007F10  A4D8               	btfss	status,2,c
   499  007F12  D01A               	goto	l945
   500                           
   501                           ;Keypad.c: 95: {
   502                           ;Keypad.c: 96: if(a == 0)
   503  007F14  5003               	movf	findKey@a,w,c
   504  007F16  1004               	iorwf	findKey@a+1,w,c
   505  007F18  A4D8               	btfss	status,2,c
   506  007F1A  D002               	goto	l923
   507                           
   508                           ;Keypad.c: 97: return 0x0;
   509  007F1C  0E00               	movlw	0
   510  007F1E  0012               	return	
   511  007F20                     l923:
   512                           
   513                           ;Keypad.c: 98: else if(a == 1)
   514  007F20  0403               	decf	findKey@a,w,c
   515  007F22  1004               	iorwf	findKey@a+1,w,c
   516  007F24  A4D8               	btfss	status,2,c
   517  007F26  D002               	goto	l931
   518                           
   519                           ;Keypad.c: 99: return 0x1;
   520  007F28  0E01               	movlw	1
   521  007F2A  0012               	return	
   522  007F2C                     l931:
   523                           
   524                           ;Keypad.c: 100: else if(a == 2)
   525  007F2C  0E02               	movlw	2
   526  007F2E  1803               	xorwf	findKey@a,w,c
   527  007F30  1004               	iorwf	findKey@a+1,w,c
   528  007F32  A4D8               	btfss	status,2,c
   529  007F34  D002               	goto	l939
   530                           
   531                           ;Keypad.c: 101: return 0x2;
   532  007F36  0E02               	movlw	2
   533  007F38  0012               	return	
   534  007F3A                     l939:
   535                           
   536                           ;Keypad.c: 102: else if(a == 3)
   537  007F3A  0E03               	movlw	3
   538  007F3C  1803               	xorwf	findKey@a,w,c
   539  007F3E  1004               	iorwf	findKey@a+1,w,c
   540  007F40  A4D8               	btfss	status,2,c
   541  007F42  0012               	return	
   542                           
   543                           ;Keypad.c: 103: return 0x3;
   544  007F44  0E03               	movlw	3
   545                           
   546                           ;Keypad.c: 104: }
   547  007F46  0012               	return	
   548  007F48                     l945:
   549                           
   550                           ;Keypad.c: 105: else if(b == 1)
   551  007F48  0401               	decf	findKey@b,w,c
   552  007F4A  1002               	iorwf	findKey@b+1,w,c
   553  007F4C  A4D8               	btfss	status,2,c
   554  007F4E  D01A               	goto	l977
   555                           
   556                           ;Keypad.c: 106: {
   557                           ;Keypad.c: 107: if(a == 0)
   558  007F50  5003               	movf	findKey@a,w,c
   559  007F52  1004               	iorwf	findKey@a+1,w,c
   560  007F54  A4D8               	btfss	status,2,c
   561  007F56  D002               	goto	l955
   562                           
   563                           ;Keypad.c: 108: return 0x4;
   564  007F58  0E04               	movlw	4
   565  007F5A  0012               	return	
   566  007F5C                     l955:
   567                           
   568                           ;Keypad.c: 109: else if(a == 1)
   569  007F5C  0403               	decf	findKey@a,w,c
   570  007F5E  1004               	iorwf	findKey@a+1,w,c
   571  007F60  A4D8               	btfss	status,2,c
   572  007F62  D002               	goto	l963
   573                           
   574                           ;Keypad.c: 110: return 0x5;
   575  007F64  0E05               	movlw	5
   576  007F66  0012               	return	
   577  007F68                     l963:
   578                           
   579                           ;Keypad.c: 111: else if(a == 2)
   580  007F68  0E02               	movlw	2
   581  007F6A  1803               	xorwf	findKey@a,w,c
   582  007F6C  1004               	iorwf	findKey@a+1,w,c
   583  007F6E  A4D8               	btfss	status,2,c
   584  007F70  D002               	goto	l971
   585                           
   586                           ;Keypad.c: 112: return 0x6;
   587  007F72  0E06               	movlw	6
   588  007F74  0012               	return	
   589  007F76                     l971:
   590                           
   591                           ;Keypad.c: 113: else if(a == 3)
   592  007F76  0E03               	movlw	3
   593  007F78  1803               	xorwf	findKey@a,w,c
   594  007F7A  1004               	iorwf	findKey@a+1,w,c
   595  007F7C  A4D8               	btfss	status,2,c
   596  007F7E  0012               	return	
   597                           
   598                           ;Keypad.c: 114: return 0x7;
   599  007F80  0E07               	movlw	7
   600                           
   601                           ;Keypad.c: 115: }
   602  007F82  0012               	return	
   603  007F84                     l977:
   604                           
   605                           ;Keypad.c: 116: else if(b == 2)
   606  007F84  0E02               	movlw	2
   607  007F86  1801               	xorwf	findKey@b,w,c
   608  007F88  1002               	iorwf	findKey@b+1,w,c
   609  007F8A  A4D8               	btfss	status,2,c
   610  007F8C  D01A               	goto	l1009
   611                           
   612                           ;Keypad.c: 117: {
   613                           ;Keypad.c: 118: if(a == 0)
   614  007F8E  5003               	movf	findKey@a,w,c
   615  007F90  1004               	iorwf	findKey@a+1,w,c
   616  007F92  A4D8               	btfss	status,2,c
   617  007F94  D002               	goto	l987
   618                           
   619                           ;Keypad.c: 119: return 0x8;
   620  007F96  0E08               	movlw	8
   621  007F98  0012               	return	
   622  007F9A                     l987:
   623                           
   624                           ;Keypad.c: 120: else if(a == 1)
   625  007F9A  0403               	decf	findKey@a,w,c
   626  007F9C  1004               	iorwf	findKey@a+1,w,c
   627  007F9E  A4D8               	btfss	status,2,c
   628  007FA0  D002               	goto	l995
   629                           
   630                           ;Keypad.c: 121: return 0x9;
   631  007FA2  0E09               	movlw	9
   632  007FA4  0012               	return	
   633  007FA6                     l995:
   634                           
   635                           ;Keypad.c: 122: else if(a == 2)
   636  007FA6  0E02               	movlw	2
   637  007FA8  1803               	xorwf	findKey@a,w,c
   638  007FAA  1004               	iorwf	findKey@a+1,w,c
   639  007FAC  A4D8               	btfss	status,2,c
   640  007FAE  D002               	goto	l1003
   641                           
   642                           ;Keypad.c: 123: return 0xA;
   643  007FB0  0E0A               	movlw	10
   644  007FB2  0012               	return	
   645  007FB4                     l1003:
   646                           
   647                           ;Keypad.c: 124: else if(a == 3)
   648  007FB4  0E03               	movlw	3
   649  007FB6  1803               	xorwf	findKey@a,w,c
   650  007FB8  1004               	iorwf	findKey@a+1,w,c
   651  007FBA  A4D8               	btfss	status,2,c
   652  007FBC  0012               	return	
   653                           
   654                           ;Keypad.c: 125: return 0xB;
   655  007FBE  0E0B               	movlw	11
   656                           
   657                           ;Keypad.c: 126: }
   658  007FC0  0012               	return	
   659  007FC2                     l1009:
   660                           
   661                           ;Keypad.c: 127: else if(b == 3)
   662  007FC2  0E03               	movlw	3
   663  007FC4  1801               	xorwf	findKey@b,w,c
   664  007FC6  1002               	iorwf	findKey@b+1,w,c
   665  007FC8  A4D8               	btfss	status,2,c
   666  007FCA  0012               	return	
   667                           
   668                           ;Keypad.c: 128: {
   669                           ;Keypad.c: 129: if(a == 0)
   670  007FCC  5003               	movf	findKey@a,w,c
   671  007FCE  1004               	iorwf	findKey@a+1,w,c
   672  007FD0  A4D8               	btfss	status,2,c
   673  007FD2  D002               	goto	l1019
   674                           
   675                           ;Keypad.c: 130: return 0xC;
   676  007FD4  0E0C               	movlw	12
   677  007FD6  0012               	return	
   678  007FD8                     l1019:
   679                           
   680                           ;Keypad.c: 131: else if(a == 1)
   681  007FD8  0403               	decf	findKey@a,w,c
   682  007FDA  1004               	iorwf	findKey@a+1,w,c
   683  007FDC  A4D8               	btfss	status,2,c
   684  007FDE  D002               	goto	l1027
   685                           
   686                           ;Keypad.c: 132: return 0xD;
   687  007FE0  0E0D               	movlw	13
   688  007FE2  0012               	return	
   689  007FE4                     l1027:
   690                           
   691                           ;Keypad.c: 133: else if(a == 2)
   692  007FE4  0E02               	movlw	2
   693  007FE6  1803               	xorwf	findKey@a,w,c
   694  007FE8  1004               	iorwf	findKey@a+1,w,c
   695  007FEA  A4D8               	btfss	status,2,c
   696  007FEC  D002               	goto	l1035
   697                           
   698                           ;Keypad.c: 134: return 0xE;
   699  007FEE  0E0E               	movlw	14
   700  007FF0  0012               	return	
   701  007FF2                     l1035:
   702                           
   703                           ;Keypad.c: 135: else if(a == 3)
   704  007FF2  0E03               	movlw	3
   705  007FF4  1803               	xorwf	findKey@a,w,c
   706  007FF6  1004               	iorwf	findKey@a+1,w,c
   707  007FF8  A4D8               	btfss	status,2,c
   708  007FFA  0012               	return	
   709                           
   710                           ;Keypad.c: 136: return 0xF;
   711  007FFC  0E0F               	movlw	15
   712  007FFE  0012               	return	
   713  008000                     __end_of_findKey:
   714                           	opt stack 0
   715                           intcon	equ	0xFF2
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           status	equ	0xFD8
   719                           
   720 ;; *************** function _delay_5ms *****************
   721 ;; Defined at:
   722 ;;		line 86 in file "Keypad.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  n               1    wreg     unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  n               1    0[COMRAM] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   736 ;;      Params:         0       0       0       0       0       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0
   739 ;;      Totals:         1       0       0       0       0       0       0       0       0
   740 ;;Total ram usage:        1 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text3
   750  007D8E                     __ptext3:
   751                           	opt stack 0
   752  007D8E                     _delay_5ms:
   753                           	opt stack 30
   754                           
   755                           ;incstack = 0
   756                           ;delay_5ms@n stored from wreg
   757  007D8E  6E01               	movwf	delay_5ms@n,c
   758                           
   759                           ;Keypad.c: 87: while (n-- != 0) {
   760  007D90  D004               	goto	l835
   761  007D92                     l833:
   762                           
   763                           ;Keypad.c: 88: _delay((unsigned long)((5)*(1000000/4000.0)));
   764  007D92  0EFA               	movlw	250
   765  007D94                     u707:
   766  007D94  D000               	nop2	
   767  007D96  2EE8               	decfsz	wreg,f,c
   768  007D98  D7FD               	goto	u707
   769  007D9A                     l835:
   770  007D9A  0601               	decf	delay_5ms@n,f,c
   771  007D9C  2801               	incf	delay_5ms@n,w,c
   772  007D9E  B4D8               	btfsc	status,2,c
   773  007DA0  0012               	return	
   774  007DA2  D7F7               	goto	l833
   775  007DA4                     __end_of_delay_5ms:
   776                           	opt stack 0
   777  0000                     intcon	equ	0xFF2
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           status	equ	0xFD8
   781                           intcon	equ	0xFF2
   782                           postinc0	equ	0xFEE
   783                           wreg	equ	0xFE8
   784                           status	equ	0xFD8
   785                           
   786                           	psect	rparam
   787  0000                     intcon	equ	0xFF2
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_readKeyboard
    _readKeyboard->_findKey

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1022
                          _delay_5ms
                       _readKeyboard
 ---------------------------------------------------------------------------------
 (1) _readKeyboard                                         5     3      2    1007
                                              4 COMRAM     5     3      2
                            _findKey
 ---------------------------------------------------------------------------------
 (2) _findKey                                              4     0      4     784
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _delay_5ms                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_5ms
   _readKeyboard
     _findKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9      11       1       17.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      20        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Dec 20 13:08:17 2016

                      _i 000E                       l90 7EB8                       l91 7EDA  
                     l88 7E96                       l98 7E16              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_WDT$ON 000000  
                    l100 7E04                      l101 7DFC                      l833 7D92  
                    l835 7D9A                      l931 7F2C                      l923 7F20  
                    l945 7F48                      l971 7F76                      l963 7F68  
                    l955 7F5C                      l939 7F3A                      l977 7F84  
                    l995 7FA6                      l987 7F9A             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      u707 7D94                      wreg 000FE8  
           __CFG_LVP$OFF 000000            _columnPressed 000A                     l1003 7FB4  
                   l1009 7FC2                     l1035 7FF2                     l1027 7FE4  
                   l1019 7FD8                     l1051 7E4C                     l1043 7E34  
                   l1055 7E58                     l1063 7E74                     l1081 7EFC  
                   l1059 7E66                     l1085 7F02                     l1095 7DB6  
                   l1099 7DBE                     _LATA 000F89                     _LATB 000F8A  
                   _main 7DA4                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000010            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISA 000F92                    _TRISB 000F93  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000          __end_of_findKey 8000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  status 000FD8          __initialization 7D7C             __end_of_main 7E24  
                 ??_main 000A            __activetblptr 000000            ?_readKeyboard 0005  
                 _ADCON1 000FC1           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 clear_0 7D82                ??_findKey 0005           ??_readKeyboard 0007  
             __accesstop 0060  __end_of__initialization 7D88          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __size_of_delay_5ms 0016  
      __end_of_delay_5ms 7DA4          __CFG_VREGEN$OFF 000000     __end_of_readKeyboard 7F0C  
                __Hparam 0000                  __Lparam 0000                  _dataOut 000C  
                __pcinit 7D7C                  __ramtop 0800                  _findKey 7F0C  
                __ptext0 7DA4                  __ptext1 7E24                  __ptext2 7F0C  
                __ptext3 7D8E               delay_5ms@n 0001     end_of_initialization 7D88  
                postinc0 000FEE                _PORTAbits 000F80                _PORTBbits 000F81  
             _rowPressed 0010      start_initialization 7D7C    __size_of_readKeyboard 00E8  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000A             _readKeyboard 7E24  
              _delay_5ms 7D8E                 ?_findKey 0001                 _LATAbits 000F89  
             ?_delay_5ms 0001                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
          readKeyboard@i 0008                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_findKey 00F4            __size_of_main 0080              ??_delay_5ms 0001  
               findKey@a 0003                 findKey@b 0001    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2      __CFG_FOSC$INTOSC_XT 000000  
