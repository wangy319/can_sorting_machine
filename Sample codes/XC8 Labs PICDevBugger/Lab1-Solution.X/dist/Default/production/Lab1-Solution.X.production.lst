

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sat Dec 31 00:15:54 2016

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.40
    18                           ; Generated 01/12/2016 GMT
    19                           ; 
    20                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4620 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTD	set	3971
    52  0000                     _PORTDbits	set	3971
    53  0000                     _TRISD	set	3989
    54                           
    55                           	psect	smallconst
    56  001000                     __psmallconst:
    57                           	opt stack 0
    58  001000  00                 	db	0
    59  001001                     STR_1:
    60  001001  48                 	db	72	;'H'
    61  001002  65                 	db	101	;'e'
    62  001003  6C                 	db	108	;'l'
    63  001004  6C                 	db	108	;'l'
    64  001005  6F                 	db	111	;'o'
    65  001006  20                 	db	32
    66  001007  77                 	db	119	;'w'
    67  001008  6F                 	db	111	;'o'
    68  001009  72                 	db	114	;'r'
    69  00100A  6C                 	db	108	;'l'
    70  00100B  64                 	db	100	;'d'
    71  00100C  21                 	db	33
    72  00100D  00                 	db	0
    73                           
    74                           ; #config settings
    75  00100E  00                 	db	0	; dummy byte at the end
    76  0000                     
    77                           	psect	cinit
    78  001108                     __pcinit:
    79                           	opt stack 0
    80  001108                     start_initialization:
    81                           	opt stack 0
    82  001108                     __initialization:
    83                           	opt stack 0
    84  001108                     end_of_initialization:
    85                           	opt stack 0
    86  001108                     __end_of__initialization:
    87                           	opt stack 0
    88  001108  0E00               	movlw	low (__Lsmallconst shr (0+16))
    89  00110A  6EF8               	movwf	tblptru,c
    90  00110C  0E10               	movlw	high __Lsmallconst
    91  00110E  6EF7               	movwf	tblptrh,c
    92  001110  0100               	movlb	0
    93  001112  EF78  F008         	goto	_main	;jump to C main() function
    94                           tblptru	equ	0xFF8
    95                           tblptrh	equ	0xFF7
    96                           
    97                           	psect	cstackCOMRAM
    98  000001                     __pcstackCOMRAM:
    99                           	opt stack 0
   100  000001                     LCDWriteNibble@b:
   101                           	opt stack 0
   102                           
   103                           ; 1 bytes @ 0x0
   104  000001                     	ds	1
   105  000002                     LCDWriteNibble@ch:
   106                           	opt stack 0
   107                           
   108                           ; 1 bytes @ 0x1
   109  000002                     	ds	1
   110  000003                     ??_LCDPutCmd:
   111  000003                     ??_LCDPutChar:
   112                           
   113                           ; 1 bytes @ 0x2
   114  000003                     	ds	1
   115  000004                     LCDPutChar@ch:
   116                           	opt stack 0
   117  000004                     LCDPutCmd@ch:
   118                           	opt stack 0
   119                           
   120                           ; 1 bytes @ 0x3
   121  000004                     	ds	1
   122  000005                     LCDPutStr@ptr:
   123                           	opt stack 0
   124                           
   125                           ; 2 bytes @ 0x4
   126  000005                     	ds	2
   127  000007                     tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           
   130                           ; 1 bytes @ 0x6
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   133 ;;
   134 ;; *************** function _main *****************
   135 ;; Defined at:
   136 ;;		line 4 in file "SRC/Lab1-Solution.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;		None
   139 ;; Auto vars:     Size  Location     Type
   140 ;;		None
   141 ;; Return value:  Size  Location     Type
   142 ;;                  2   36[None  ] int 
   143 ;; Registers used:
   144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   145 ;; Tracked objects:
   146 ;;		On entry : 0/0
   147 ;;		On exit  : 0/0
   148 ;;		Unchanged: 0/0
   149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   154 ;;Total ram usage:        0 bytes
   155 ;; Hardware stack levels required when called:    3
   156 ;; This function calls:
   157 ;;		_LCDInit
   158 ;;		_LCDPutCmd
   159 ;;		_LCDPutStr
   160 ;; This function is called by:
   161 ;;		Startup code after reset
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           	psect	text0
   166  0010F0                     __ptext0:
   167                           	opt stack 0
   168  0010F0                     _main:
   169                           	opt stack 28
   170                           
   171                           ;Lab1-Solution.c: 10: LCDInit();
   172                           
   173                           ;incstack = 0
   174  0010F0  EC52  F008         	call	_LCDInit	;wreg free
   175                           
   176                           ;Lab1-Solution.c: 11: LCDPutCmd (0x01);
   177  0010F4  0E01               	movlw	1
   178  0010F6  EC08  F008         	call	_LCDPutCmd
   179                           
   180                           ;Lab1-Solution.c: 14: LCDPutStr("Hello world!");
   181  0010FA  0E01               	movlw	low STR_1
   182  0010FC  6E05               	movwf	LCDPutStr@ptr,c
   183  0010FE  0E10               	movlw	high STR_1
   184  001100  6E06               	movwf	LCDPutStr@ptr+1,c
   185  001102  EC3D  F008         	call	_LCDPutStr	;wreg free
   186  001106                     l37:
   187  001106  D7FF               	goto	l37
   188  001108                     __end_of_main:
   189                           	opt stack 0
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           
   193 ;; *************** function _LCDPutStr *****************
   194 ;; Defined at:
   195 ;;		line 94 in file "SRC/LCD-XC.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;  ptr             2    4[COMRAM] PTR unsigned char 
   198 ;;		 -> STR_1(13), 
   199 ;; Auto vars:     Size  Location     Type
   200 ;;		None
   201 ;; Return value:  Size  Location     Type
   202 ;;                  1    wreg      void 
   203 ;; Registers used:
   204 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   205 ;; Tracked objects:
   206 ;;		On entry : 0/0
   207 ;;		On exit  : 0/0
   208 ;;		Unchanged: 0/0
   209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   214 ;;Total ram usage:        2 bytes
   215 ;; Hardware stack levels used:    1
   216 ;; Hardware stack levels required when called:    2
   217 ;; This function calls:
   218 ;;		_LCDPutChar
   219 ;; This function is called by:
   220 ;;		_main
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           	psect	text1
   225  00107A                     __ptext1:
   226                           	opt stack 0
   227  00107A                     _LCDPutStr:
   228                           	opt stack 28
   229                           
   230                           ;LCD-XC.c: 96: while(*ptr) LCDPutChar(*(ptr++));
   231                           
   232                           ;incstack = 0
   233  00107A  D00A               	goto	l748
   234  00107C                     l744:
   235  00107C  C005  FFF6         	movff	LCDPutStr@ptr,tblptrl
   236  001080  C006  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   237  001084                     	if	0	;tblptru may be non-zero
   238  001084                     	endif
   239  001084                     	if	0	;tblptru may be non-zero
   240  001084                     	endif
   241  001084  0008               	tblrd		*
   242  001086  50F5               	movf	tablat,w,c
   243  001088  EC26  F008         	call	_LCDPutChar
   244  00108C  4A05               	infsnz	LCDPutStr@ptr,f,c
   245  00108E  2A06               	incf	LCDPutStr@ptr+1,f,c
   246  001090                     l748:
   247  001090  C005  FFF6         	movff	LCDPutStr@ptr,tblptrl
   248  001094  C006  FFF7         	movff	LCDPutStr@ptr+1,tblptrh
   249  001098                     	if	0	;tblptru may be non-zero
   250  001098                     	endif
   251  001098                     	if	0	;tblptru may be non-zero
   252  001098                     	endif
   253  001098  0008               	tblrd		*
   254  00109A  50F5               	movf	tablat,w,c
   255  00109C  0900               	iorlw	0
   256  00109E  B4D8               	btfsc	status,2,c
   257  0010A0  0012               	return	
   258  0010A2  D7EC               	goto	l744
   259  0010A4                     __end_of_LCDPutStr:
   260                           	opt stack 0
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           status	equ	0xFD8
   266                           
   267 ;; *************** function _LCDPutChar *****************
   268 ;; Defined at:
   269 ;;		line 56 in file "SRC/LCD-XC.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;  ch              1    wreg     unsigned char 
   272 ;; Auto vars:     Size  Location     Type
   273 ;;  ch              1    3[COMRAM] unsigned char 
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, status,2, status,0, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;Total ram usage:        2 bytes
   288 ;; Hardware stack levels used:    1
   289 ;; Hardware stack levels required when called:    1
   290 ;; This function calls:
   291 ;;		_LCDWriteNibble
   292 ;; This function is called by:
   293 ;;		_LCDPutStr
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text2
   298  00104C                     __ptext2:
   299                           	opt stack 0
   300  00104C                     _LCDPutChar:
   301                           	opt stack 28
   302                           
   303                           ;incstack = 0
   304                           ;LCDPutChar@ch stored from wreg
   305  00104C  6E04               	movwf	LCDPutChar@ch,c
   306                           
   307                           ;LCD-XC.c: 58: _delay((unsigned long)((5)*(10000000L/4000.0)));
   308  00104E  0E11               	movlw	17
   309  001050  6E03               	movwf	??_LCDPutChar& (0+255),c
   310  001052  0E3A               	movlw	58
   311  001054                     u57:
   312  001054  2EE8               	decfsz	wreg,f,c
   313  001056  D7FE               	bra	u57
   314  001058  2E03               	decfsz	??_LCDPutChar& (0+255),f,c
   315  00105A  D7FC               	bra	u57
   316  00105C  D000               	nop2	
   317                           
   318                           ;LCD-XC.c: 59: LCDWriteNibble(ch,1);
   319  00105E  0E01               	movlw	1
   320  001060  6E01               	movwf	LCDWriteNibble@b,c
   321  001062  5004               	movf	LCDPutChar@ch,w,c
   322  001064  EC66  F008         	call	_LCDWriteNibble
   323                           
   324                           ;LCD-XC.c: 60: ch = ch << 4;
   325  001068  3804               	swapf	LCDPutChar@ch,w,c
   326  00106A  0BF0               	andlw	240
   327  00106C  6E04               	movwf	LCDPutChar@ch,c
   328                           
   329                           ;LCD-XC.c: 61: LCDWriteNibble(ch,1);
   330  00106E  0E01               	movlw	1
   331  001070  6E01               	movwf	LCDWriteNibble@b,c
   332  001072  5004               	movf	LCDPutChar@ch,w,c
   333  001074  EC66  F008         	call	_LCDWriteNibble
   334  001078  0012               	return		;funcret
   335  00107A                     __end_of_LCDPutChar:
   336                           	opt stack 0
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           wreg	equ	0xFE8
   342                           status	equ	0xFD8
   343                           
   344 ;; *************** function _LCDInit *****************
   345 ;; Defined at:
   346 ;;		line 7 in file "SRC/LCD-XC.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2, status,0, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    2
   367 ;; This function calls:
   368 ;;		_LCDPutCmd
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text3
   375  0010A4                     __ptext3:
   376                           	opt stack 0
   377  0010A4                     _LCDInit:
   378                           	opt stack 28
   379                           
   380                           ;LCD-XC.c: 9: PORTD = 0x00;
   381                           
   382                           ;incstack = 0
   383  0010A4  0E00               	movlw	0
   384  0010A6  6E83               	movwf	3971,c	;volatile
   385                           
   386                           ;LCD-XC.c: 10: TRISD = 0x00;
   387  0010A8  0E00               	movlw	0
   388  0010AA  6E95               	movwf	3989,c	;volatile
   389                           
   390                           ;LCD-XC.c: 12: LCDPutCmd(0x32);
   391  0010AC  0E32               	movlw	50
   392  0010AE  EC08  F008         	call	_LCDPutCmd
   393                           
   394                           ;LCD-XC.c: 13: LCDPutCmd(0x28);
   395  0010B2  0E28               	movlw	40
   396  0010B4  EC08  F008         	call	_LCDPutCmd
   397                           
   398                           ;LCD-XC.c: 14: LCDPutCmd(0x0C);
   399  0010B8  0E0C               	movlw	12
   400  0010BA  EC08  F008         	call	_LCDPutCmd
   401                           
   402                           ;LCD-XC.c: 15: LCDPutCmd (0x01);
   403  0010BE  0E01               	movlw	1
   404  0010C0  EC08  F008         	call	_LCDPutCmd
   405                           
   406                           ;LCD-XC.c: 16: LCDPutCmd(0x06);
   407  0010C4  0E06               	movlw	6
   408  0010C6  EC08  F008         	call	_LCDPutCmd
   409  0010CA  0012               	return		;funcret
   410  0010CC                     __end_of_LCDInit:
   411                           	opt stack 0
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           wreg	equ	0xFE8
   417                           status	equ	0xFD8
   418                           
   419 ;; *************** function _LCDPutCmd *****************
   420 ;; Defined at:
   421 ;;		line 76 in file "SRC/LCD-XC.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;  ch              1    wreg     unsigned char 
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  ch              1    3[COMRAM] unsigned char 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;Total ram usage:        2 bytes
   440 ;; Hardware stack levels used:    1
   441 ;; Hardware stack levels required when called:    1
   442 ;; This function calls:
   443 ;;		_LCDWriteNibble
   444 ;; This function is called by:
   445 ;;		_LCDInit
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text4
   451  001010                     __ptext4:
   452                           	opt stack 0
   453  001010                     _LCDPutCmd:
   454                           	opt stack 29
   455                           
   456                           ;incstack = 0
   457                           ;LCDPutCmd@ch stored from wreg
   458  001010  6E04               	movwf	LCDPutCmd@ch,c
   459                           
   460                           ;LCD-XC.c: 78: _delay((unsigned long)((5)*(10000000L/4000.0)));
   461  001012  0E11               	movlw	17
   462  001014  6E03               	movwf	??_LCDPutCmd& (0+255),c
   463  001016  0E3A               	movlw	58
   464  001018                     u67:
   465  001018  2EE8               	decfsz	wreg,f,c
   466  00101A  D7FE               	bra	u67
   467  00101C  2E03               	decfsz	??_LCDPutCmd& (0+255),f,c
   468  00101E  D7FC               	bra	u67
   469  001020  D000               	nop2	
   470                           
   471                           ;LCD-XC.c: 79: LCDWriteNibble(ch,0);
   472  001022  0E00               	movlw	0
   473  001024  6E01               	movwf	LCDWriteNibble@b,c
   474  001026  5004               	movf	LCDPutCmd@ch,w,c
   475  001028  EC66  F008         	call	_LCDWriteNibble
   476                           
   477                           ;LCD-XC.c: 80: ch = ch << 4;
   478  00102C  3804               	swapf	LCDPutCmd@ch,w,c
   479  00102E  0BF0               	andlw	240
   480  001030  6E04               	movwf	LCDPutCmd@ch,c
   481                           
   482                           ;LCD-XC.c: 81: _delay((unsigned long)((1)*(10000000L/4000.0)));
   483  001032  0E04               	movlw	4
   484  001034  6E03               	movwf	??_LCDPutCmd& (0+255),c
   485  001036  0E3E               	movlw	62
   486  001038                     u77:
   487  001038  2EE8               	decfsz	wreg,f,c
   488  00103A  D7FE               	bra	u77
   489  00103C  2E03               	decfsz	??_LCDPutCmd& (0+255),f,c
   490  00103E  D7FC               	bra	u77
   491                           
   492                           ;LCD-XC.c: 82: LCDWriteNibble(ch,0);
   493  001040  0E00               	movlw	0
   494  001042  6E01               	movwf	LCDWriteNibble@b,c
   495  001044  5004               	movf	LCDPutCmd@ch,w,c
   496  001046  EC66  F008         	call	_LCDWriteNibble
   497  00104A  0012               	return		;funcret
   498  00104C                     __end_of_LCDPutCmd:
   499                           	opt stack 0
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           wreg	equ	0xFE8
   505                           status	equ	0xFD8
   506                           
   507 ;; *************** function _LCDWriteNibble *****************
   508 ;; Defined at:
   509 ;;		line 32 in file "SRC/LCD-XC.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;  ch              1    wreg     unsigned char 
   512 ;;  b               1    0[COMRAM] unsigned char 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  ch              1    1[COMRAM] unsigned char 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels used:    1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_LCDPutChar
   534 ;;		_LCDPutCmd
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text5
   539  0010CC                     __ptext5:
   540                           	opt stack 0
   541  0010CC                     _LCDWriteNibble:
   542                           	opt stack 28
   543                           
   544                           ;incstack = 0
   545                           ;LCDWriteNibble@ch stored from wreg
   546  0010CC  6E02               	movwf	LCDWriteNibble@ch,c
   547                           
   548                           ;LCD-XC.c: 34: ch = ch & 0xF0;
   549  0010CE  5002               	movf	LCDWriteNibble@ch,w,c
   550  0010D0  0BF0               	andlw	240
   551  0010D2  6E02               	movwf	LCDWriteNibble@ch,c
   552                           
   553                           ;LCD-XC.c: 36: PORTD = PORTD & 0x0F;
   554  0010D4  5083               	movf	3971,w,c	;volatile
   555  0010D6  0B0F               	andlw	15
   556  0010D8  6E83               	movwf	3971,c	;volatile
   557                           
   558                           ;LCD-XC.c: 37: PORTD = PORTD | ch;
   559  0010DA  5083               	movf	3971,w,c	;volatile
   560  0010DC  1002               	iorwf	LCDWriteNibble@ch,w,c
   561  0010DE  6E83               	movwf	3971,c	;volatile
   562                           
   563                           ;LCD-XC.c: 39: PORTDbits.RD2 = b;
   564  0010E0  B001               	btfsc	LCDWriteNibble@b,0,c
   565  0010E2  D002               	bra	u35
   566  0010E4  9483               	bcf	3971,2,c	;volatile
   567  0010E6  D001               	bra	u36
   568  0010E8                     u35:
   569  0010E8  8483               	bsf	3971,2,c	;volatile
   570  0010EA                     u36:
   571                           
   572                           ;LCD-XC.c: 40: PORTDbits.RD3 = 1;
   573  0010EA  8683               	bsf	3971,3,c	;volatile
   574                           
   575                           ;LCD-XC.c: 41: PORTDbits.RD3 = 0;
   576  0010EC  9683               	bcf	3971,3,c	;volatile
   577  0010EE  0012               	return		;funcret
   578  0010F0                     __end_of_LCDWriteNibble:
   579                           	opt stack 0
   580                           tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           wreg	equ	0xFE8
   585                           status	equ	0xFD8
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           wreg	equ	0xFE8
   591                           status	equ	0xFD8
   592                           
   593                           	psect	rparam
   594  0000                     tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           wreg	equ	0xFE8
   599                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      6       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    LCDPutStr@ptr	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_LCDPutStr
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDInit->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1279
                            _LCDInit
                          _LCDPutCmd
                          _LCDPutStr
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            2     0      2     499
                                              4 COMRAM     2     0      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           2     2      0     390
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              0     0      0     390
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutCmd                                            2     2      0     390
                                              2 COMRAM     2     2      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       2     1      1     323
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDInit
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutCmd
     _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      6       6       1        4.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sat Dec 31 00:15:54 2016

            ?_LCDPutChar 0001                       l37 1106                       u35 10E8  
                     u36 10EA                       u57 1054                       u67 1018  
                     u77 1038              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000              __CFG_WDT$ON 000000                      l744 107C  
                    l748 1090             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    wreg 000FE8          __end_of_LCDInit 10CC             __CFG_LVP$OFF 000000  
                   STR_1 1001                     _main 10F0       __size_of_LCDPutCmd 003C  
                   start 0000       __size_of_LCDPutStr 002A            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000              LCDPutCmd@ch 0004  
                  ?_main 0001                    _PORTD 000F83                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
    __size_of_LCDPutChar 002E                    status 000FD8           __CFG_PBADEN$ON 000000  
        __initialization 1108             __end_of_main 1108                   ??_main 0007  
          __activetblptr 000001                ??_LCDInit 0005        __end_of_LCDPutCmd 104C  
           LCDPutChar@ch 0004        __end_of_LCDPutStr 10A4             LCDPutStr@ptr 0005  
         _LCDWriteNibble 10CC           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8   __end_of_LCDWriteNibble 10F0               __accesstop 0080  
__end_of__initialization 1108            ___rparam_used 000001           __pcstackCOMRAM 0001  
           ??_LCDPutChar 0003          ?_LCDWriteNibble 0001       __end_of_LCDPutChar 107A  
                _LCDInit 10A4                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 1000                  __pcinit 1108                  __ramtop 1000  
                __ptext0 10F0                  __ptext1 107A                  __ptext2 104C  
                __ptext3 10A4                  __ptext4 1010                  __ptext5 10CC  
              _LCDPutCmd 1010                _LCDPutStr 107A     end_of_initialization 1108  
              _PORTDbits 000F83               ?_LCDPutCmd 0001               ?_LCDPutStr 0005  
    start_initialization 1108         ??_LCDWriteNibble 0002         __CFG_LPT1OSC$OFF 000000  
               ?_LCDInit 0001              ??_LCDPutCmd 0003              ??_LCDPutStr 0007  
      __CFG_CCP2MX$PORTC 000000         LCDWriteNibble@ch 0002              __smallconst 1000  
       __CFG_WDTPS$32768 000000         __size_of_LCDInit 0028                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 1000       __CFG_BOREN$SBORDIS 000000  
        LCDWriteNibble@b 0001            __size_of_main 0018               _LCDPutChar 104C  
__size_of_LCDWriteNibble 0024  
